

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Oct 25 13:11:47 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F1773
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	intentry,global,class=CODE,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	dabs	1,0x7E,2
    48  0000                     
    49                           ; Version 2.10
    50                           ; Generated 31/07/2019 GMT
    51                           ; 
    52                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC16F1773 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83  0000                     	;# 
    84  0001                     	;# 
    85  0002                     	;# 
    86  0003                     	;# 
    87  0004                     	;# 
    88  0005                     	;# 
    89  0006                     	;# 
    90  0007                     	;# 
    91  0008                     	;# 
    92  0009                     	;# 
    93  000A                     	;# 
    94  000B                     	;# 
    95  000C                     	;# 
    96  000D                     	;# 
    97  000E                     	;# 
    98  0010                     	;# 
    99  0011                     	;# 
   100  0012                     	;# 
   101  0013                     	;# 
   102  0014                     	;# 
   103  0015                     	;# 
   104  0016                     	;# 
   105  0017                     	;# 
   106  0018                     	;# 
   107  0018                     	;# 
   108  0019                     	;# 
   109  001A                     	;# 
   110  001B                     	;# 
   111  001C                     	;# 
   112  001C                     	;# 
   113  001D                     	;# 
   114  001E                     	;# 
   115  001F                     	;# 
   116  008C                     	;# 
   117  008D                     	;# 
   118  008E                     	;# 
   119  0090                     	;# 
   120  0091                     	;# 
   121  0092                     	;# 
   122  0093                     	;# 
   123  0094                     	;# 
   124  0095                     	;# 
   125  0096                     	;# 
   126  0097                     	;# 
   127  0098                     	;# 
   128  0099                     	;# 
   129  009A                     	;# 
   130  009B                     	;# 
   131  009C                     	;# 
   132  009D                     	;# 
   133  009E                     	;# 
   134  009F                     	;# 
   135  010C                     	;# 
   136  010D                     	;# 
   137  010E                     	;# 
   138  0111                     	;# 
   139  0112                     	;# 
   140  0113                     	;# 
   141  0114                     	;# 
   142  0115                     	;# 
   143  0116                     	;# 
   144  0117                     	;# 
   145  0118                     	;# 
   146  0119                     	;# 
   147  011A                     	;# 
   148  011B                     	;# 
   149  011C                     	;# 
   150  011D                     	;# 
   151  018C                     	;# 
   152  018D                     	;# 
   153  018E                     	;# 
   154  0191                     	;# 
   155  0191                     	;# 
   156  0192                     	;# 
   157  0193                     	;# 
   158  0193                     	;# 
   159  0194                     	;# 
   160  0195                     	;# 
   161  0196                     	;# 
   162  0197                     	;# 
   163  0199                     	;# 
   164  0199                     	;# 
   165  0199                     	;# 
   166  019A                     	;# 
   167  019A                     	;# 
   168  019A                     	;# 
   169  019B                     	;# 
   170  019B                     	;# 
   171  019B                     	;# 
   172  019B                     	;# 
   173  019B                     	;# 
   174  019C                     	;# 
   175  019C                     	;# 
   176  019C                     	;# 
   177  019D                     	;# 
   178  019D                     	;# 
   179  019D                     	;# 
   180  019E                     	;# 
   181  019E                     	;# 
   182  019E                     	;# 
   183  019F                     	;# 
   184  019F                     	;# 
   185  019F                     	;# 
   186  019F                     	;# 
   187  019F                     	;# 
   188  020C                     	;# 
   189  020D                     	;# 
   190  020E                     	;# 
   191  0210                     	;# 
   192  0211                     	;# 
   193  0211                     	;# 
   194  0212                     	;# 
   195  0212                     	;# 
   196  0213                     	;# 
   197  0213                     	;# 
   198  0214                     	;# 
   199  0214                     	;# 
   200  0215                     	;# 
   201  0215                     	;# 
   202  0215                     	;# 
   203  0215                     	;# 
   204  0216                     	;# 
   205  0216                     	;# 
   206  0217                     	;# 
   207  0217                     	;# 
   208  021B                     	;# 
   209  021C                     	;# 
   210  021D                     	;# 
   211  021E                     	;# 
   212  021F                     	;# 
   213  028C                     	;# 
   214  028D                     	;# 
   215  028E                     	;# 
   216  0291                     	;# 
   217  0291                     	;# 
   218  0292                     	;# 
   219  0293                     	;# 
   220  0294                     	;# 
   221  0295                     	;# 
   222  0295                     	;# 
   223  0296                     	;# 
   224  0297                     	;# 
   225  0298                     	;# 
   226  0299                     	;# 
   227  0299                     	;# 
   228  029A                     	;# 
   229  029B                     	;# 
   230  029C                     	;# 
   231  029E                     	;# 
   232  029F                     	;# 
   233  030C                     	;# 
   234  030D                     	;# 
   235  030E                     	;# 
   236  0315                     	;# 
   237  0316                     	;# 
   238  0317                     	;# 
   239  0318                     	;# 
   240  0319                     	;# 
   241  031B                     	;# 
   242  031C                     	;# 
   243  031D                     	;# 
   244  031E                     	;# 
   245  031F                     	;# 
   246  038C                     	;# 
   247  038D                     	;# 
   248  038E                     	;# 
   249  0390                     	;# 
   250  0391                     	;# 
   251  0392                     	;# 
   252  0393                     	;# 
   253  0394                     	;# 
   254  0395                     	;# 
   255  0396                     	;# 
   256  0397                     	;# 
   257  0398                     	;# 
   258  0399                     	;# 
   259  039D                     	;# 
   260  039E                     	;# 
   261  039F                     	;# 
   262  040D                     	;# 
   263  040F                     	;# 
   264  040F                     	;# 
   265  0410                     	;# 
   266  0411                     	;# 
   267  0412                     	;# 
   268  0413                     	;# 
   269  0413                     	;# 
   270  0414                     	;# 
   271  0414                     	;# 
   272  0415                     	;# 
   273  0416                     	;# 
   274  0417                     	;# 
   275  0418                     	;# 
   276  041A                     	;# 
   277  041A                     	;# 
   278  041B                     	;# 
   279  041B                     	;# 
   280  041C                     	;# 
   281  041D                     	;# 
   282  041E                     	;# 
   283  041F                     	;# 
   284  048E                     	;# 
   285  048E                     	;# 
   286  048F                     	;# 
   287  0490                     	;# 
   288  0491                     	;# 
   289  0492                     	;# 
   290  0493                     	;# 
   291  0493                     	;# 
   292  0494                     	;# 
   293  0494                     	;# 
   294  0495                     	;# 
   295  0496                     	;# 
   296  0497                     	;# 
   297  0498                     	;# 
   298  049A                     	;# 
   299  049A                     	;# 
   300  049B                     	;# 
   301  049B                     	;# 
   302  049C                     	;# 
   303  049D                     	;# 
   304  049E                     	;# 
   305  049F                     	;# 
   306  050F                     	;# 
   307  0510                     	;# 
   308  0511                     	;# 
   309  0512                     	;# 
   310  0513                     	;# 
   311  0514                     	;# 
   312  0515                     	;# 
   313  0516                     	;# 
   314  0517                     	;# 
   315  0518                     	;# 
   316  0519                     	;# 
   317  051A                     	;# 
   318  058D                     	;# 
   319  058E                     	;# 
   320  058F                     	;# 
   321  058F                     	;# 
   322  058F                     	;# 
   323  0590                     	;# 
   324  0590                     	;# 
   325  0591                     	;# 
   326  0592                     	;# 
   327  0592                     	;# 
   328  0592                     	;# 
   329  0593                     	;# 
   330  0593                     	;# 
   331  0594                     	;# 
   332  0595                     	;# 
   333  0595                     	;# 
   334  0596                     	;# 
   335  0597                     	;# 
   336  0597                     	;# 
   337  0598                     	;# 
   338  0599                     	;# 
   339  0599                     	;# 
   340  0599                     	;# 
   341  059A                     	;# 
   342  059A                     	;# 
   343  059E                     	;# 
   344  059F                     	;# 
   345  059F                     	;# 
   346  0614                     	;# 
   347  0614                     	;# 
   348  0615                     	;# 
   349  0616                     	;# 
   350  0617                     	;# 
   351  0617                     	;# 
   352  0618                     	;# 
   353  0619                     	;# 
   354  061A                     	;# 
   355  061A                     	;# 
   356  061B                     	;# 
   357  061C                     	;# 
   358  068D                     	;# 
   359  068E                     	;# 
   360  068F                     	;# 
   361  0690                     	;# 
   362  0691                     	;# 
   363  0692                     	;# 
   364  0693                     	;# 
   365  0694                     	;# 
   366  0695                     	;# 
   367  0696                     	;# 
   368  0697                     	;# 
   369  0698                     	;# 
   370  0699                     	;# 
   371  069A                     	;# 
   372  069B                     	;# 
   373  069C                     	;# 
   374  069D                     	;# 
   375  069E                     	;# 
   376  069F                     	;# 
   377  070D                     	;# 
   378  070E                     	;# 
   379  070F                     	;# 
   380  0710                     	;# 
   381  0711                     	;# 
   382  0712                     	;# 
   383  0713                     	;# 
   384  0714                     	;# 
   385  0715                     	;# 
   386  0716                     	;# 
   387  0717                     	;# 
   388  0718                     	;# 
   389  0719                     	;# 
   390  071A                     	;# 
   391  071B                     	;# 
   392  071C                     	;# 
   393  071D                     	;# 
   394  071E                     	;# 
   395  071F                     	;# 
   396  078E                     	;# 
   397  078F                     	;# 
   398  0790                     	;# 
   399  0791                     	;# 
   400  0792                     	;# 
   401  0793                     	;# 
   402  0794                     	;# 
   403  0795                     	;# 
   404  0796                     	;# 
   405  0797                     	;# 
   406  0798                     	;# 
   407  0799                     	;# 
   408  079A                     	;# 
   409  079B                     	;# 
   410  079C                     	;# 
   411  079D                     	;# 
   412  079E                     	;# 
   413  079F                     	;# 
   414  080D                     	;# 
   415  080E                     	;# 
   416  080F                     	;# 
   417  0810                     	;# 
   418  0811                     	;# 
   419  0812                     	;# 
   420  0813                     	;# 
   421  0814                     	;# 
   422  0815                     	;# 
   423  0816                     	;# 
   424  0817                     	;# 
   425  0818                     	;# 
   426  0819                     	;# 
   427  081A                     	;# 
   428  081B                     	;# 
   429  081C                     	;# 
   430  081D                     	;# 
   431  081E                     	;# 
   432  081F                     	;# 
   433  090C                     	;# 
   434  090D                     	;# 
   435  090E                     	;# 
   436  090F                     	;# 
   437  0910                     	;# 
   438  0911                     	;# 
   439  0912                     	;# 
   440  0913                     	;# 
   441  0914                     	;# 
   442  0915                     	;# 
   443  0916                     	;# 
   444  0917                     	;# 
   445  0D8E                     	;# 
   446  0D8F                     	;# 
   447  0D90                     	;# 
   448  0D91                     	;# 
   449  0D91                     	;# 
   450  0D92                     	;# 
   451  0D93                     	;# 
   452  0D93                     	;# 
   453  0D94                     	;# 
   454  0D95                     	;# 
   455  0D95                     	;# 
   456  0D96                     	;# 
   457  0D97                     	;# 
   458  0D97                     	;# 
   459  0D98                     	;# 
   460  0D99                     	;# 
   461  0D99                     	;# 
   462  0D9A                     	;# 
   463  0D9B                     	;# 
   464  0D9C                     	;# 
   465  0D9C                     	;# 
   466  0D9D                     	;# 
   467  0D9D                     	;# 
   468  0D9E                     	;# 
   469  0D9F                     	;# 
   470  0DA0                     	;# 
   471  0DA1                     	;# 
   472  0DA1                     	;# 
   473  0DA2                     	;# 
   474  0DA3                     	;# 
   475  0DA3                     	;# 
   476  0DA4                     	;# 
   477  0DA5                     	;# 
   478  0DA5                     	;# 
   479  0DA6                     	;# 
   480  0DA7                     	;# 
   481  0DA7                     	;# 
   482  0DA8                     	;# 
   483  0DA9                     	;# 
   484  0DA9                     	;# 
   485  0DAA                     	;# 
   486  0DAB                     	;# 
   487  0DAC                     	;# 
   488  0DAC                     	;# 
   489  0DAD                     	;# 
   490  0DAD                     	;# 
   491  0DAE                     	;# 
   492  0DAF                     	;# 
   493  0DB0                     	;# 
   494  0DB1                     	;# 
   495  0DB1                     	;# 
   496  0DB2                     	;# 
   497  0DB3                     	;# 
   498  0DB3                     	;# 
   499  0DB4                     	;# 
   500  0DB5                     	;# 
   501  0DB5                     	;# 
   502  0DB6                     	;# 
   503  0DB7                     	;# 
   504  0DB7                     	;# 
   505  0DB8                     	;# 
   506  0DB9                     	;# 
   507  0DB9                     	;# 
   508  0DBA                     	;# 
   509  0DBB                     	;# 
   510  0DBC                     	;# 
   511  0DBC                     	;# 
   512  0DBD                     	;# 
   513  0DBD                     	;# 
   514  0DBE                     	;# 
   515  0DBF                     	;# 
   516  0DC0                     	;# 
   517  0E0C                     	;# 
   518  0E0D                     	;# 
   519  0E0E                     	;# 
   520  0E0F                     	;# 
   521  0E10                     	;# 
   522  0E11                     	;# 
   523  0E12                     	;# 
   524  0E13                     	;# 
   525  0E14                     	;# 
   526  0E15                     	;# 
   527  0E15                     	;# 
   528  0E15                     	;# 
   529  0E16                     	;# 
   530  0E16                     	;# 
   531  0E16                     	;# 
   532  0E17                     	;# 
   533  0E17                     	;# 
   534  0E17                     	;# 
   535  0E18                     	;# 
   536  0E18                     	;# 
   537  0E18                     	;# 
   538  0E19                     	;# 
   539  0E1A                     	;# 
   540  0E1B                     	;# 
   541  0E1D                     	;# 
   542  0E1E                     	;# 
   543  0E1F                     	;# 
   544  0E21                     	;# 
   545  0E22                     	;# 
   546  0E23                     	;# 
   547  0E24                     	;# 
   548  0E25                     	;# 
   549  0E26                     	;# 
   550  0E27                     	;# 
   551  0E28                     	;# 
   552  0E29                     	;# 
   553  0E2D                     	;# 
   554  0E2E                     	;# 
   555  0E2F                     	;# 
   556  0E30                     	;# 
   557  0E31                     	;# 
   558  0E32                     	;# 
   559  0E35                     	;# 
   560  0E36                     	;# 
   561  0E37                     	;# 
   562  0E38                     	;# 
   563  0E39                     	;# 
   564  0E3A                     	;# 
   565  0E3B                     	;# 
   566  0E3C                     	;# 
   567  0E3D                     	;# 
   568  0E3E                     	;# 
   569  0E90                     	;# 
   570  0E91                     	;# 
   571  0E92                     	;# 
   572  0E93                     	;# 
   573  0E94                     	;# 
   574  0E95                     	;# 
   575  0E96                     	;# 
   576  0E97                     	;# 
   577  0E98                     	;# 
   578  0E99                     	;# 
   579  0E9A                     	;# 
   580  0E9B                     	;# 
   581  0E9C                     	;# 
   582  0E9D                     	;# 
   583  0E9E                     	;# 
   584  0E9F                     	;# 
   585  0EA0                     	;# 
   586  0EA1                     	;# 
   587  0EA2                     	;# 
   588  0EA3                     	;# 
   589  0EA4                     	;# 
   590  0EA5                     	;# 
   591  0EA6                     	;# 
   592  0EA7                     	;# 
   593  0F0F                     	;# 
   594  0F10                     	;# 
   595  0F11                     	;# 
   596  0F12                     	;# 
   597  0F13                     	;# 
   598  0F14                     	;# 
   599  0F15                     	;# 
   600  0F16                     	;# 
   601  0F17                     	;# 
   602  0F18                     	;# 
   603  0F19                     	;# 
   604  0F1A                     	;# 
   605  0F1B                     	;# 
   606  0F1C                     	;# 
   607  0F1D                     	;# 
   608  0F1E                     	;# 
   609  0F1F                     	;# 
   610  0F20                     	;# 
   611  0F21                     	;# 
   612  0F22                     	;# 
   613  0F23                     	;# 
   614  0F24                     	;# 
   615  0F25                     	;# 
   616  0F26                     	;# 
   617  0F27                     	;# 
   618  0F28                     	;# 
   619  0F29                     	;# 
   620  0F2A                     	;# 
   621  0F2B                     	;# 
   622  0F2C                     	;# 
   623  0F2D                     	;# 
   624  0F2E                     	;# 
   625  0F2F                     	;# 
   626  0F30                     	;# 
   627  0F31                     	;# 
   628  0F32                     	;# 
   629  0F33                     	;# 
   630  0F34                     	;# 
   631  0F35                     	;# 
   632  0F36                     	;# 
   633  0F37                     	;# 
   634  0FE4                     	;# 
   635  0FE5                     	;# 
   636  0FE6                     	;# 
   637  0FE7                     	;# 
   638  0FE8                     	;# 
   639  0FE9                     	;# 
   640  0FEA                     	;# 
   641  0FEB                     	;# 
   642  0FED                     	;# 
   643  0FEE                     	;# 
   644  0FEF                     	;# 
   645  0000                     	;# 
   646  0001                     	;# 
   647  0002                     	;# 
   648  0003                     	;# 
   649  0004                     	;# 
   650  0005                     	;# 
   651  0006                     	;# 
   652  0007                     	;# 
   653  0008                     	;# 
   654  0009                     	;# 
   655  000A                     	;# 
   656  000B                     	;# 
   657  000C                     	;# 
   658  000D                     	;# 
   659  000E                     	;# 
   660  0010                     	;# 
   661  0011                     	;# 
   662  0012                     	;# 
   663  0013                     	;# 
   664  0014                     	;# 
   665  0015                     	;# 
   666  0016                     	;# 
   667  0017                     	;# 
   668  0018                     	;# 
   669  0018                     	;# 
   670  0019                     	;# 
   671  001A                     	;# 
   672  001B                     	;# 
   673  001C                     	;# 
   674  001C                     	;# 
   675  001D                     	;# 
   676  001E                     	;# 
   677  001F                     	;# 
   678  008C                     	;# 
   679  008D                     	;# 
   680  008E                     	;# 
   681  0090                     	;# 
   682  0091                     	;# 
   683  0092                     	;# 
   684  0093                     	;# 
   685  0094                     	;# 
   686  0095                     	;# 
   687  0096                     	;# 
   688  0097                     	;# 
   689  0098                     	;# 
   690  0099                     	;# 
   691  009A                     	;# 
   692  009B                     	;# 
   693  009C                     	;# 
   694  009D                     	;# 
   695  009E                     	;# 
   696  009F                     	;# 
   697  010C                     	;# 
   698  010D                     	;# 
   699  010E                     	;# 
   700  0111                     	;# 
   701  0112                     	;# 
   702  0113                     	;# 
   703  0114                     	;# 
   704  0115                     	;# 
   705  0116                     	;# 
   706  0117                     	;# 
   707  0118                     	;# 
   708  0119                     	;# 
   709  011A                     	;# 
   710  011B                     	;# 
   711  011C                     	;# 
   712  011D                     	;# 
   713  018C                     	;# 
   714  018D                     	;# 
   715  018E                     	;# 
   716  0191                     	;# 
   717  0191                     	;# 
   718  0192                     	;# 
   719  0193                     	;# 
   720  0193                     	;# 
   721  0194                     	;# 
   722  0195                     	;# 
   723  0196                     	;# 
   724  0197                     	;# 
   725  0199                     	;# 
   726  0199                     	;# 
   727  0199                     	;# 
   728  019A                     	;# 
   729  019A                     	;# 
   730  019A                     	;# 
   731  019B                     	;# 
   732  019B                     	;# 
   733  019B                     	;# 
   734  019B                     	;# 
   735  019B                     	;# 
   736  019C                     	;# 
   737  019C                     	;# 
   738  019C                     	;# 
   739  019D                     	;# 
   740  019D                     	;# 
   741  019D                     	;# 
   742  019E                     	;# 
   743  019E                     	;# 
   744  019E                     	;# 
   745  019F                     	;# 
   746  019F                     	;# 
   747  019F                     	;# 
   748  019F                     	;# 
   749  019F                     	;# 
   750  020C                     	;# 
   751  020D                     	;# 
   752  020E                     	;# 
   753  0210                     	;# 
   754  0211                     	;# 
   755  0211                     	;# 
   756  0212                     	;# 
   757  0212                     	;# 
   758  0213                     	;# 
   759  0213                     	;# 
   760  0214                     	;# 
   761  0214                     	;# 
   762  0215                     	;# 
   763  0215                     	;# 
   764  0215                     	;# 
   765  0215                     	;# 
   766  0216                     	;# 
   767  0216                     	;# 
   768  0217                     	;# 
   769  0217                     	;# 
   770  021B                     	;# 
   771  021C                     	;# 
   772  021D                     	;# 
   773  021E                     	;# 
   774  021F                     	;# 
   775  028C                     	;# 
   776  028D                     	;# 
   777  028E                     	;# 
   778  0291                     	;# 
   779  0291                     	;# 
   780  0292                     	;# 
   781  0293                     	;# 
   782  0294                     	;# 
   783  0295                     	;# 
   784  0295                     	;# 
   785  0296                     	;# 
   786  0297                     	;# 
   787  0298                     	;# 
   788  0299                     	;# 
   789  0299                     	;# 
   790  029A                     	;# 
   791  029B                     	;# 
   792  029C                     	;# 
   793  029E                     	;# 
   794  029F                     	;# 
   795  030C                     	;# 
   796  030D                     	;# 
   797  030E                     	;# 
   798  0315                     	;# 
   799  0316                     	;# 
   800  0317                     	;# 
   801  0318                     	;# 
   802  0319                     	;# 
   803  031B                     	;# 
   804  031C                     	;# 
   805  031D                     	;# 
   806  031E                     	;# 
   807  031F                     	;# 
   808  038C                     	;# 
   809  038D                     	;# 
   810  038E                     	;# 
   811  0390                     	;# 
   812  0391                     	;# 
   813  0392                     	;# 
   814  0393                     	;# 
   815  0394                     	;# 
   816  0395                     	;# 
   817  0396                     	;# 
   818  0397                     	;# 
   819  0398                     	;# 
   820  0399                     	;# 
   821  039D                     	;# 
   822  039E                     	;# 
   823  039F                     	;# 
   824  040D                     	;# 
   825  040F                     	;# 
   826  040F                     	;# 
   827  0410                     	;# 
   828  0411                     	;# 
   829  0412                     	;# 
   830  0413                     	;# 
   831  0413                     	;# 
   832  0414                     	;# 
   833  0414                     	;# 
   834  0415                     	;# 
   835  0416                     	;# 
   836  0417                     	;# 
   837  0418                     	;# 
   838  041A                     	;# 
   839  041A                     	;# 
   840  041B                     	;# 
   841  041B                     	;# 
   842  041C                     	;# 
   843  041D                     	;# 
   844  041E                     	;# 
   845  041F                     	;# 
   846  048E                     	;# 
   847  048E                     	;# 
   848  048F                     	;# 
   849  0490                     	;# 
   850  0491                     	;# 
   851  0492                     	;# 
   852  0493                     	;# 
   853  0493                     	;# 
   854  0494                     	;# 
   855  0494                     	;# 
   856  0495                     	;# 
   857  0496                     	;# 
   858  0497                     	;# 
   859  0498                     	;# 
   860  049A                     	;# 
   861  049A                     	;# 
   862  049B                     	;# 
   863  049B                     	;# 
   864  049C                     	;# 
   865  049D                     	;# 
   866  049E                     	;# 
   867  049F                     	;# 
   868  050F                     	;# 
   869  0510                     	;# 
   870  0511                     	;# 
   871  0512                     	;# 
   872  0513                     	;# 
   873  0514                     	;# 
   874  0515                     	;# 
   875  0516                     	;# 
   876  0517                     	;# 
   877  0518                     	;# 
   878  0519                     	;# 
   879  051A                     	;# 
   880  058D                     	;# 
   881  058E                     	;# 
   882  058F                     	;# 
   883  058F                     	;# 
   884  058F                     	;# 
   885  0590                     	;# 
   886  0590                     	;# 
   887  0591                     	;# 
   888  0592                     	;# 
   889  0592                     	;# 
   890  0592                     	;# 
   891  0593                     	;# 
   892  0593                     	;# 
   893  0594                     	;# 
   894  0595                     	;# 
   895  0595                     	;# 
   896  0596                     	;# 
   897  0597                     	;# 
   898  0597                     	;# 
   899  0598                     	;# 
   900  0599                     	;# 
   901  0599                     	;# 
   902  0599                     	;# 
   903  059A                     	;# 
   904  059A                     	;# 
   905  059E                     	;# 
   906  059F                     	;# 
   907  059F                     	;# 
   908  0614                     	;# 
   909  0614                     	;# 
   910  0615                     	;# 
   911  0616                     	;# 
   912  0617                     	;# 
   913  0617                     	;# 
   914  0618                     	;# 
   915  0619                     	;# 
   916  061A                     	;# 
   917  061A                     	;# 
   918  061B                     	;# 
   919  061C                     	;# 
   920  068D                     	;# 
   921  068E                     	;# 
   922  068F                     	;# 
   923  0690                     	;# 
   924  0691                     	;# 
   925  0692                     	;# 
   926  0693                     	;# 
   927  0694                     	;# 
   928  0695                     	;# 
   929  0696                     	;# 
   930  0697                     	;# 
   931  0698                     	;# 
   932  0699                     	;# 
   933  069A                     	;# 
   934  069B                     	;# 
   935  069C                     	;# 
   936  069D                     	;# 
   937  069E                     	;# 
   938  069F                     	;# 
   939  070D                     	;# 
   940  070E                     	;# 
   941  070F                     	;# 
   942  0710                     	;# 
   943  0711                     	;# 
   944  0712                     	;# 
   945  0713                     	;# 
   946  0714                     	;# 
   947  0715                     	;# 
   948  0716                     	;# 
   949  0717                     	;# 
   950  0718                     	;# 
   951  0719                     	;# 
   952  071A                     	;# 
   953  071B                     	;# 
   954  071C                     	;# 
   955  071D                     	;# 
   956  071E                     	;# 
   957  071F                     	;# 
   958  078E                     	;# 
   959  078F                     	;# 
   960  0790                     	;# 
   961  0791                     	;# 
   962  0792                     	;# 
   963  0793                     	;# 
   964  0794                     	;# 
   965  0795                     	;# 
   966  0796                     	;# 
   967  0797                     	;# 
   968  0798                     	;# 
   969  0799                     	;# 
   970  079A                     	;# 
   971  079B                     	;# 
   972  079C                     	;# 
   973  079D                     	;# 
   974  079E                     	;# 
   975  079F                     	;# 
   976  080D                     	;# 
   977  080E                     	;# 
   978  080F                     	;# 
   979  0810                     	;# 
   980  0811                     	;# 
   981  0812                     	;# 
   982  0813                     	;# 
   983  0814                     	;# 
   984  0815                     	;# 
   985  0816                     	;# 
   986  0817                     	;# 
   987  0818                     	;# 
   988  0819                     	;# 
   989  081A                     	;# 
   990  081B                     	;# 
   991  081C                     	;# 
   992  081D                     	;# 
   993  081E                     	;# 
   994  081F                     	;# 
   995  090C                     	;# 
   996  090D                     	;# 
   997  090E                     	;# 
   998  090F                     	;# 
   999  0910                     	;# 
  1000  0911                     	;# 
  1001  0912                     	;# 
  1002  0913                     	;# 
  1003  0914                     	;# 
  1004  0915                     	;# 
  1005  0916                     	;# 
  1006  0917                     	;# 
  1007  0D8E                     	;# 
  1008  0D8F                     	;# 
  1009  0D90                     	;# 
  1010  0D91                     	;# 
  1011  0D91                     	;# 
  1012  0D92                     	;# 
  1013  0D93                     	;# 
  1014  0D93                     	;# 
  1015  0D94                     	;# 
  1016  0D95                     	;# 
  1017  0D95                     	;# 
  1018  0D96                     	;# 
  1019  0D97                     	;# 
  1020  0D97                     	;# 
  1021  0D98                     	;# 
  1022  0D99                     	;# 
  1023  0D99                     	;# 
  1024  0D9A                     	;# 
  1025  0D9B                     	;# 
  1026  0D9C                     	;# 
  1027  0D9C                     	;# 
  1028  0D9D                     	;# 
  1029  0D9D                     	;# 
  1030  0D9E                     	;# 
  1031  0D9F                     	;# 
  1032  0DA0                     	;# 
  1033  0DA1                     	;# 
  1034  0DA1                     	;# 
  1035  0DA2                     	;# 
  1036  0DA3                     	;# 
  1037  0DA3                     	;# 
  1038  0DA4                     	;# 
  1039  0DA5                     	;# 
  1040  0DA5                     	;# 
  1041  0DA6                     	;# 
  1042  0DA7                     	;# 
  1043  0DA7                     	;# 
  1044  0DA8                     	;# 
  1045  0DA9                     	;# 
  1046  0DA9                     	;# 
  1047  0DAA                     	;# 
  1048  0DAB                     	;# 
  1049  0DAC                     	;# 
  1050  0DAC                     	;# 
  1051  0DAD                     	;# 
  1052  0DAD                     	;# 
  1053  0DAE                     	;# 
  1054  0DAF                     	;# 
  1055  0DB0                     	;# 
  1056  0DB1                     	;# 
  1057  0DB1                     	;# 
  1058  0DB2                     	;# 
  1059  0DB3                     	;# 
  1060  0DB3                     	;# 
  1061  0DB4                     	;# 
  1062  0DB5                     	;# 
  1063  0DB5                     	;# 
  1064  0DB6                     	;# 
  1065  0DB7                     	;# 
  1066  0DB7                     	;# 
  1067  0DB8                     	;# 
  1068  0DB9                     	;# 
  1069  0DB9                     	;# 
  1070  0DBA                     	;# 
  1071  0DBB                     	;# 
  1072  0DBC                     	;# 
  1073  0DBC                     	;# 
  1074  0DBD                     	;# 
  1075  0DBD                     	;# 
  1076  0DBE                     	;# 
  1077  0DBF                     	;# 
  1078  0DC0                     	;# 
  1079  0E0C                     	;# 
  1080  0E0D                     	;# 
  1081  0E0E                     	;# 
  1082  0E0F                     	;# 
  1083  0E10                     	;# 
  1084  0E11                     	;# 
  1085  0E12                     	;# 
  1086  0E13                     	;# 
  1087  0E14                     	;# 
  1088  0E15                     	;# 
  1089  0E15                     	;# 
  1090  0E15                     	;# 
  1091  0E16                     	;# 
  1092  0E16                     	;# 
  1093  0E16                     	;# 
  1094  0E17                     	;# 
  1095  0E17                     	;# 
  1096  0E17                     	;# 
  1097  0E18                     	;# 
  1098  0E18                     	;# 
  1099  0E18                     	;# 
  1100  0E19                     	;# 
  1101  0E1A                     	;# 
  1102  0E1B                     	;# 
  1103  0E1D                     	;# 
  1104  0E1E                     	;# 
  1105  0E1F                     	;# 
  1106  0E21                     	;# 
  1107  0E22                     	;# 
  1108  0E23                     	;# 
  1109  0E24                     	;# 
  1110  0E25                     	;# 
  1111  0E26                     	;# 
  1112  0E27                     	;# 
  1113  0E28                     	;# 
  1114  0E29                     	;# 
  1115  0E2D                     	;# 
  1116  0E2E                     	;# 
  1117  0E2F                     	;# 
  1118  0E30                     	;# 
  1119  0E31                     	;# 
  1120  0E32                     	;# 
  1121  0E35                     	;# 
  1122  0E36                     	;# 
  1123  0E37                     	;# 
  1124  0E38                     	;# 
  1125  0E39                     	;# 
  1126  0E3A                     	;# 
  1127  0E3B                     	;# 
  1128  0E3C                     	;# 
  1129  0E3D                     	;# 
  1130  0E3E                     	;# 
  1131  0E90                     	;# 
  1132  0E91                     	;# 
  1133  0E92                     	;# 
  1134  0E93                     	;# 
  1135  0E94                     	;# 
  1136  0E95                     	;# 
  1137  0E96                     	;# 
  1138  0E97                     	;# 
  1139  0E98                     	;# 
  1140  0E99                     	;# 
  1141  0E9A                     	;# 
  1142  0E9B                     	;# 
  1143  0E9C                     	;# 
  1144  0E9D                     	;# 
  1145  0E9E                     	;# 
  1146  0E9F                     	;# 
  1147  0EA0                     	;# 
  1148  0EA1                     	;# 
  1149  0EA2                     	;# 
  1150  0EA3                     	;# 
  1151  0EA4                     	;# 
  1152  0EA5                     	;# 
  1153  0EA6                     	;# 
  1154  0EA7                     	;# 
  1155  0F0F                     	;# 
  1156  0F10                     	;# 
  1157  0F11                     	;# 
  1158  0F12                     	;# 
  1159  0F13                     	;# 
  1160  0F14                     	;# 
  1161  0F15                     	;# 
  1162  0F16                     	;# 
  1163  0F17                     	;# 
  1164  0F18                     	;# 
  1165  0F19                     	;# 
  1166  0F1A                     	;# 
  1167  0F1B                     	;# 
  1168  0F1C                     	;# 
  1169  0F1D                     	;# 
  1170  0F1E                     	;# 
  1171  0F1F                     	;# 
  1172  0F20                     	;# 
  1173  0F21                     	;# 
  1174  0F22                     	;# 
  1175  0F23                     	;# 
  1176  0F24                     	;# 
  1177  0F25                     	;# 
  1178  0F26                     	;# 
  1179  0F27                     	;# 
  1180  0F28                     	;# 
  1181  0F29                     	;# 
  1182  0F2A                     	;# 
  1183  0F2B                     	;# 
  1184  0F2C                     	;# 
  1185  0F2D                     	;# 
  1186  0F2E                     	;# 
  1187  0F2F                     	;# 
  1188  0F30                     	;# 
  1189  0F31                     	;# 
  1190  0F32                     	;# 
  1191  0F33                     	;# 
  1192  0F34                     	;# 
  1193  0F35                     	;# 
  1194  0F36                     	;# 
  1195  0F37                     	;# 
  1196  0FE4                     	;# 
  1197  0FE5                     	;# 
  1198  0FE6                     	;# 
  1199  0FE7                     	;# 
  1200  0FE8                     	;# 
  1201  0FE9                     	;# 
  1202  0FEA                     	;# 
  1203  0FEB                     	;# 
  1204  0FED                     	;# 
  1205  0FEE                     	;# 
  1206  0FEF                     	;# 
  1207  0000                     	;# 
  1208  0001                     	;# 
  1209  0002                     	;# 
  1210  0003                     	;# 
  1211  0004                     	;# 
  1212  0005                     	;# 
  1213  0006                     	;# 
  1214  0007                     	;# 
  1215  0008                     	;# 
  1216  0009                     	;# 
  1217  000A                     	;# 
  1218  000B                     	;# 
  1219  000C                     	;# 
  1220  000D                     	;# 
  1221  000E                     	;# 
  1222  0010                     	;# 
  1223  0011                     	;# 
  1224  0012                     	;# 
  1225  0013                     	;# 
  1226  0014                     	;# 
  1227  0015                     	;# 
  1228  0016                     	;# 
  1229  0017                     	;# 
  1230  0018                     	;# 
  1231  0018                     	;# 
  1232  0019                     	;# 
  1233  001A                     	;# 
  1234  001B                     	;# 
  1235  001C                     	;# 
  1236  001C                     	;# 
  1237  001D                     	;# 
  1238  001E                     	;# 
  1239  001F                     	;# 
  1240  008C                     	;# 
  1241  008D                     	;# 
  1242  008E                     	;# 
  1243  0090                     	;# 
  1244  0091                     	;# 
  1245  0092                     	;# 
  1246  0093                     	;# 
  1247  0094                     	;# 
  1248  0095                     	;# 
  1249  0096                     	;# 
  1250  0097                     	;# 
  1251  0098                     	;# 
  1252  0099                     	;# 
  1253  009A                     	;# 
  1254  009B                     	;# 
  1255  009C                     	;# 
  1256  009D                     	;# 
  1257  009E                     	;# 
  1258  009F                     	;# 
  1259  010C                     	;# 
  1260  010D                     	;# 
  1261  010E                     	;# 
  1262  0111                     	;# 
  1263  0112                     	;# 
  1264  0113                     	;# 
  1265  0114                     	;# 
  1266  0115                     	;# 
  1267  0116                     	;# 
  1268  0117                     	;# 
  1269  0118                     	;# 
  1270  0119                     	;# 
  1271  011A                     	;# 
  1272  011B                     	;# 
  1273  011C                     	;# 
  1274  011D                     	;# 
  1275  018C                     	;# 
  1276  018D                     	;# 
  1277  018E                     	;# 
  1278  0191                     	;# 
  1279  0191                     	;# 
  1280  0192                     	;# 
  1281  0193                     	;# 
  1282  0193                     	;# 
  1283  0194                     	;# 
  1284  0195                     	;# 
  1285  0196                     	;# 
  1286  0197                     	;# 
  1287  0199                     	;# 
  1288  0199                     	;# 
  1289  0199                     	;# 
  1290  019A                     	;# 
  1291  019A                     	;# 
  1292  019A                     	;# 
  1293  019B                     	;# 
  1294  019B                     	;# 
  1295  019B                     	;# 
  1296  019B                     	;# 
  1297  019B                     	;# 
  1298  019C                     	;# 
  1299  019C                     	;# 
  1300  019C                     	;# 
  1301  019D                     	;# 
  1302  019D                     	;# 
  1303  019D                     	;# 
  1304  019E                     	;# 
  1305  019E                     	;# 
  1306  019E                     	;# 
  1307  019F                     	;# 
  1308  019F                     	;# 
  1309  019F                     	;# 
  1310  019F                     	;# 
  1311  019F                     	;# 
  1312  020C                     	;# 
  1313  020D                     	;# 
  1314  020E                     	;# 
  1315  0210                     	;# 
  1316  0211                     	;# 
  1317  0211                     	;# 
  1318  0212                     	;# 
  1319  0212                     	;# 
  1320  0213                     	;# 
  1321  0213                     	;# 
  1322  0214                     	;# 
  1323  0214                     	;# 
  1324  0215                     	;# 
  1325  0215                     	;# 
  1326  0215                     	;# 
  1327  0215                     	;# 
  1328  0216                     	;# 
  1329  0216                     	;# 
  1330  0217                     	;# 
  1331  0217                     	;# 
  1332  021B                     	;# 
  1333  021C                     	;# 
  1334  021D                     	;# 
  1335  021E                     	;# 
  1336  021F                     	;# 
  1337  028C                     	;# 
  1338  028D                     	;# 
  1339  028E                     	;# 
  1340  0291                     	;# 
  1341  0291                     	;# 
  1342  0292                     	;# 
  1343  0293                     	;# 
  1344  0294                     	;# 
  1345  0295                     	;# 
  1346  0295                     	;# 
  1347  0296                     	;# 
  1348  0297                     	;# 
  1349  0298                     	;# 
  1350  0299                     	;# 
  1351  0299                     	;# 
  1352  029A                     	;# 
  1353  029B                     	;# 
  1354  029C                     	;# 
  1355  029E                     	;# 
  1356  029F                     	;# 
  1357  030C                     	;# 
  1358  030D                     	;# 
  1359  030E                     	;# 
  1360  0315                     	;# 
  1361  0316                     	;# 
  1362  0317                     	;# 
  1363  0318                     	;# 
  1364  0319                     	;# 
  1365  031B                     	;# 
  1366  031C                     	;# 
  1367  031D                     	;# 
  1368  031E                     	;# 
  1369  031F                     	;# 
  1370  038C                     	;# 
  1371  038D                     	;# 
  1372  038E                     	;# 
  1373  0390                     	;# 
  1374  0391                     	;# 
  1375  0392                     	;# 
  1376  0393                     	;# 
  1377  0394                     	;# 
  1378  0395                     	;# 
  1379  0396                     	;# 
  1380  0397                     	;# 
  1381  0398                     	;# 
  1382  0399                     	;# 
  1383  039D                     	;# 
  1384  039E                     	;# 
  1385  039F                     	;# 
  1386  040D                     	;# 
  1387  040F                     	;# 
  1388  040F                     	;# 
  1389  0410                     	;# 
  1390  0411                     	;# 
  1391  0412                     	;# 
  1392  0413                     	;# 
  1393  0413                     	;# 
  1394  0414                     	;# 
  1395  0414                     	;# 
  1396  0415                     	;# 
  1397  0416                     	;# 
  1398  0417                     	;# 
  1399  0418                     	;# 
  1400  041A                     	;# 
  1401  041A                     	;# 
  1402  041B                     	;# 
  1403  041B                     	;# 
  1404  041C                     	;# 
  1405  041D                     	;# 
  1406  041E                     	;# 
  1407  041F                     	;# 
  1408  048E                     	;# 
  1409  048E                     	;# 
  1410  048F                     	;# 
  1411  0490                     	;# 
  1412  0491                     	;# 
  1413  0492                     	;# 
  1414  0493                     	;# 
  1415  0493                     	;# 
  1416  0494                     	;# 
  1417  0494                     	;# 
  1418  0495                     	;# 
  1419  0496                     	;# 
  1420  0497                     	;# 
  1421  0498                     	;# 
  1422  049A                     	;# 
  1423  049A                     	;# 
  1424  049B                     	;# 
  1425  049B                     	;# 
  1426  049C                     	;# 
  1427  049D                     	;# 
  1428  049E                     	;# 
  1429  049F                     	;# 
  1430  050F                     	;# 
  1431  0510                     	;# 
  1432  0511                     	;# 
  1433  0512                     	;# 
  1434  0513                     	;# 
  1435  0514                     	;# 
  1436  0515                     	;# 
  1437  0516                     	;# 
  1438  0517                     	;# 
  1439  0518                     	;# 
  1440  0519                     	;# 
  1441  051A                     	;# 
  1442  058D                     	;# 
  1443  058E                     	;# 
  1444  058F                     	;# 
  1445  058F                     	;# 
  1446  058F                     	;# 
  1447  0590                     	;# 
  1448  0590                     	;# 
  1449  0591                     	;# 
  1450  0592                     	;# 
  1451  0592                     	;# 
  1452  0592                     	;# 
  1453  0593                     	;# 
  1454  0593                     	;# 
  1455  0594                     	;# 
  1456  0595                     	;# 
  1457  0595                     	;# 
  1458  0596                     	;# 
  1459  0597                     	;# 
  1460  0597                     	;# 
  1461  0598                     	;# 
  1462  0599                     	;# 
  1463  0599                     	;# 
  1464  0599                     	;# 
  1465  059A                     	;# 
  1466  059A                     	;# 
  1467  059E                     	;# 
  1468  059F                     	;# 
  1469  059F                     	;# 
  1470  0614                     	;# 
  1471  0614                     	;# 
  1472  0615                     	;# 
  1473  0616                     	;# 
  1474  0617                     	;# 
  1475  0617                     	;# 
  1476  0618                     	;# 
  1477  0619                     	;# 
  1478  061A                     	;# 
  1479  061A                     	;# 
  1480  061B                     	;# 
  1481  061C                     	;# 
  1482  068D                     	;# 
  1483  068E                     	;# 
  1484  068F                     	;# 
  1485  0690                     	;# 
  1486  0691                     	;# 
  1487  0692                     	;# 
  1488  0693                     	;# 
  1489  0694                     	;# 
  1490  0695                     	;# 
  1491  0696                     	;# 
  1492  0697                     	;# 
  1493  0698                     	;# 
  1494  0699                     	;# 
  1495  069A                     	;# 
  1496  069B                     	;# 
  1497  069C                     	;# 
  1498  069D                     	;# 
  1499  069E                     	;# 
  1500  069F                     	;# 
  1501  070D                     	;# 
  1502  070E                     	;# 
  1503  070F                     	;# 
  1504  0710                     	;# 
  1505  0711                     	;# 
  1506  0712                     	;# 
  1507  0713                     	;# 
  1508  0714                     	;# 
  1509  0715                     	;# 
  1510  0716                     	;# 
  1511  0717                     	;# 
  1512  0718                     	;# 
  1513  0719                     	;# 
  1514  071A                     	;# 
  1515  071B                     	;# 
  1516  071C                     	;# 
  1517  071D                     	;# 
  1518  071E                     	;# 
  1519  071F                     	;# 
  1520  078E                     	;# 
  1521  078F                     	;# 
  1522  0790                     	;# 
  1523  0791                     	;# 
  1524  0792                     	;# 
  1525  0793                     	;# 
  1526  0794                     	;# 
  1527  0795                     	;# 
  1528  0796                     	;# 
  1529  0797                     	;# 
  1530  0798                     	;# 
  1531  0799                     	;# 
  1532  079A                     	;# 
  1533  079B                     	;# 
  1534  079C                     	;# 
  1535  079D                     	;# 
  1536  079E                     	;# 
  1537  079F                     	;# 
  1538  080D                     	;# 
  1539  080E                     	;# 
  1540  080F                     	;# 
  1541  0810                     	;# 
  1542  0811                     	;# 
  1543  0812                     	;# 
  1544  0813                     	;# 
  1545  0814                     	;# 
  1546  0815                     	;# 
  1547  0816                     	;# 
  1548  0817                     	;# 
  1549  0818                     	;# 
  1550  0819                     	;# 
  1551  081A                     	;# 
  1552  081B                     	;# 
  1553  081C                     	;# 
  1554  081D                     	;# 
  1555  081E                     	;# 
  1556  081F                     	;# 
  1557  090C                     	;# 
  1558  090D                     	;# 
  1559  090E                     	;# 
  1560  090F                     	;# 
  1561  0910                     	;# 
  1562  0911                     	;# 
  1563  0912                     	;# 
  1564  0913                     	;# 
  1565  0914                     	;# 
  1566  0915                     	;# 
  1567  0916                     	;# 
  1568  0917                     	;# 
  1569  0D8E                     	;# 
  1570  0D8F                     	;# 
  1571  0D90                     	;# 
  1572  0D91                     	;# 
  1573  0D91                     	;# 
  1574  0D92                     	;# 
  1575  0D93                     	;# 
  1576  0D93                     	;# 
  1577  0D94                     	;# 
  1578  0D95                     	;# 
  1579  0D95                     	;# 
  1580  0D96                     	;# 
  1581  0D97                     	;# 
  1582  0D97                     	;# 
  1583  0D98                     	;# 
  1584  0D99                     	;# 
  1585  0D99                     	;# 
  1586  0D9A                     	;# 
  1587  0D9B                     	;# 
  1588  0D9C                     	;# 
  1589  0D9C                     	;# 
  1590  0D9D                     	;# 
  1591  0D9D                     	;# 
  1592  0D9E                     	;# 
  1593  0D9F                     	;# 
  1594  0DA0                     	;# 
  1595  0DA1                     	;# 
  1596  0DA1                     	;# 
  1597  0DA2                     	;# 
  1598  0DA3                     	;# 
  1599  0DA3                     	;# 
  1600  0DA4                     	;# 
  1601  0DA5                     	;# 
  1602  0DA5                     	;# 
  1603  0DA6                     	;# 
  1604  0DA7                     	;# 
  1605  0DA7                     	;# 
  1606  0DA8                     	;# 
  1607  0DA9                     	;# 
  1608  0DA9                     	;# 
  1609  0DAA                     	;# 
  1610  0DAB                     	;# 
  1611  0DAC                     	;# 
  1612  0DAC                     	;# 
  1613  0DAD                     	;# 
  1614  0DAD                     	;# 
  1615  0DAE                     	;# 
  1616  0DAF                     	;# 
  1617  0DB0                     	;# 
  1618  0DB1                     	;# 
  1619  0DB1                     	;# 
  1620  0DB2                     	;# 
  1621  0DB3                     	;# 
  1622  0DB3                     	;# 
  1623  0DB4                     	;# 
  1624  0DB5                     	;# 
  1625  0DB5                     	;# 
  1626  0DB6                     	;# 
  1627  0DB7                     	;# 
  1628  0DB7                     	;# 
  1629  0DB8                     	;# 
  1630  0DB9                     	;# 
  1631  0DB9                     	;# 
  1632  0DBA                     	;# 
  1633  0DBB                     	;# 
  1634  0DBC                     	;# 
  1635  0DBC                     	;# 
  1636  0DBD                     	;# 
  1637  0DBD                     	;# 
  1638  0DBE                     	;# 
  1639  0DBF                     	;# 
  1640  0DC0                     	;# 
  1641  0E0C                     	;# 
  1642  0E0D                     	;# 
  1643  0E0E                     	;# 
  1644  0E0F                     	;# 
  1645  0E10                     	;# 
  1646  0E11                     	;# 
  1647  0E12                     	;# 
  1648  0E13                     	;# 
  1649  0E14                     	;# 
  1650  0E15                     	;# 
  1651  0E15                     	;# 
  1652  0E15                     	;# 
  1653  0E16                     	;# 
  1654  0E16                     	;# 
  1655  0E16                     	;# 
  1656  0E17                     	;# 
  1657  0E17                     	;# 
  1658  0E17                     	;# 
  1659  0E18                     	;# 
  1660  0E18                     	;# 
  1661  0E18                     	;# 
  1662  0E19                     	;# 
  1663  0E1A                     	;# 
  1664  0E1B                     	;# 
  1665  0E1D                     	;# 
  1666  0E1E                     	;# 
  1667  0E1F                     	;# 
  1668  0E21                     	;# 
  1669  0E22                     	;# 
  1670  0E23                     	;# 
  1671  0E24                     	;# 
  1672  0E25                     	;# 
  1673  0E26                     	;# 
  1674  0E27                     	;# 
  1675  0E28                     	;# 
  1676  0E29                     	;# 
  1677  0E2D                     	;# 
  1678  0E2E                     	;# 
  1679  0E2F                     	;# 
  1680  0E30                     	;# 
  1681  0E31                     	;# 
  1682  0E32                     	;# 
  1683  0E35                     	;# 
  1684  0E36                     	;# 
  1685  0E37                     	;# 
  1686  0E38                     	;# 
  1687  0E39                     	;# 
  1688  0E3A                     	;# 
  1689  0E3B                     	;# 
  1690  0E3C                     	;# 
  1691  0E3D                     	;# 
  1692  0E3E                     	;# 
  1693  0E90                     	;# 
  1694  0E91                     	;# 
  1695  0E92                     	;# 
  1696  0E93                     	;# 
  1697  0E94                     	;# 
  1698  0E95                     	;# 
  1699  0E96                     	;# 
  1700  0E97                     	;# 
  1701  0E98                     	;# 
  1702  0E99                     	;# 
  1703  0E9A                     	;# 
  1704  0E9B                     	;# 
  1705  0E9C                     	;# 
  1706  0E9D                     	;# 
  1707  0E9E                     	;# 
  1708  0E9F                     	;# 
  1709  0EA0                     	;# 
  1710  0EA1                     	;# 
  1711  0EA2                     	;# 
  1712  0EA3                     	;# 
  1713  0EA4                     	;# 
  1714  0EA5                     	;# 
  1715  0EA6                     	;# 
  1716  0EA7                     	;# 
  1717  0F0F                     	;# 
  1718  0F10                     	;# 
  1719  0F11                     	;# 
  1720  0F12                     	;# 
  1721  0F13                     	;# 
  1722  0F14                     	;# 
  1723  0F15                     	;# 
  1724  0F16                     	;# 
  1725  0F17                     	;# 
  1726  0F18                     	;# 
  1727  0F19                     	;# 
  1728  0F1A                     	;# 
  1729  0F1B                     	;# 
  1730  0F1C                     	;# 
  1731  0F1D                     	;# 
  1732  0F1E                     	;# 
  1733  0F1F                     	;# 
  1734  0F20                     	;# 
  1735  0F21                     	;# 
  1736  0F22                     	;# 
  1737  0F23                     	;# 
  1738  0F24                     	;# 
  1739  0F25                     	;# 
  1740  0F26                     	;# 
  1741  0F27                     	;# 
  1742  0F28                     	;# 
  1743  0F29                     	;# 
  1744  0F2A                     	;# 
  1745  0F2B                     	;# 
  1746  0F2C                     	;# 
  1747  0F2D                     	;# 
  1748  0F2E                     	;# 
  1749  0F2F                     	;# 
  1750  0F30                     	;# 
  1751  0F31                     	;# 
  1752  0F32                     	;# 
  1753  0F33                     	;# 
  1754  0F34                     	;# 
  1755  0F35                     	;# 
  1756  0F36                     	;# 
  1757  0F37                     	;# 
  1758  0FE4                     	;# 
  1759  0FE5                     	;# 
  1760  0FE6                     	;# 
  1761  0FE7                     	;# 
  1762  0FE8                     	;# 
  1763  0FE9                     	;# 
  1764  0FEA                     	;# 
  1765  0FEB                     	;# 
  1766  0FED                     	;# 
  1767  0FEE                     	;# 
  1768  0FEF                     	;# 
  1769  0000                     	;# 
  1770  0001                     	;# 
  1771  0002                     	;# 
  1772  0003                     	;# 
  1773  0004                     	;# 
  1774  0005                     	;# 
  1775  0006                     	;# 
  1776  0007                     	;# 
  1777  0008                     	;# 
  1778  0009                     	;# 
  1779  000A                     	;# 
  1780  000B                     	;# 
  1781  000C                     	;# 
  1782  000D                     	;# 
  1783  000E                     	;# 
  1784  0010                     	;# 
  1785  0011                     	;# 
  1786  0012                     	;# 
  1787  0013                     	;# 
  1788  0014                     	;# 
  1789  0015                     	;# 
  1790  0016                     	;# 
  1791  0017                     	;# 
  1792  0018                     	;# 
  1793  0018                     	;# 
  1794  0019                     	;# 
  1795  001A                     	;# 
  1796  001B                     	;# 
  1797  001C                     	;# 
  1798  001C                     	;# 
  1799  001D                     	;# 
  1800  001E                     	;# 
  1801  001F                     	;# 
  1802  008C                     	;# 
  1803  008D                     	;# 
  1804  008E                     	;# 
  1805  0090                     	;# 
  1806  0091                     	;# 
  1807  0092                     	;# 
  1808  0093                     	;# 
  1809  0094                     	;# 
  1810  0095                     	;# 
  1811  0096                     	;# 
  1812  0097                     	;# 
  1813  0098                     	;# 
  1814  0099                     	;# 
  1815  009A                     	;# 
  1816  009B                     	;# 
  1817  009C                     	;# 
  1818  009D                     	;# 
  1819  009E                     	;# 
  1820  009F                     	;# 
  1821  010C                     	;# 
  1822  010D                     	;# 
  1823  010E                     	;# 
  1824  0111                     	;# 
  1825  0112                     	;# 
  1826  0113                     	;# 
  1827  0114                     	;# 
  1828  0115                     	;# 
  1829  0116                     	;# 
  1830  0117                     	;# 
  1831  0118                     	;# 
  1832  0119                     	;# 
  1833  011A                     	;# 
  1834  011B                     	;# 
  1835  011C                     	;# 
  1836  011D                     	;# 
  1837  018C                     	;# 
  1838  018D                     	;# 
  1839  018E                     	;# 
  1840  0191                     	;# 
  1841  0191                     	;# 
  1842  0192                     	;# 
  1843  0193                     	;# 
  1844  0193                     	;# 
  1845  0194                     	;# 
  1846  0195                     	;# 
  1847  0196                     	;# 
  1848  0197                     	;# 
  1849  0199                     	;# 
  1850  0199                     	;# 
  1851  0199                     	;# 
  1852  019A                     	;# 
  1853  019A                     	;# 
  1854  019A                     	;# 
  1855  019B                     	;# 
  1856  019B                     	;# 
  1857  019B                     	;# 
  1858  019B                     	;# 
  1859  019B                     	;# 
  1860  019C                     	;# 
  1861  019C                     	;# 
  1862  019C                     	;# 
  1863  019D                     	;# 
  1864  019D                     	;# 
  1865  019D                     	;# 
  1866  019E                     	;# 
  1867  019E                     	;# 
  1868  019E                     	;# 
  1869  019F                     	;# 
  1870  019F                     	;# 
  1871  019F                     	;# 
  1872  019F                     	;# 
  1873  019F                     	;# 
  1874  020C                     	;# 
  1875  020D                     	;# 
  1876  020E                     	;# 
  1877  0210                     	;# 
  1878  0211                     	;# 
  1879  0211                     	;# 
  1880  0212                     	;# 
  1881  0212                     	;# 
  1882  0213                     	;# 
  1883  0213                     	;# 
  1884  0214                     	;# 
  1885  0214                     	;# 
  1886  0215                     	;# 
  1887  0215                     	;# 
  1888  0215                     	;# 
  1889  0215                     	;# 
  1890  0216                     	;# 
  1891  0216                     	;# 
  1892  0217                     	;# 
  1893  0217                     	;# 
  1894  021B                     	;# 
  1895  021C                     	;# 
  1896  021D                     	;# 
  1897  021E                     	;# 
  1898  021F                     	;# 
  1899  028C                     	;# 
  1900  028D                     	;# 
  1901  028E                     	;# 
  1902  0291                     	;# 
  1903  0291                     	;# 
  1904  0292                     	;# 
  1905  0293                     	;# 
  1906  0294                     	;# 
  1907  0295                     	;# 
  1908  0295                     	;# 
  1909  0296                     	;# 
  1910  0297                     	;# 
  1911  0298                     	;# 
  1912  0299                     	;# 
  1913  0299                     	;# 
  1914  029A                     	;# 
  1915  029B                     	;# 
  1916  029C                     	;# 
  1917  029E                     	;# 
  1918  029F                     	;# 
  1919  030C                     	;# 
  1920  030D                     	;# 
  1921  030E                     	;# 
  1922  0315                     	;# 
  1923  0316                     	;# 
  1924  0317                     	;# 
  1925  0318                     	;# 
  1926  0319                     	;# 
  1927  031B                     	;# 
  1928  031C                     	;# 
  1929  031D                     	;# 
  1930  031E                     	;# 
  1931  031F                     	;# 
  1932  038C                     	;# 
  1933  038D                     	;# 
  1934  038E                     	;# 
  1935  0390                     	;# 
  1936  0391                     	;# 
  1937  0392                     	;# 
  1938  0393                     	;# 
  1939  0394                     	;# 
  1940  0395                     	;# 
  1941  0396                     	;# 
  1942  0397                     	;# 
  1943  0398                     	;# 
  1944  0399                     	;# 
  1945  039D                     	;# 
  1946  039E                     	;# 
  1947  039F                     	;# 
  1948  040D                     	;# 
  1949  040F                     	;# 
  1950  040F                     	;# 
  1951  0410                     	;# 
  1952  0411                     	;# 
  1953  0412                     	;# 
  1954  0413                     	;# 
  1955  0413                     	;# 
  1956  0414                     	;# 
  1957  0414                     	;# 
  1958  0415                     	;# 
  1959  0416                     	;# 
  1960  0417                     	;# 
  1961  0418                     	;# 
  1962  041A                     	;# 
  1963  041A                     	;# 
  1964  041B                     	;# 
  1965  041B                     	;# 
  1966  041C                     	;# 
  1967  041D                     	;# 
  1968  041E                     	;# 
  1969  041F                     	;# 
  1970  048E                     	;# 
  1971  048E                     	;# 
  1972  048F                     	;# 
  1973  0490                     	;# 
  1974  0491                     	;# 
  1975  0492                     	;# 
  1976  0493                     	;# 
  1977  0493                     	;# 
  1978  0494                     	;# 
  1979  0494                     	;# 
  1980  0495                     	;# 
  1981  0496                     	;# 
  1982  0497                     	;# 
  1983  0498                     	;# 
  1984  049A                     	;# 
  1985  049A                     	;# 
  1986  049B                     	;# 
  1987  049B                     	;# 
  1988  049C                     	;# 
  1989  049D                     	;# 
  1990  049E                     	;# 
  1991  049F                     	;# 
  1992  050F                     	;# 
  1993  0510                     	;# 
  1994  0511                     	;# 
  1995  0512                     	;# 
  1996  0513                     	;# 
  1997  0514                     	;# 
  1998  0515                     	;# 
  1999  0516                     	;# 
  2000  0517                     	;# 
  2001  0518                     	;# 
  2002  0519                     	;# 
  2003  051A                     	;# 
  2004  058D                     	;# 
  2005  058E                     	;# 
  2006  058F                     	;# 
  2007  058F                     	;# 
  2008  058F                     	;# 
  2009  0590                     	;# 
  2010  0590                     	;# 
  2011  0591                     	;# 
  2012  0592                     	;# 
  2013  0592                     	;# 
  2014  0592                     	;# 
  2015  0593                     	;# 
  2016  0593                     	;# 
  2017  0594                     	;# 
  2018  0595                     	;# 
  2019  0595                     	;# 
  2020  0596                     	;# 
  2021  0597                     	;# 
  2022  0597                     	;# 
  2023  0598                     	;# 
  2024  0599                     	;# 
  2025  0599                     	;# 
  2026  0599                     	;# 
  2027  059A                     	;# 
  2028  059A                     	;# 
  2029  059E                     	;# 
  2030  059F                     	;# 
  2031  059F                     	;# 
  2032  0614                     	;# 
  2033  0614                     	;# 
  2034  0615                     	;# 
  2035  0616                     	;# 
  2036  0617                     	;# 
  2037  0617                     	;# 
  2038  0618                     	;# 
  2039  0619                     	;# 
  2040  061A                     	;# 
  2041  061A                     	;# 
  2042  061B                     	;# 
  2043  061C                     	;# 
  2044  068D                     	;# 
  2045  068E                     	;# 
  2046  068F                     	;# 
  2047  0690                     	;# 
  2048  0691                     	;# 
  2049  0692                     	;# 
  2050  0693                     	;# 
  2051  0694                     	;# 
  2052  0695                     	;# 
  2053  0696                     	;# 
  2054  0697                     	;# 
  2055  0698                     	;# 
  2056  0699                     	;# 
  2057  069A                     	;# 
  2058  069B                     	;# 
  2059  069C                     	;# 
  2060  069D                     	;# 
  2061  069E                     	;# 
  2062  069F                     	;# 
  2063  070D                     	;# 
  2064  070E                     	;# 
  2065  070F                     	;# 
  2066  0710                     	;# 
  2067  0711                     	;# 
  2068  0712                     	;# 
  2069  0713                     	;# 
  2070  0714                     	;# 
  2071  0715                     	;# 
  2072  0716                     	;# 
  2073  0717                     	;# 
  2074  0718                     	;# 
  2075  0719                     	;# 
  2076  071A                     	;# 
  2077  071B                     	;# 
  2078  071C                     	;# 
  2079  071D                     	;# 
  2080  071E                     	;# 
  2081  071F                     	;# 
  2082  078E                     	;# 
  2083  078F                     	;# 
  2084  0790                     	;# 
  2085  0791                     	;# 
  2086  0792                     	;# 
  2087  0793                     	;# 
  2088  0794                     	;# 
  2089  0795                     	;# 
  2090  0796                     	;# 
  2091  0797                     	;# 
  2092  0798                     	;# 
  2093  0799                     	;# 
  2094  079A                     	;# 
  2095  079B                     	;# 
  2096  079C                     	;# 
  2097  079D                     	;# 
  2098  079E                     	;# 
  2099  079F                     	;# 
  2100  080D                     	;# 
  2101  080E                     	;# 
  2102  080F                     	;# 
  2103  0810                     	;# 
  2104  0811                     	;# 
  2105  0812                     	;# 
  2106  0813                     	;# 
  2107  0814                     	;# 
  2108  0815                     	;# 
  2109  0816                     	;# 
  2110  0817                     	;# 
  2111  0818                     	;# 
  2112  0819                     	;# 
  2113  081A                     	;# 
  2114  081B                     	;# 
  2115  081C                     	;# 
  2116  081D                     	;# 
  2117  081E                     	;# 
  2118  081F                     	;# 
  2119  090C                     	;# 
  2120  090D                     	;# 
  2121  090E                     	;# 
  2122  090F                     	;# 
  2123  0910                     	;# 
  2124  0911                     	;# 
  2125  0912                     	;# 
  2126  0913                     	;# 
  2127  0914                     	;# 
  2128  0915                     	;# 
  2129  0916                     	;# 
  2130  0917                     	;# 
  2131  0D8E                     	;# 
  2132  0D8F                     	;# 
  2133  0D90                     	;# 
  2134  0D91                     	;# 
  2135  0D91                     	;# 
  2136  0D92                     	;# 
  2137  0D93                     	;# 
  2138  0D93                     	;# 
  2139  0D94                     	;# 
  2140  0D95                     	;# 
  2141  0D95                     	;# 
  2142  0D96                     	;# 
  2143  0D97                     	;# 
  2144  0D97                     	;# 
  2145  0D98                     	;# 
  2146  0D99                     	;# 
  2147  0D99                     	;# 
  2148  0D9A                     	;# 
  2149  0D9B                     	;# 
  2150  0D9C                     	;# 
  2151  0D9C                     	;# 
  2152  0D9D                     	;# 
  2153  0D9D                     	;# 
  2154  0D9E                     	;# 
  2155  0D9F                     	;# 
  2156  0DA0                     	;# 
  2157  0DA1                     	;# 
  2158  0DA1                     	;# 
  2159  0DA2                     	;# 
  2160  0DA3                     	;# 
  2161  0DA3                     	;# 
  2162  0DA4                     	;# 
  2163  0DA5                     	;# 
  2164  0DA5                     	;# 
  2165  0DA6                     	;# 
  2166  0DA7                     	;# 
  2167  0DA7                     	;# 
  2168  0DA8                     	;# 
  2169  0DA9                     	;# 
  2170  0DA9                     	;# 
  2171  0DAA                     	;# 
  2172  0DAB                     	;# 
  2173  0DAC                     	;# 
  2174  0DAC                     	;# 
  2175  0DAD                     	;# 
  2176  0DAD                     	;# 
  2177  0DAE                     	;# 
  2178  0DAF                     	;# 
  2179  0DB0                     	;# 
  2180  0DB1                     	;# 
  2181  0DB1                     	;# 
  2182  0DB2                     	;# 
  2183  0DB3                     	;# 
  2184  0DB3                     	;# 
  2185  0DB4                     	;# 
  2186  0DB5                     	;# 
  2187  0DB5                     	;# 
  2188  0DB6                     	;# 
  2189  0DB7                     	;# 
  2190  0DB7                     	;# 
  2191  0DB8                     	;# 
  2192  0DB9                     	;# 
  2193  0DB9                     	;# 
  2194  0DBA                     	;# 
  2195  0DBB                     	;# 
  2196  0DBC                     	;# 
  2197  0DBC                     	;# 
  2198  0DBD                     	;# 
  2199  0DBD                     	;# 
  2200  0DBE                     	;# 
  2201  0DBF                     	;# 
  2202  0DC0                     	;# 
  2203  0E0C                     	;# 
  2204  0E0D                     	;# 
  2205  0E0E                     	;# 
  2206  0E0F                     	;# 
  2207  0E10                     	;# 
  2208  0E11                     	;# 
  2209  0E12                     	;# 
  2210  0E13                     	;# 
  2211  0E14                     	;# 
  2212  0E15                     	;# 
  2213  0E15                     	;# 
  2214  0E15                     	;# 
  2215  0E16                     	;# 
  2216  0E16                     	;# 
  2217  0E16                     	;# 
  2218  0E17                     	;# 
  2219  0E17                     	;# 
  2220  0E17                     	;# 
  2221  0E18                     	;# 
  2222  0E18                     	;# 
  2223  0E18                     	;# 
  2224  0E19                     	;# 
  2225  0E1A                     	;# 
  2226  0E1B                     	;# 
  2227  0E1D                     	;# 
  2228  0E1E                     	;# 
  2229  0E1F                     	;# 
  2230  0E21                     	;# 
  2231  0E22                     	;# 
  2232  0E23                     	;# 
  2233  0E24                     	;# 
  2234  0E25                     	;# 
  2235  0E26                     	;# 
  2236  0E27                     	;# 
  2237  0E28                     	;# 
  2238  0E29                     	;# 
  2239  0E2D                     	;# 
  2240  0E2E                     	;# 
  2241  0E2F                     	;# 
  2242  0E30                     	;# 
  2243  0E31                     	;# 
  2244  0E32                     	;# 
  2245  0E35                     	;# 
  2246  0E36                     	;# 
  2247  0E37                     	;# 
  2248  0E38                     	;# 
  2249  0E39                     	;# 
  2250  0E3A                     	;# 
  2251  0E3B                     	;# 
  2252  0E3C                     	;# 
  2253  0E3D                     	;# 
  2254  0E3E                     	;# 
  2255  0E90                     	;# 
  2256  0E91                     	;# 
  2257  0E92                     	;# 
  2258  0E93                     	;# 
  2259  0E94                     	;# 
  2260  0E95                     	;# 
  2261  0E96                     	;# 
  2262  0E97                     	;# 
  2263  0E98                     	;# 
  2264  0E99                     	;# 
  2265  0E9A                     	;# 
  2266  0E9B                     	;# 
  2267  0E9C                     	;# 
  2268  0E9D                     	;# 
  2269  0E9E                     	;# 
  2270  0E9F                     	;# 
  2271  0EA0                     	;# 
  2272  0EA1                     	;# 
  2273  0EA2                     	;# 
  2274  0EA3                     	;# 
  2275  0EA4                     	;# 
  2276  0EA5                     	;# 
  2277  0EA6                     	;# 
  2278  0EA7                     	;# 
  2279  0F0F                     	;# 
  2280  0F10                     	;# 
  2281  0F11                     	;# 
  2282  0F12                     	;# 
  2283  0F13                     	;# 
  2284  0F14                     	;# 
  2285  0F15                     	;# 
  2286  0F16                     	;# 
  2287  0F17                     	;# 
  2288  0F18                     	;# 
  2289  0F19                     	;# 
  2290  0F1A                     	;# 
  2291  0F1B                     	;# 
  2292  0F1C                     	;# 
  2293  0F1D                     	;# 
  2294  0F1E                     	;# 
  2295  0F1F                     	;# 
  2296  0F20                     	;# 
  2297  0F21                     	;# 
  2298  0F22                     	;# 
  2299  0F23                     	;# 
  2300  0F24                     	;# 
  2301  0F25                     	;# 
  2302  0F26                     	;# 
  2303  0F27                     	;# 
  2304  0F28                     	;# 
  2305  0F29                     	;# 
  2306  0F2A                     	;# 
  2307  0F2B                     	;# 
  2308  0F2C                     	;# 
  2309  0F2D                     	;# 
  2310  0F2E                     	;# 
  2311  0F2F                     	;# 
  2312  0F30                     	;# 
  2313  0F31                     	;# 
  2314  0F32                     	;# 
  2315  0F33                     	;# 
  2316  0F34                     	;# 
  2317  0F35                     	;# 
  2318  0F36                     	;# 
  2319  0F37                     	;# 
  2320  0FE4                     	;# 
  2321  0FE5                     	;# 
  2322  0FE6                     	;# 
  2323  0FE7                     	;# 
  2324  0FE8                     	;# 
  2325  0FE9                     	;# 
  2326  0FEA                     	;# 
  2327  0FEB                     	;# 
  2328  0FED                     	;# 
  2329  0FEE                     	;# 
  2330  0FEF                     	;# 
  2331  0000                     	;# 
  2332  0001                     	;# 
  2333  0002                     	;# 
  2334  0003                     	;# 
  2335  0004                     	;# 
  2336  0005                     	;# 
  2337  0006                     	;# 
  2338  0007                     	;# 
  2339  0008                     	;# 
  2340  0009                     	;# 
  2341  000A                     	;# 
  2342  000B                     	;# 
  2343  000C                     	;# 
  2344  000D                     	;# 
  2345  000E                     	;# 
  2346  0010                     	;# 
  2347  0011                     	;# 
  2348  0012                     	;# 
  2349  0013                     	;# 
  2350  0014                     	;# 
  2351  0015                     	;# 
  2352  0016                     	;# 
  2353  0017                     	;# 
  2354  0018                     	;# 
  2355  0018                     	;# 
  2356  0019                     	;# 
  2357  001A                     	;# 
  2358  001B                     	;# 
  2359  001C                     	;# 
  2360  001C                     	;# 
  2361  001D                     	;# 
  2362  001E                     	;# 
  2363  001F                     	;# 
  2364  008C                     	;# 
  2365  008D                     	;# 
  2366  008E                     	;# 
  2367  0090                     	;# 
  2368  0091                     	;# 
  2369  0092                     	;# 
  2370  0093                     	;# 
  2371  0094                     	;# 
  2372  0095                     	;# 
  2373  0096                     	;# 
  2374  0097                     	;# 
  2375  0098                     	;# 
  2376  0099                     	;# 
  2377  009A                     	;# 
  2378  009B                     	;# 
  2379  009C                     	;# 
  2380  009D                     	;# 
  2381  009E                     	;# 
  2382  009F                     	;# 
  2383  010C                     	;# 
  2384  010D                     	;# 
  2385  010E                     	;# 
  2386  0111                     	;# 
  2387  0112                     	;# 
  2388  0113                     	;# 
  2389  0114                     	;# 
  2390  0115                     	;# 
  2391  0116                     	;# 
  2392  0117                     	;# 
  2393  0118                     	;# 
  2394  0119                     	;# 
  2395  011A                     	;# 
  2396  011B                     	;# 
  2397  011C                     	;# 
  2398  011D                     	;# 
  2399  018C                     	;# 
  2400  018D                     	;# 
  2401  018E                     	;# 
  2402  0191                     	;# 
  2403  0191                     	;# 
  2404  0192                     	;# 
  2405  0193                     	;# 
  2406  0193                     	;# 
  2407  0194                     	;# 
  2408  0195                     	;# 
  2409  0196                     	;# 
  2410  0197                     	;# 
  2411  0199                     	;# 
  2412  0199                     	;# 
  2413  0199                     	;# 
  2414  019A                     	;# 
  2415  019A                     	;# 
  2416  019A                     	;# 
  2417  019B                     	;# 
  2418  019B                     	;# 
  2419  019B                     	;# 
  2420  019B                     	;# 
  2421  019B                     	;# 
  2422  019C                     	;# 
  2423  019C                     	;# 
  2424  019C                     	;# 
  2425  019D                     	;# 
  2426  019D                     	;# 
  2427  019D                     	;# 
  2428  019E                     	;# 
  2429  019E                     	;# 
  2430  019E                     	;# 
  2431  019F                     	;# 
  2432  019F                     	;# 
  2433  019F                     	;# 
  2434  019F                     	;# 
  2435  019F                     	;# 
  2436  020C                     	;# 
  2437  020D                     	;# 
  2438  020E                     	;# 
  2439  0210                     	;# 
  2440  0211                     	;# 
  2441  0211                     	;# 
  2442  0212                     	;# 
  2443  0212                     	;# 
  2444  0213                     	;# 
  2445  0213                     	;# 
  2446  0214                     	;# 
  2447  0214                     	;# 
  2448  0215                     	;# 
  2449  0215                     	;# 
  2450  0215                     	;# 
  2451  0215                     	;# 
  2452  0216                     	;# 
  2453  0216                     	;# 
  2454  0217                     	;# 
  2455  0217                     	;# 
  2456  021B                     	;# 
  2457  021C                     	;# 
  2458  021D                     	;# 
  2459  021E                     	;# 
  2460  021F                     	;# 
  2461  028C                     	;# 
  2462  028D                     	;# 
  2463  028E                     	;# 
  2464  0291                     	;# 
  2465  0291                     	;# 
  2466  0292                     	;# 
  2467  0293                     	;# 
  2468  0294                     	;# 
  2469  0295                     	;# 
  2470  0295                     	;# 
  2471  0296                     	;# 
  2472  0297                     	;# 
  2473  0298                     	;# 
  2474  0299                     	;# 
  2475  0299                     	;# 
  2476  029A                     	;# 
  2477  029B                     	;# 
  2478  029C                     	;# 
  2479  029E                     	;# 
  2480  029F                     	;# 
  2481  030C                     	;# 
  2482  030D                     	;# 
  2483  030E                     	;# 
  2484  0315                     	;# 
  2485  0316                     	;# 
  2486  0317                     	;# 
  2487  0318                     	;# 
  2488  0319                     	;# 
  2489  031B                     	;# 
  2490  031C                     	;# 
  2491  031D                     	;# 
  2492  031E                     	;# 
  2493  031F                     	;# 
  2494  038C                     	;# 
  2495  038D                     	;# 
  2496  038E                     	;# 
  2497  0390                     	;# 
  2498  0391                     	;# 
  2499  0392                     	;# 
  2500  0393                     	;# 
  2501  0394                     	;# 
  2502  0395                     	;# 
  2503  0396                     	;# 
  2504  0397                     	;# 
  2505  0398                     	;# 
  2506  0399                     	;# 
  2507  039D                     	;# 
  2508  039E                     	;# 
  2509  039F                     	;# 
  2510  040D                     	;# 
  2511  040F                     	;# 
  2512  040F                     	;# 
  2513  0410                     	;# 
  2514  0411                     	;# 
  2515  0412                     	;# 
  2516  0413                     	;# 
  2517  0413                     	;# 
  2518  0414                     	;# 
  2519  0414                     	;# 
  2520  0415                     	;# 
  2521  0416                     	;# 
  2522  0417                     	;# 
  2523  0418                     	;# 
  2524  041A                     	;# 
  2525  041A                     	;# 
  2526  041B                     	;# 
  2527  041B                     	;# 
  2528  041C                     	;# 
  2529  041D                     	;# 
  2530  041E                     	;# 
  2531  041F                     	;# 
  2532  048E                     	;# 
  2533  048E                     	;# 
  2534  048F                     	;# 
  2535  0490                     	;# 
  2536  0491                     	;# 
  2537  0492                     	;# 
  2538  0493                     	;# 
  2539  0493                     	;# 
  2540  0494                     	;# 
  2541  0494                     	;# 
  2542  0495                     	;# 
  2543  0496                     	;# 
  2544  0497                     	;# 
  2545  0498                     	;# 
  2546  049A                     	;# 
  2547  049A                     	;# 
  2548  049B                     	;# 
  2549  049B                     	;# 
  2550  049C                     	;# 
  2551  049D                     	;# 
  2552  049E                     	;# 
  2553  049F                     	;# 
  2554  050F                     	;# 
  2555  0510                     	;# 
  2556  0511                     	;# 
  2557  0512                     	;# 
  2558  0513                     	;# 
  2559  0514                     	;# 
  2560  0515                     	;# 
  2561  0516                     	;# 
  2562  0517                     	;# 
  2563  0518                     	;# 
  2564  0519                     	;# 
  2565  051A                     	;# 
  2566  058D                     	;# 
  2567  058E                     	;# 
  2568  058F                     	;# 
  2569  058F                     	;# 
  2570  058F                     	;# 
  2571  0590                     	;# 
  2572  0590                     	;# 
  2573  0591                     	;# 
  2574  0592                     	;# 
  2575  0592                     	;# 
  2576  0592                     	;# 
  2577  0593                     	;# 
  2578  0593                     	;# 
  2579  0594                     	;# 
  2580  0595                     	;# 
  2581  0595                     	;# 
  2582  0596                     	;# 
  2583  0597                     	;# 
  2584  0597                     	;# 
  2585  0598                     	;# 
  2586  0599                     	;# 
  2587  0599                     	;# 
  2588  0599                     	;# 
  2589  059A                     	;# 
  2590  059A                     	;# 
  2591  059E                     	;# 
  2592  059F                     	;# 
  2593  059F                     	;# 
  2594  0614                     	;# 
  2595  0614                     	;# 
  2596  0615                     	;# 
  2597  0616                     	;# 
  2598  0617                     	;# 
  2599  0617                     	;# 
  2600  0618                     	;# 
  2601  0619                     	;# 
  2602  061A                     	;# 
  2603  061A                     	;# 
  2604  061B                     	;# 
  2605  061C                     	;# 
  2606  068D                     	;# 
  2607  068E                     	;# 
  2608  068F                     	;# 
  2609  0690                     	;# 
  2610  0691                     	;# 
  2611  0692                     	;# 
  2612  0693                     	;# 
  2613  0694                     	;# 
  2614  0695                     	;# 
  2615  0696                     	;# 
  2616  0697                     	;# 
  2617  0698                     	;# 
  2618  0699                     	;# 
  2619  069A                     	;# 
  2620  069B                     	;# 
  2621  069C                     	;# 
  2622  069D                     	;# 
  2623  069E                     	;# 
  2624  069F                     	;# 
  2625  070D                     	;# 
  2626  070E                     	;# 
  2627  070F                     	;# 
  2628  0710                     	;# 
  2629  0711                     	;# 
  2630  0712                     	;# 
  2631  0713                     	;# 
  2632  0714                     	;# 
  2633  0715                     	;# 
  2634  0716                     	;# 
  2635  0717                     	;# 
  2636  0718                     	;# 
  2637  0719                     	;# 
  2638  071A                     	;# 
  2639  071B                     	;# 
  2640  071C                     	;# 
  2641  071D                     	;# 
  2642  071E                     	;# 
  2643  071F                     	;# 
  2644  078E                     	;# 
  2645  078F                     	;# 
  2646  0790                     	;# 
  2647  0791                     	;# 
  2648  0792                     	;# 
  2649  0793                     	;# 
  2650  0794                     	;# 
  2651  0795                     	;# 
  2652  0796                     	;# 
  2653  0797                     	;# 
  2654  0798                     	;# 
  2655  0799                     	;# 
  2656  079A                     	;# 
  2657  079B                     	;# 
  2658  079C                     	;# 
  2659  079D                     	;# 
  2660  079E                     	;# 
  2661  079F                     	;# 
  2662  080D                     	;# 
  2663  080E                     	;# 
  2664  080F                     	;# 
  2665  0810                     	;# 
  2666  0811                     	;# 
  2667  0812                     	;# 
  2668  0813                     	;# 
  2669  0814                     	;# 
  2670  0815                     	;# 
  2671  0816                     	;# 
  2672  0817                     	;# 
  2673  0818                     	;# 
  2674  0819                     	;# 
  2675  081A                     	;# 
  2676  081B                     	;# 
  2677  081C                     	;# 
  2678  081D                     	;# 
  2679  081E                     	;# 
  2680  081F                     	;# 
  2681  090C                     	;# 
  2682  090D                     	;# 
  2683  090E                     	;# 
  2684  090F                     	;# 
  2685  0910                     	;# 
  2686  0911                     	;# 
  2687  0912                     	;# 
  2688  0913                     	;# 
  2689  0914                     	;# 
  2690  0915                     	;# 
  2691  0916                     	;# 
  2692  0917                     	;# 
  2693  0D8E                     	;# 
  2694  0D8F                     	;# 
  2695  0D90                     	;# 
  2696  0D91                     	;# 
  2697  0D91                     	;# 
  2698  0D92                     	;# 
  2699  0D93                     	;# 
  2700  0D93                     	;# 
  2701  0D94                     	;# 
  2702  0D95                     	;# 
  2703  0D95                     	;# 
  2704  0D96                     	;# 
  2705  0D97                     	;# 
  2706  0D97                     	;# 
  2707  0D98                     	;# 
  2708  0D99                     	;# 
  2709  0D99                     	;# 
  2710  0D9A                     	;# 
  2711  0D9B                     	;# 
  2712  0D9C                     	;# 
  2713  0D9C                     	;# 
  2714  0D9D                     	;# 
  2715  0D9D                     	;# 
  2716  0D9E                     	;# 
  2717  0D9F                     	;# 
  2718  0DA0                     	;# 
  2719  0DA1                     	;# 
  2720  0DA1                     	;# 
  2721  0DA2                     	;# 
  2722  0DA3                     	;# 
  2723  0DA3                     	;# 
  2724  0DA4                     	;# 
  2725  0DA5                     	;# 
  2726  0DA5                     	;# 
  2727  0DA6                     	;# 
  2728  0DA7                     	;# 
  2729  0DA7                     	;# 
  2730  0DA8                     	;# 
  2731  0DA9                     	;# 
  2732  0DA9                     	;# 
  2733  0DAA                     	;# 
  2734  0DAB                     	;# 
  2735  0DAC                     	;# 
  2736  0DAC                     	;# 
  2737  0DAD                     	;# 
  2738  0DAD                     	;# 
  2739  0DAE                     	;# 
  2740  0DAF                     	;# 
  2741  0DB0                     	;# 
  2742  0DB1                     	;# 
  2743  0DB1                     	;# 
  2744  0DB2                     	;# 
  2745  0DB3                     	;# 
  2746  0DB3                     	;# 
  2747  0DB4                     	;# 
  2748  0DB5                     	;# 
  2749  0DB5                     	;# 
  2750  0DB6                     	;# 
  2751  0DB7                     	;# 
  2752  0DB7                     	;# 
  2753  0DB8                     	;# 
  2754  0DB9                     	;# 
  2755  0DB9                     	;# 
  2756  0DBA                     	;# 
  2757  0DBB                     	;# 
  2758  0DBC                     	;# 
  2759  0DBC                     	;# 
  2760  0DBD                     	;# 
  2761  0DBD                     	;# 
  2762  0DBE                     	;# 
  2763  0DBF                     	;# 
  2764  0DC0                     	;# 
  2765  0E0C                     	;# 
  2766  0E0D                     	;# 
  2767  0E0E                     	;# 
  2768  0E0F                     	;# 
  2769  0E10                     	;# 
  2770  0E11                     	;# 
  2771  0E12                     	;# 
  2772  0E13                     	;# 
  2773  0E14                     	;# 
  2774  0E15                     	;# 
  2775  0E15                     	;# 
  2776  0E15                     	;# 
  2777  0E16                     	;# 
  2778  0E16                     	;# 
  2779  0E16                     	;# 
  2780  0E17                     	;# 
  2781  0E17                     	;# 
  2782  0E17                     	;# 
  2783  0E18                     	;# 
  2784  0E18                     	;# 
  2785  0E18                     	;# 
  2786  0E19                     	;# 
  2787  0E1A                     	;# 
  2788  0E1B                     	;# 
  2789  0E1D                     	;# 
  2790  0E1E                     	;# 
  2791  0E1F                     	;# 
  2792  0E21                     	;# 
  2793  0E22                     	;# 
  2794  0E23                     	;# 
  2795  0E24                     	;# 
  2796  0E25                     	;# 
  2797  0E26                     	;# 
  2798  0E27                     	;# 
  2799  0E28                     	;# 
  2800  0E29                     	;# 
  2801  0E2D                     	;# 
  2802  0E2E                     	;# 
  2803  0E2F                     	;# 
  2804  0E30                     	;# 
  2805  0E31                     	;# 
  2806  0E32                     	;# 
  2807  0E35                     	;# 
  2808  0E36                     	;# 
  2809  0E37                     	;# 
  2810  0E38                     	;# 
  2811  0E39                     	;# 
  2812  0E3A                     	;# 
  2813  0E3B                     	;# 
  2814  0E3C                     	;# 
  2815  0E3D                     	;# 
  2816  0E3E                     	;# 
  2817  0E90                     	;# 
  2818  0E91                     	;# 
  2819  0E92                     	;# 
  2820  0E93                     	;# 
  2821  0E94                     	;# 
  2822  0E95                     	;# 
  2823  0E96                     	;# 
  2824  0E97                     	;# 
  2825  0E98                     	;# 
  2826  0E99                     	;# 
  2827  0E9A                     	;# 
  2828  0E9B                     	;# 
  2829  0E9C                     	;# 
  2830  0E9D                     	;# 
  2831  0E9E                     	;# 
  2832  0E9F                     	;# 
  2833  0EA0                     	;# 
  2834  0EA1                     	;# 
  2835  0EA2                     	;# 
  2836  0EA3                     	;# 
  2837  0EA4                     	;# 
  2838  0EA5                     	;# 
  2839  0EA6                     	;# 
  2840  0EA7                     	;# 
  2841  0F0F                     	;# 
  2842  0F10                     	;# 
  2843  0F11                     	;# 
  2844  0F12                     	;# 
  2845  0F13                     	;# 
  2846  0F14                     	;# 
  2847  0F15                     	;# 
  2848  0F16                     	;# 
  2849  0F17                     	;# 
  2850  0F18                     	;# 
  2851  0F19                     	;# 
  2852  0F1A                     	;# 
  2853  0F1B                     	;# 
  2854  0F1C                     	;# 
  2855  0F1D                     	;# 
  2856  0F1E                     	;# 
  2857  0F1F                     	;# 
  2858  0F20                     	;# 
  2859  0F21                     	;# 
  2860  0F22                     	;# 
  2861  0F23                     	;# 
  2862  0F24                     	;# 
  2863  0F25                     	;# 
  2864  0F26                     	;# 
  2865  0F27                     	;# 
  2866  0F28                     	;# 
  2867  0F29                     	;# 
  2868  0F2A                     	;# 
  2869  0F2B                     	;# 
  2870  0F2C                     	;# 
  2871  0F2D                     	;# 
  2872  0F2E                     	;# 
  2873  0F2F                     	;# 
  2874  0F30                     	;# 
  2875  0F31                     	;# 
  2876  0F32                     	;# 
  2877  0F33                     	;# 
  2878  0F34                     	;# 
  2879  0F35                     	;# 
  2880  0F36                     	;# 
  2881  0F37                     	;# 
  2882  0FE4                     	;# 
  2883  0FE5                     	;# 
  2884  0FE6                     	;# 
  2885  0FE7                     	;# 
  2886  0FE8                     	;# 
  2887  0FE9                     	;# 
  2888  0FEA                     	;# 
  2889  0FEB                     	;# 
  2890  0FED                     	;# 
  2891  0FEE                     	;# 
  2892  0FEF                     	;# 
  2893  0000                     	;# 
  2894  0001                     	;# 
  2895  0002                     	;# 
  2896  0003                     	;# 
  2897  0004                     	;# 
  2898  0005                     	;# 
  2899  0006                     	;# 
  2900  0007                     	;# 
  2901  0008                     	;# 
  2902  0009                     	;# 
  2903  000A                     	;# 
  2904  000B                     	;# 
  2905  000C                     	;# 
  2906  000D                     	;# 
  2907  000E                     	;# 
  2908  0010                     	;# 
  2909  0011                     	;# 
  2910  0012                     	;# 
  2911  0013                     	;# 
  2912  0014                     	;# 
  2913  0015                     	;# 
  2914  0016                     	;# 
  2915  0017                     	;# 
  2916  0018                     	;# 
  2917  0018                     	;# 
  2918  0019                     	;# 
  2919  001A                     	;# 
  2920  001B                     	;# 
  2921  001C                     	;# 
  2922  001C                     	;# 
  2923  001D                     	;# 
  2924  001E                     	;# 
  2925  001F                     	;# 
  2926  008C                     	;# 
  2927  008D                     	;# 
  2928  008E                     	;# 
  2929  0090                     	;# 
  2930  0091                     	;# 
  2931  0092                     	;# 
  2932  0093                     	;# 
  2933  0094                     	;# 
  2934  0095                     	;# 
  2935  0096                     	;# 
  2936  0097                     	;# 
  2937  0098                     	;# 
  2938  0099                     	;# 
  2939  009A                     	;# 
  2940  009B                     	;# 
  2941  009C                     	;# 
  2942  009D                     	;# 
  2943  009E                     	;# 
  2944  009F                     	;# 
  2945  010C                     	;# 
  2946  010D                     	;# 
  2947  010E                     	;# 
  2948  0111                     	;# 
  2949  0112                     	;# 
  2950  0113                     	;# 
  2951  0114                     	;# 
  2952  0115                     	;# 
  2953  0116                     	;# 
  2954  0117                     	;# 
  2955  0118                     	;# 
  2956  0119                     	;# 
  2957  011A                     	;# 
  2958  011B                     	;# 
  2959  011C                     	;# 
  2960  011D                     	;# 
  2961  018C                     	;# 
  2962  018D                     	;# 
  2963  018E                     	;# 
  2964  0191                     	;# 
  2965  0191                     	;# 
  2966  0192                     	;# 
  2967  0193                     	;# 
  2968  0193                     	;# 
  2969  0194                     	;# 
  2970  0195                     	;# 
  2971  0196                     	;# 
  2972  0197                     	;# 
  2973  0199                     	;# 
  2974  0199                     	;# 
  2975  0199                     	;# 
  2976  019A                     	;# 
  2977  019A                     	;# 
  2978  019A                     	;# 
  2979  019B                     	;# 
  2980  019B                     	;# 
  2981  019B                     	;# 
  2982  019B                     	;# 
  2983  019B                     	;# 
  2984  019C                     	;# 
  2985  019C                     	;# 
  2986  019C                     	;# 
  2987  019D                     	;# 
  2988  019D                     	;# 
  2989  019D                     	;# 
  2990  019E                     	;# 
  2991  019E                     	;# 
  2992  019E                     	;# 
  2993  019F                     	;# 
  2994  019F                     	;# 
  2995  019F                     	;# 
  2996  019F                     	;# 
  2997  019F                     	;# 
  2998  020C                     	;# 
  2999  020D                     	;# 
  3000  020E                     	;# 
  3001  0210                     	;# 
  3002  0211                     	;# 
  3003  0211                     	;# 
  3004  0212                     	;# 
  3005  0212                     	;# 
  3006  0213                     	;# 
  3007  0213                     	;# 
  3008  0214                     	;# 
  3009  0214                     	;# 
  3010  0215                     	;# 
  3011  0215                     	;# 
  3012  0215                     	;# 
  3013  0215                     	;# 
  3014  0216                     	;# 
  3015  0216                     	;# 
  3016  0217                     	;# 
  3017  0217                     	;# 
  3018  021B                     	;# 
  3019  021C                     	;# 
  3020  021D                     	;# 
  3021  021E                     	;# 
  3022  021F                     	;# 
  3023  028C                     	;# 
  3024  028D                     	;# 
  3025  028E                     	;# 
  3026  0291                     	;# 
  3027  0291                     	;# 
  3028  0292                     	;# 
  3029  0293                     	;# 
  3030  0294                     	;# 
  3031  0295                     	;# 
  3032  0295                     	;# 
  3033  0296                     	;# 
  3034  0297                     	;# 
  3035  0298                     	;# 
  3036  0299                     	;# 
  3037  0299                     	;# 
  3038  029A                     	;# 
  3039  029B                     	;# 
  3040  029C                     	;# 
  3041  029E                     	;# 
  3042  029F                     	;# 
  3043  030C                     	;# 
  3044  030D                     	;# 
  3045  030E                     	;# 
  3046  0315                     	;# 
  3047  0316                     	;# 
  3048  0317                     	;# 
  3049  0318                     	;# 
  3050  0319                     	;# 
  3051  031B                     	;# 
  3052  031C                     	;# 
  3053  031D                     	;# 
  3054  031E                     	;# 
  3055  031F                     	;# 
  3056  038C                     	;# 
  3057  038D                     	;# 
  3058  038E                     	;# 
  3059  0390                     	;# 
  3060  0391                     	;# 
  3061  0392                     	;# 
  3062  0393                     	;# 
  3063  0394                     	;# 
  3064  0395                     	;# 
  3065  0396                     	;# 
  3066  0397                     	;# 
  3067  0398                     	;# 
  3068  0399                     	;# 
  3069  039D                     	;# 
  3070  039E                     	;# 
  3071  039F                     	;# 
  3072  040D                     	;# 
  3073  040F                     	;# 
  3074  040F                     	;# 
  3075  0410                     	;# 
  3076  0411                     	;# 
  3077  0412                     	;# 
  3078  0413                     	;# 
  3079  0413                     	;# 
  3080  0414                     	;# 
  3081  0414                     	;# 
  3082  0415                     	;# 
  3083  0416                     	;# 
  3084  0417                     	;# 
  3085  0418                     	;# 
  3086  041A                     	;# 
  3087  041A                     	;# 
  3088  041B                     	;# 
  3089  041B                     	;# 
  3090  041C                     	;# 
  3091  041D                     	;# 
  3092  041E                     	;# 
  3093  041F                     	;# 
  3094  048E                     	;# 
  3095  048E                     	;# 
  3096  048F                     	;# 
  3097  0490                     	;# 
  3098  0491                     	;# 
  3099  0492                     	;# 
  3100  0493                     	;# 
  3101  0493                     	;# 
  3102  0494                     	;# 
  3103  0494                     	;# 
  3104  0495                     	;# 
  3105  0496                     	;# 
  3106  0497                     	;# 
  3107  0498                     	;# 
  3108  049A                     	;# 
  3109  049A                     	;# 
  3110  049B                     	;# 
  3111  049B                     	;# 
  3112  049C                     	;# 
  3113  049D                     	;# 
  3114  049E                     	;# 
  3115  049F                     	;# 
  3116  050F                     	;# 
  3117  0510                     	;# 
  3118  0511                     	;# 
  3119  0512                     	;# 
  3120  0513                     	;# 
  3121  0514                     	;# 
  3122  0515                     	;# 
  3123  0516                     	;# 
  3124  0517                     	;# 
  3125  0518                     	;# 
  3126  0519                     	;# 
  3127  051A                     	;# 
  3128  058D                     	;# 
  3129  058E                     	;# 
  3130  058F                     	;# 
  3131  058F                     	;# 
  3132  058F                     	;# 
  3133  0590                     	;# 
  3134  0590                     	;# 
  3135  0591                     	;# 
  3136  0592                     	;# 
  3137  0592                     	;# 
  3138  0592                     	;# 
  3139  0593                     	;# 
  3140  0593                     	;# 
  3141  0594                     	;# 
  3142  0595                     	;# 
  3143  0595                     	;# 
  3144  0596                     	;# 
  3145  0597                     	;# 
  3146  0597                     	;# 
  3147  0598                     	;# 
  3148  0599                     	;# 
  3149  0599                     	;# 
  3150  0599                     	;# 
  3151  059A                     	;# 
  3152  059A                     	;# 
  3153  059E                     	;# 
  3154  059F                     	;# 
  3155  059F                     	;# 
  3156  0614                     	;# 
  3157  0614                     	;# 
  3158  0615                     	;# 
  3159  0616                     	;# 
  3160  0617                     	;# 
  3161  0617                     	;# 
  3162  0618                     	;# 
  3163  0619                     	;# 
  3164  061A                     	;# 
  3165  061A                     	;# 
  3166  061B                     	;# 
  3167  061C                     	;# 
  3168  068D                     	;# 
  3169  068E                     	;# 
  3170  068F                     	;# 
  3171  0690                     	;# 
  3172  0691                     	;# 
  3173  0692                     	;# 
  3174  0693                     	;# 
  3175  0694                     	;# 
  3176  0695                     	;# 
  3177  0696                     	;# 
  3178  0697                     	;# 
  3179  0698                     	;# 
  3180  0699                     	;# 
  3181  069A                     	;# 
  3182  069B                     	;# 
  3183  069C                     	;# 
  3184  069D                     	;# 
  3185  069E                     	;# 
  3186  069F                     	;# 
  3187  070D                     	;# 
  3188  070E                     	;# 
  3189  070F                     	;# 
  3190  0710                     	;# 
  3191  0711                     	;# 
  3192  0712                     	;# 
  3193  0713                     	;# 
  3194  0714                     	;# 
  3195  0715                     	;# 
  3196  0716                     	;# 
  3197  0717                     	;# 
  3198  0718                     	;# 
  3199  0719                     	;# 
  3200  071A                     	;# 
  3201  071B                     	;# 
  3202  071C                     	;# 
  3203  071D                     	;# 
  3204  071E                     	;# 
  3205  071F                     	;# 
  3206  078E                     	;# 
  3207  078F                     	;# 
  3208  0790                     	;# 
  3209  0791                     	;# 
  3210  0792                     	;# 
  3211  0793                     	;# 
  3212  0794                     	;# 
  3213  0795                     	;# 
  3214  0796                     	;# 
  3215  0797                     	;# 
  3216  0798                     	;# 
  3217  0799                     	;# 
  3218  079A                     	;# 
  3219  079B                     	;# 
  3220  079C                     	;# 
  3221  079D                     	;# 
  3222  079E                     	;# 
  3223  079F                     	;# 
  3224  080D                     	;# 
  3225  080E                     	;# 
  3226  080F                     	;# 
  3227  0810                     	;# 
  3228  0811                     	;# 
  3229  0812                     	;# 
  3230  0813                     	;# 
  3231  0814                     	;# 
  3232  0815                     	;# 
  3233  0816                     	;# 
  3234  0817                     	;# 
  3235  0818                     	;# 
  3236  0819                     	;# 
  3237  081A                     	;# 
  3238  081B                     	;# 
  3239  081C                     	;# 
  3240  081D                     	;# 
  3241  081E                     	;# 
  3242  081F                     	;# 
  3243  090C                     	;# 
  3244  090D                     	;# 
  3245  090E                     	;# 
  3246  090F                     	;# 
  3247  0910                     	;# 
  3248  0911                     	;# 
  3249  0912                     	;# 
  3250  0913                     	;# 
  3251  0914                     	;# 
  3252  0915                     	;# 
  3253  0916                     	;# 
  3254  0917                     	;# 
  3255  0D8E                     	;# 
  3256  0D8F                     	;# 
  3257  0D90                     	;# 
  3258  0D91                     	;# 
  3259  0D91                     	;# 
  3260  0D92                     	;# 
  3261  0D93                     	;# 
  3262  0D93                     	;# 
  3263  0D94                     	;# 
  3264  0D95                     	;# 
  3265  0D95                     	;# 
  3266  0D96                     	;# 
  3267  0D97                     	;# 
  3268  0D97                     	;# 
  3269  0D98                     	;# 
  3270  0D99                     	;# 
  3271  0D99                     	;# 
  3272  0D9A                     	;# 
  3273  0D9B                     	;# 
  3274  0D9C                     	;# 
  3275  0D9C                     	;# 
  3276  0D9D                     	;# 
  3277  0D9D                     	;# 
  3278  0D9E                     	;# 
  3279  0D9F                     	;# 
  3280  0DA0                     	;# 
  3281  0DA1                     	;# 
  3282  0DA1                     	;# 
  3283  0DA2                     	;# 
  3284  0DA3                     	;# 
  3285  0DA3                     	;# 
  3286  0DA4                     	;# 
  3287  0DA5                     	;# 
  3288  0DA5                     	;# 
  3289  0DA6                     	;# 
  3290  0DA7                     	;# 
  3291  0DA7                     	;# 
  3292  0DA8                     	;# 
  3293  0DA9                     	;# 
  3294  0DA9                     	;# 
  3295  0DAA                     	;# 
  3296  0DAB                     	;# 
  3297  0DAC                     	;# 
  3298  0DAC                     	;# 
  3299  0DAD                     	;# 
  3300  0DAD                     	;# 
  3301  0DAE                     	;# 
  3302  0DAF                     	;# 
  3303  0DB0                     	;# 
  3304  0DB1                     	;# 
  3305  0DB1                     	;# 
  3306  0DB2                     	;# 
  3307  0DB3                     	;# 
  3308  0DB3                     	;# 
  3309  0DB4                     	;# 
  3310  0DB5                     	;# 
  3311  0DB5                     	;# 
  3312  0DB6                     	;# 
  3313  0DB7                     	;# 
  3314  0DB7                     	;# 
  3315  0DB8                     	;# 
  3316  0DB9                     	;# 
  3317  0DB9                     	;# 
  3318  0DBA                     	;# 
  3319  0DBB                     	;# 
  3320  0DBC                     	;# 
  3321  0DBC                     	;# 
  3322  0DBD                     	;# 
  3323  0DBD                     	;# 
  3324  0DBE                     	;# 
  3325  0DBF                     	;# 
  3326  0DC0                     	;# 
  3327  0E0C                     	;# 
  3328  0E0D                     	;# 
  3329  0E0E                     	;# 
  3330  0E0F                     	;# 
  3331  0E10                     	;# 
  3332  0E11                     	;# 
  3333  0E12                     	;# 
  3334  0E13                     	;# 
  3335  0E14                     	;# 
  3336  0E15                     	;# 
  3337  0E15                     	;# 
  3338  0E15                     	;# 
  3339  0E16                     	;# 
  3340  0E16                     	;# 
  3341  0E16                     	;# 
  3342  0E17                     	;# 
  3343  0E17                     	;# 
  3344  0E17                     	;# 
  3345  0E18                     	;# 
  3346  0E18                     	;# 
  3347  0E18                     	;# 
  3348  0E19                     	;# 
  3349  0E1A                     	;# 
  3350  0E1B                     	;# 
  3351  0E1D                     	;# 
  3352  0E1E                     	;# 
  3353  0E1F                     	;# 
  3354  0E21                     	;# 
  3355  0E22                     	;# 
  3356  0E23                     	;# 
  3357  0E24                     	;# 
  3358  0E25                     	;# 
  3359  0E26                     	;# 
  3360  0E27                     	;# 
  3361  0E28                     	;# 
  3362  0E29                     	;# 
  3363  0E2D                     	;# 
  3364  0E2E                     	;# 
  3365  0E2F                     	;# 
  3366  0E30                     	;# 
  3367  0E31                     	;# 
  3368  0E32                     	;# 
  3369  0E35                     	;# 
  3370  0E36                     	;# 
  3371  0E37                     	;# 
  3372  0E38                     	;# 
  3373  0E39                     	;# 
  3374  0E3A                     	;# 
  3375  0E3B                     	;# 
  3376  0E3C                     	;# 
  3377  0E3D                     	;# 
  3378  0E3E                     	;# 
  3379  0E90                     	;# 
  3380  0E91                     	;# 
  3381  0E92                     	;# 
  3382  0E93                     	;# 
  3383  0E94                     	;# 
  3384  0E95                     	;# 
  3385  0E96                     	;# 
  3386  0E97                     	;# 
  3387  0E98                     	;# 
  3388  0E99                     	;# 
  3389  0E9A                     	;# 
  3390  0E9B                     	;# 
  3391  0E9C                     	;# 
  3392  0E9D                     	;# 
  3393  0E9E                     	;# 
  3394  0E9F                     	;# 
  3395  0EA0                     	;# 
  3396  0EA1                     	;# 
  3397  0EA2                     	;# 
  3398  0EA3                     	;# 
  3399  0EA4                     	;# 
  3400  0EA5                     	;# 
  3401  0EA6                     	;# 
  3402  0EA7                     	;# 
  3403  0F0F                     	;# 
  3404  0F10                     	;# 
  3405  0F11                     	;# 
  3406  0F12                     	;# 
  3407  0F13                     	;# 
  3408  0F14                     	;# 
  3409  0F15                     	;# 
  3410  0F16                     	;# 
  3411  0F17                     	;# 
  3412  0F18                     	;# 
  3413  0F19                     	;# 
  3414  0F1A                     	;# 
  3415  0F1B                     	;# 
  3416  0F1C                     	;# 
  3417  0F1D                     	;# 
  3418  0F1E                     	;# 
  3419  0F1F                     	;# 
  3420  0F20                     	;# 
  3421  0F21                     	;# 
  3422  0F22                     	;# 
  3423  0F23                     	;# 
  3424  0F24                     	;# 
  3425  0F25                     	;# 
  3426  0F26                     	;# 
  3427  0F27                     	;# 
  3428  0F28                     	;# 
  3429  0F29                     	;# 
  3430  0F2A                     	;# 
  3431  0F2B                     	;# 
  3432  0F2C                     	;# 
  3433  0F2D                     	;# 
  3434  0F2E                     	;# 
  3435  0F2F                     	;# 
  3436  0F30                     	;# 
  3437  0F31                     	;# 
  3438  0F32                     	;# 
  3439  0F33                     	;# 
  3440  0F34                     	;# 
  3441  0F35                     	;# 
  3442  0F36                     	;# 
  3443  0F37                     	;# 
  3444  0FE4                     	;# 
  3445  0FE5                     	;# 
  3446  0FE6                     	;# 
  3447  0FE7                     	;# 
  3448  0FE8                     	;# 
  3449  0FE9                     	;# 
  3450  0FEA                     	;# 
  3451  0FEB                     	;# 
  3452  0FED                     	;# 
  3453  0FEE                     	;# 
  3454  0FEF                     	;# 
  3455                           
  3456                           	psect	idataCOMMON
  3457  04EF                     __pidataCOMMON:	
  3458                           
  3459                           ;initializer for _pps_pwm_vals
  3460  04EF  3419               	retlw	25
  3461  04F0  341A               	retlw	26
  3462  04F1  341B               	retlw	27
  3463  04F2  341D               	retlw	29
  3464                           
  3465                           	psect	idataBANK0
  3466  04C5                     __pidataBANK0:	
  3467                           
  3468                           ;initializer for _writeable_reg
  3469  04C5  34FF               	retlw	255
  3470  04C6  34FF               	retlw	255
  3471  04C7  34FF               	retlw	255
  3472  04C8  34FF               	retlw	255
  3473  04C9  34FF               	retlw	255
  3474  04CA  34FF               	retlw	255
  3475  04CB  34FF               	retlw	255
  3476  04CC  34FF               	retlw	255
  3477  04CD  34FF               	retlw	255
  3478  04CE  34FF               	retlw	255
  3479                           
  3480                           	psect	stringtext1
  3481  04FD                     __pstringtext1:	
  3482  04FD                     _int_time_delay:	
  3483  04FD  34E8               	retlw	232
  3484  04FE  3403               	retlw	3
  3485  04FF                     __end_of_int_time_delay:	
  3486                           
  3487                           	psect	stringtext2
  3488  04FF                     __pstringtext2:	
  3489  04FF                     _i2c_slave_addr:	
  3490  04FF  3429               	retlw	41
  3491  0500                     __end_of_i2c_slave_addr:	
  3492  000D                     _PORTBbits	set	13
  3493  001E                     _T3CONbits	set	30
  3494  001C                     _TMR3L	set	28
  3495  001D                     _TMR3H	set	29
  3496  001E                     _T3CON	set	30
  3497  000B                     _INTCON	set	11
  3498  0011                     _PIR1bits	set	17
  3499  0097                     _OPTION_REG	set	151
  3500  009B                     _OSCCON	set	155
  3501  008D                     _TRISB	set	141
  3502  008C                     _TRISA	set	140
  3503  0091                     _PIE1bits	set	145
  3504  008E                     _TRISC	set	142
  3505  010D                     _LATB	set	269
  3506  010C                     _LATA	set	268
  3507  010E                     _LATC	set	270
  3508  018D                     _ANSELB	set	397
  3509  018C                     _ANSELA	set	396
  3510  018E                     _ANSELC	set	398
  3511  0210                     _WPUE	set	528
  3512  020D                     _WPUB	set	525
  3513  020C                     _WPUA	set	524
  3514  0211                     _SSP1BUF	set	529
  3515  0215                     _SSP1CONbits	set	533
  3516  0214                     _SSP1STATbits	set	532
  3517  0217                     _SSP1CON3	set	535
  3518  0216                     _SSP1CON2	set	534
  3519  0215                     _SSP1CON1	set	533
  3520  0212                     _SSP1ADD	set	530
  3521  020E                     _WPUC	set	526
  3522  0215                     _SSP1CON	set	533
  3523  0495                     _T2CON	set	1173
  3524  0494                     _T2PR	set	1172
  3525  0497                     _T2CLKCON	set	1175
  3526  061C                     _PWM9CON	set	1564
  3527  0619                     _PWM4CON	set	1561
  3528  0616                     _PWM3CON	set	1558
  3529  061A                     _PWM9DCL	set	1562
  3530  061B                     _PWM9DCH	set	1563
  3531  0617                     _PWM4DCL	set	1559
  3532  0618                     _PWM4DCH	set	1560
  3533  0614                     _PWM3DCL	set	1556
  3534  0615                     _PWM3DCH	set	1557
  3535  0D9B                     _PWM5CON	set	3483
  3536  0D91                     _PWM5PHL	set	3473
  3537  0D92                     _PWM5PHH	set	3474
  3538  0D95                     _PWM5PRL	set	3477
  3539  0D96                     _PWM5PRH	set	3478
  3540  0D9F                     _PWM5LDCON	set	3487
  3541  0D9E                     _PWM5CLKCON	set	3486
  3542  0D9F                     _PWM5LDCONbits	set	3487
  3543  0D93                     _PWM5DCL	set	3475
  3544  0D94                     _PWM5DCH	set	3476
  3545  0E3B                     _SSPDATPPS	set	3643
  3546  0E3A                     _SSPCLKPPS	set	3642
  3547  0E96                     _RA6PPS	set	3734
  3548  0E97                     _RA7PPS	set	3735
  3549  0E95                     _RA5PPS	set	3733
  3550  0E94                     _RA4PPS	set	3732
  3551  0E93                     _RA3PPS	set	3731
  3552  0E92                     _RA2PPS	set	3730
  3553  0E91                     _RA1PPS	set	3729
  3554  0E90                     _RA0PPS	set	3728
  3555  0EA3                     _RC3PPS	set	3747
  3556  0EA2                     _RC2PPS	set	3746
  3557                           
  3558                           ; #config settings
  3559  0000                     
  3560                           	psect	cinit
  3561  0013                     start_initialization:	
  3562  0013                     __initialization:	
  3563                           
  3564                           ; Initialize objects allocated to COMMON
  3565  0013  30EF               	movlw	low __pidataCOMMON
  3566  0014  0084               	movwf	4
  3567  0015  3084               	movlw	(high __pidataCOMMON)| (0+128)
  3568  0016  0085               	movwf	5
  3569  0017  3076               	movlw	low __pdataCOMMON
  3570  0018  0086               	movwf	6
  3571  0019  3000               	movlw	high __pdataCOMMON
  3572  001A  0087               	movwf	7
  3573  001B  3004               	movlw	4
  3574  001C  3184  24D8  3180   	fcall	init_ram
  3575                           
  3576                           ; Initialize objects allocated to BANK0
  3577  001F  30C5               	movlw	low __pidataBANK0
  3578  0020  0084               	movwf	4
  3579  0021  3084               	movlw	(high __pidataBANK0)| (0+128)
  3580  0022  0085               	movwf	5
  3581  0023  304B               	movlw	low __pdataBANK0
  3582  0024  0086               	movwf	6
  3583  0025  3000               	movlw	high __pdataBANK0
  3584  0026  0087               	movwf	7
  3585  0027  300A               	movlw	10
  3586  0028  3184  24D8  3180   	fcall	init_ram
  3587                           
  3588                           ; Clear objects allocated to BANK0
  3589  002B  303E               	movlw	low __pbssBANK0
  3590  002C  0084               	movwf	4
  3591  002D  3000               	movlw	high __pbssBANK0
  3592  002E  0085               	movwf	5
  3593  002F  300D               	movlw	13
  3594  0030  3184  24DE  3180   	fcall	clear_ram0
  3595  0033                     end_of_initialization:	
  3596                           ;End of C runtime variable initialization code
  3597                           
  3598  0033                     __end_of__initialization:	
  3599  0033  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3600  0034  0020               	movlb	0
  3601  0035  3183  2BB6         	ljmp	_main	;jump to C main() function
  3602                           
  3603                           	psect	dataCOMMON
  3604  0076                     __pdataCOMMON:	
  3605  0076                     _pps_pwm_vals:	
  3606  0076                     	ds	4
  3607                           
  3608                           	psect	bssBANK0
  3609  003E                     __pbssBANK0:	
  3610  003E                     _i2c_registers:	
  3611  003E                     	ds	10
  3612  0048                     _prev_steps:	
  3613  0048                     	ds	1
  3614  0049                     _first_write:	
  3615  0049                     	ds	1
  3616  004A                     _current_reg:	
  3617  004A                     	ds	1
  3618                           
  3619                           	psect	dataBANK0
  3620  004B                     __pdataBANK0:	
  3621  004B                     _writeable_reg:	
  3622  004B                     	ds	10
  3623                           
  3624                           	psect	inittext
  3625  04D8                     init_ram:	
  3626  04D8  00FE               	movwf	btemp
  3627  04D9                     initloop:	
  3628  04D9  0012               	moviw fsr0++
  3629  04DA  001E               	movwi fsr1++
  3630  04DB  0BFE               	decfsz	btemp,f
  3631  04DC  2CD9               	goto	initloop
  3632  04DD  3400               	retlw	0
  3633                           
  3634                           	psect	clrtext
  3635  04DE                     clear_ram0:	
  3636                           ;	Called with FSR0 containing the base address, and
  3637                           ;	WREG with the size to clear
  3638                           
  3639  04DE  0064               	clrwdt	;clear the watchdog before getting into this loop
  3640  04DF                     clrloop0:	
  3641  04DF  0180               	clrf	0	;clear RAM location pointed to by FSR
  3642  04E0  3101               	addfsr 0,1
  3643  04E1  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3644  04E2  2CDF               	goto	clrloop0	;have we reached the end yet?
  3645  04E3  3400               	retlw	0	;all done for this memory range, return
  3646                           
  3647                           	psect	cstackCOMMON
  3648  0070                     __pcstackCOMMON:	
  3649  0070                     ?_handle_read:	
  3650  0070                     ?_handle_write:	
  3651                           ; 1 bytes @ 0x0
  3652                           
  3653  0070                     ?_read_register:	
  3654                           ; 1 bytes @ 0x0
  3655                           
  3656  0070                     ?_config_pwm:	
  3657                           ; 1 bytes @ 0x0
  3658                           
  3659  0070                     ?_config_rev:	
  3660                           ; 1 bytes @ 0x0
  3661                           
  3662  0070                     ?_update_motors:	
  3663                           ; 1 bytes @ 0x0
  3664                           
  3665  0070                     ?_update_rev:	
  3666                           ; 1 bytes @ 0x0
  3667                           
  3668  0070                     ?_config_i2c:	
  3669                           ; 1 bytes @ 0x0
  3670                           
  3671  0070                     ?_i2c_isr:	
  3672                           ; 1 bytes @ 0x0
  3673                           
  3674  0070                     ?_config_io:	
  3675                           ; 1 bytes @ 0x0
  3676                           
  3677  0070                     ?_isr:	
  3678                           ; 1 bytes @ 0x0
  3679                           
  3680  0070                     ?_config_cpu:	
  3681                           ; 1 bytes @ 0x0
  3682                           
  3683  0070                     ?_update_ctl:	
  3684                           ; 1 bytes @ 0x0
  3685                           
  3686  0070                     ?_get_a_val:	
  3687                           ; 1 bytes @ 0x0
  3688                           
  3689  0070                     ?_get_b_val:	
  3690                           ; 1 bytes @ 0x0
  3691                           
  3692  0070                     ?_reset_timer:	
  3693                           ; 1 bytes @ 0x0
  3694                           
  3695  0070                     ?_stop_timer:	
  3696                           ; 1 bytes @ 0x0
  3697                           
  3698  0070                     ?_start_timer:	
  3699                           ; 1 bytes @ 0x0
  3700                           
  3701  0070                     ?i1_i2c_isr:	
  3702                           ; 1 bytes @ 0x0
  3703                           
  3704  0070                     ?i1_handle_read:	
  3705                           ; 1 bytes @ 0x0
  3706                           
  3707  0070                     ?i1_handle_write:	
  3708                           ; 1 bytes @ 0x0
  3709                           
  3710  0070                     ?i1_write_register:	
  3711                           ; 1 bytes @ 0x0
  3712                           
  3713  0070                     ?i1_read_register:	
  3714                           ; 1 bytes @ 0x0
  3715                           
  3716  0070                     ??i1_read_register:	
  3717                           ; 1 bytes @ 0x0
  3718                           
  3719  0070                     ?_main:	
  3720                           ; 1 bytes @ 0x0
  3721                           
  3722  0070                     i1write_register@val:	
  3723                           ; 2 bytes @ 0x0
  3724                           
  3725  0070                     i1read_register@reg:	
  3726                           ; 1 bytes @ 0x0
  3727                           
  3728                           
  3729                           ; 1 bytes @ 0x0
  3730  0070                     	ds	1
  3731  0071                     ??i1_handle_read:	
  3732  0071                     ??i1_write_register:	
  3733                           ; 1 bytes @ 0x1
  3734                           
  3735                           
  3736                           ; 1 bytes @ 0x1
  3737  0071                     	ds	1
  3738  0072                     i1write_register@msk:	
  3739                           
  3740                           ; 1 bytes @ 0x2
  3741  0072                     	ds	1
  3742  0073                     i1handle_read@buf:	
  3743  0073                     i1write_register@reg:	
  3744                           ; 1 bytes @ 0x3
  3745                           
  3746                           
  3747                           ; 1 bytes @ 0x3
  3748  0073                     	ds	1
  3749  0074                     ??i1_handle_write:	
  3750                           
  3751                           ; 1 bytes @ 0x4
  3752  0074                     	ds	1
  3753  0075                     i1handle_write@buf:	
  3754                           
  3755                           ; 1 bytes @ 0x5
  3756  0075                     	ds	1
  3757  0076                     ??_isr:	
  3758  0076                     ??i1_i2c_isr:	
  3759                           ; 1 bytes @ 0x6
  3760                           
  3761                           
  3762                           	psect	cstackBANK0
  3763  0020                     __pcstackBANK0:	
  3764                           ; 1 bytes @ 0x6
  3765                           
  3766  0020                     ??_read_register:	
  3767  0020                     ?_write_register:	
  3768                           ; 1 bytes @ 0x0
  3769                           
  3770  0020                     ??_config_rev:	
  3771                           ; 1 bytes @ 0x0
  3772                           
  3773  0020                     ?_set_pwm:	
  3774                           ; 1 bytes @ 0x0
  3775                           
  3776  0020                     ?_set_motor_pps:	
  3777                           ; 1 bytes @ 0x0
  3778                           
  3779  0020                     ??_config_i2c:	
  3780                           ; 1 bytes @ 0x0
  3781                           
  3782  0020                     ??_config_io:	
  3783                           ; 1 bytes @ 0x0
  3784                           
  3785  0020                     ??_config_cpu:	
  3786                           ; 1 bytes @ 0x0
  3787                           
  3788  0020                     ?_set_pwms_dc:	
  3789                           ; 1 bytes @ 0x0
  3790                           
  3791  0020                     ??_get_a_val:	
  3792                           ; 1 bytes @ 0x0
  3793                           
  3794  0020                     ??_get_b_val:	
  3795                           ; 1 bytes @ 0x0
  3796                           
  3797  0020                     ??_reset_timer:	
  3798                           ; 1 bytes @ 0x0
  3799                           
  3800  0020                     ??_stop_timer:	
  3801                           ; 1 bytes @ 0x0
  3802                           
  3803  0020                     ??_start_timer:	
  3804                           ; 1 bytes @ 0x0
  3805                           
  3806  0020                     ?_get_timer:	
  3807                           ; 1 bytes @ 0x0
  3808                           
  3809  0020                     write_register@val:	
  3810                           ; 2 bytes @ 0x0
  3811                           
  3812  0020                     read_register@reg:	
  3813                           ; 1 bytes @ 0x0
  3814                           
  3815  0020                     set_pwms_dc@m4:	
  3816                           ; 1 bytes @ 0x0
  3817                           
  3818  0020                     set_motor_pps@a_mode:	
  3819                           ; 1 bytes @ 0x0
  3820                           
  3821  0020                     set_pwm@pwm:	
  3822                           ; 1 bytes @ 0x0
  3823                           
  3824                           
  3825                           ; 1 bytes @ 0x0
  3826  0020                     	ds	1
  3827  0021                     ??_handle_read:	
  3828  0021                     ??_write_register:	
  3829                           ; 1 bytes @ 0x1
  3830                           
  3831  0021                     ??_set_pwm:	
  3832                           ; 1 bytes @ 0x1
  3833                           
  3834  0021                     set_pwms_dc@m9:	
  3835                           ; 1 bytes @ 0x1
  3836                           
  3837  0021                     set_motor_pps@b_mode:	
  3838                           ; 1 bytes @ 0x1
  3839                           
  3840                           
  3841                           ; 1 bytes @ 0x1
  3842  0021                     	ds	1
  3843  0022                     ??_set_motor_pps:	
  3844  0022                     ??_get_timer:	
  3845                           ; 1 bytes @ 0x2
  3846                           
  3847  0022                     write_register@msk:	
  3848                           ; 1 bytes @ 0x2
  3849                           
  3850  0022                     set_pwms_dc@m5:	
  3851                           ; 1 bytes @ 0x2
  3852                           
  3853  0022                     get_a_val@mode:	
  3854                           ; 1 bytes @ 0x2
  3855                           
  3856  0022                     get_b_val@mode:	
  3857                           ; 1 bytes @ 0x2
  3858                           
  3859                           
  3860                           ; 1 bytes @ 0x2
  3861  0022                     	ds	1
  3862  0023                     ??_set_pwms_dc:	
  3863  0023                     handle_read@buf:	
  3864                           ; 1 bytes @ 0x3
  3865                           
  3866  0023                     write_register@reg:	
  3867                           ; 1 bytes @ 0x3
  3868                           
  3869  0023                     set_pwm@motor:	
  3870                           ; 1 bytes @ 0x3
  3871                           
  3872                           
  3873                           ; 1 bytes @ 0x3
  3874  0023                     	ds	1
  3875  0024                     ??_handle_write:	
  3876  0024                     set_pwms_dc@m3:	
  3877                           ; 1 bytes @ 0x4
  3878                           
  3879                           
  3880                           ; 1 bytes @ 0x4
  3881  0024                     	ds	1
  3882  0025                     handle_write@buf:	
  3883  0025                     _set_motor_pps$390:	
  3884                           ; 1 bytes @ 0x5
  3885                           
  3886                           
  3887                           ; 2 bytes @ 0x5
  3888  0025                     	ds	1
  3889  0026                     ??_i2c_isr:	
  3890                           
  3891                           ; 1 bytes @ 0x6
  3892  0026                     	ds	1
  3893  0027                     get_timer@l:	
  3894  0027                     _set_motor_pps$392:	
  3895                           ; 1 bytes @ 0x7
  3896                           
  3897                           
  3898                           ; 2 bytes @ 0x7
  3899  0027                     	ds	1
  3900  0028                     get_timer@h:	
  3901                           
  3902                           ; 1 bytes @ 0x8
  3903  0028                     	ds	1
  3904  0029                     ??_update_rev:	
  3905  0029                     set_motor_pps@motor:	
  3906                           ; 1 bytes @ 0x9
  3907                           
  3908                           
  3909                           ; 1 bytes @ 0x9
  3910  0029                     	ds	1
  3911  002A                     set_motor_pps@pps_a:	
  3912  002A                     update_rev@t:	
  3913                           ; 1 bytes @ 0xA
  3914                           
  3915                           
  3916                           ; 2 bytes @ 0xA
  3917  002A                     	ds	1
  3918  002B                     set_motor_pps@pps_b:	
  3919                           
  3920                           ; 1 bytes @ 0xB
  3921  002B                     	ds	1
  3922  002C                     set_motor_pps@lat_a:	
  3923  002C                     update_rev@steps_buf:	
  3924                           ; 1 bytes @ 0xC
  3925                           
  3926                           
  3927                           ; 1 bytes @ 0xC
  3928  002C                     	ds	1
  3929  002D                     set_motor_pps@lat_b:	
  3930                           
  3931                           ; 1 bytes @ 0xD
  3932  002D                     	ds	1
  3933  002E                     set_motor_pps@x:	
  3934                           
  3935                           ; 1 bytes @ 0xE
  3936  002E                     	ds	1
  3937  002F                     ??_config_pwm:	
  3938  002F                     ?_set_pwm_mode:	
  3939                           ; 1 bytes @ 0xF
  3940                           
  3941  002F                     set_pwm_mode@mode:	
  3942                           ; 1 bytes @ 0xF
  3943                           
  3944                           
  3945                           ; 1 bytes @ 0xF
  3946  002F                     	ds	1
  3947  0030                     ??_set_pwm_mode:	
  3948                           
  3949                           ; 1 bytes @ 0x10
  3950  0030                     	ds	2
  3951  0032                     set_pwm_mode@motor:	
  3952                           
  3953                           ; 1 bytes @ 0x12
  3954  0032                     	ds	1
  3955  0033                     set_pwm_mode@a:	
  3956                           
  3957                           ; 1 bytes @ 0x13
  3958  0033                     	ds	1
  3959  0034                     set_pwm_mode@b:	
  3960                           
  3961                           ; 1 bytes @ 0x14
  3962  0034                     	ds	1
  3963  0035                     ?_set_motor:	
  3964  0035                     set_motor@dir:	
  3965                           ; 1 bytes @ 0x15
  3966                           
  3967                           
  3968                           ; 1 bytes @ 0x15
  3969  0035                     	ds	1
  3970  0036                     set_motor@pwm:	
  3971                           
  3972                           ; 1 bytes @ 0x16
  3973  0036                     	ds	1
  3974  0037                     ??_set_motor:	
  3975                           
  3976                           ; 1 bytes @ 0x17
  3977  0037                     	ds	2
  3978  0039                     set_motor@motor:	
  3979                           
  3980                           ; 1 bytes @ 0x19
  3981  0039                     	ds	1
  3982  003A                     ??_update_ctl:	
  3983                           
  3984                           ; 1 bytes @ 0x1A
  3985  003A                     	ds	2
  3986  003C                     update_ctl@c:	
  3987                           
  3988                           ; 1 bytes @ 0x1C
  3989  003C                     	ds	1
  3990  003D                     update_ctl@i:	
  3991                           
  3992                           ; 1 bytes @ 0x1D
  3993  003D                     	ds	1
  3994  003E                     ??_update_motors:	
  3995  003E                     ??_main:	
  3996                           ; 1 bytes @ 0x1E
  3997                           
  3998                           
  3999                           	psect	maintext
  4000  03B6                     __pmaintext:	
  4001                           ; 1 bytes @ 0x1E
  4002 ;;
  4003 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  4004 ;;
  4005 ;; *************** function _main *****************
  4006 ;; Defined at:
  4007 ;;		line 25 in file "code/main.c"
  4008 ;; Parameters:    Size  Location     Type
  4009 ;;		None
  4010 ;; Auto vars:     Size  Location     Type
  4011 ;;  ptr             2    0        PTR unsigned char 
  4012 ;;		 -> SSP1CON(1), 
  4013 ;; Return value:  Size  Location     Type
  4014 ;;                  2  137[None  ] int 
  4015 ;; Registers used:
  4016 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4017 ;; Tracked objects:
  4018 ;;		On entry : B1F/0
  4019 ;;		On exit  : 0/0
  4020 ;;		Unchanged: 0/0
  4021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4022 ;;      Params:         0       0       0       0       0       0       0       0
  4023 ;;      Locals:         0       2       0       0       0       0       0       0
  4024 ;;      Temps:          0       0       0       0       0       0       0       0
  4025 ;;      Totals:         0       2       0       0       0       0       0       0
  4026 ;;Total ram usage:        2 bytes
  4027 ;; Hardware stack levels required when called:    9
  4028 ;; This function calls:
  4029 ;;		_config_cpu
  4030 ;;		_config_i2c
  4031 ;;		_config_io
  4032 ;;		_config_pwm
  4033 ;;		_config_rev
  4034 ;;		_i2c_isr
  4035 ;;		_update_motors
  4036 ;;		_update_rev
  4037 ;; This function is called by:
  4038 ;;		Startup code after reset
  4039 ;; This function uses a non-reentrant model
  4040 ;;
  4041                           
  4042                           
  4043                           ;psect for function _main
  4044  03B6                     _main:	
  4045  03B6                     l2313:	
  4046                           ;incstack = 0
  4047                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4048                           
  4049  03B6  0024               	movlb	4	; select bank4
  4050  03B7  0815               	movf	21,w	;volatile
  4051  03B8                     l2315:	
  4052                           
  4053                           ;code/main.c: 28:      config_cpu();
  4054  03B8  3184  24E4  3183   	fcall	_config_cpu
  4055                           
  4056                           ;code/main.c: 29:      config_io();
  4057  03BB  3184  2489  3183   	fcall	_config_io
  4058  03BE                     l2317:	
  4059                           
  4060                           ;code/main.c: 30:      config_pwm();
  4061  03BE  3182  2272  3183   	fcall	_config_pwm
  4062  03C1                     l2319:	
  4063                           
  4064                           ;code/main.c: 31:      config_i2c();
  4065  03C1  3183  236A  3183   	fcall	_config_i2c
  4066  03C4                     l2321:	
  4067                           
  4068                           ;code/main.c: 32:      config_rev();
  4069  03C4  3184  24CF  3183   	fcall	_config_rev
  4070  03C7                     l2323:	
  4071                           
  4072                           ;code/main.c: 35:           update_motors();
  4073  03C7  3184  24F3  3183   	fcall	_update_motors
  4074  03CA                     l2325:	
  4075                           
  4076                           ;code/main.c: 36:           if(PIR1bits.SSP1IF){
  4077  03CA  0020               	movlb	0	; select bank0
  4078  03CB  1D91               	btfss	17,3	;volatile
  4079  03CC  2BCE               	goto	u1321
  4080  03CD  2BCF               	goto	u1320
  4081  03CE                     u1321:	
  4082  03CE  2BD3               	goto	l2331
  4083  03CF                     u1320:	
  4084  03CF                     l2327:	
  4085                           
  4086                           ;code/main.c: 37:                PIR1bits.SSP1IF = 0;
  4087  03CF  1191               	bcf	17,3	;volatile
  4088  03D0                     l2329:	
  4089                           
  4090                           ;code/main.c: 38:                i2c_isr();
  4091  03D0  3184  2457  3183   	fcall	_i2c_isr
  4092  03D3                     l2331:	
  4093                           
  4094                           ;code/main.c: 40:           update_rev();
  4095  03D3  3181  21DF  3183   	fcall	_update_rev
  4096  03D6  2BC7               	goto	l2323
  4097  03D7  3180  2811         	ljmp	start
  4098  03D9                     __end_of_main:	
  4099                           
  4100                           	psect	text1
  4101  01DF                     __ptext1:	
  4102 ;; *************** function _update_rev *****************
  4103 ;; Defined at:
  4104 ;;		line 39 in file "code/rev.c"
  4105 ;; Parameters:    Size  Location     Type
  4106 ;;		None
  4107 ;; Auto vars:     Size  Location     Type
  4108 ;;  t               2   10[BANK0 ] short 
  4109 ;;  steps_buf       1   12[BANK0 ] unsigned char 
  4110 ;; Return value:  Size  Location     Type
  4111 ;;                  1    wreg      void 
  4112 ;; Registers used:
  4113 ;;		wreg, status,2, status,0, pclath, cstack
  4114 ;; Tracked objects:
  4115 ;;		On entry : 0/0
  4116 ;;		On exit  : 0/0
  4117 ;;		Unchanged: 0/0
  4118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4119 ;;      Params:         0       0       0       0       0       0       0       0
  4120 ;;      Locals:         0       3       0       0       0       0       0       0
  4121 ;;      Temps:          0       1       0       0       0       0       0       0
  4122 ;;      Totals:         0       4       0       0       0       0       0       0
  4123 ;;Total ram usage:        4 bytes
  4124 ;; Hardware stack levels used:    1
  4125 ;; Hardware stack levels required when called:    5
  4126 ;; This function calls:
  4127 ;;		_get_timer
  4128 ;;		_reset_timer
  4129 ;;		_start_timer
  4130 ;;		_stop_timer
  4131 ;; This function is called by:
  4132 ;;		_main
  4133 ;; This function uses a non-reentrant model
  4134 ;;
  4135                           
  4136                           
  4137                           ;psect for function _update_rev
  4138  01DF                     _update_rev:	
  4139  01DF                     l2285:	
  4140                           ;incstack = 0
  4141                           ; Regs used in _update_rev: [wreg+status,2+status,0+pclath+cstack]
  4142                           
  4143                           
  4144                           ;code/rev.c: 40:      u8 steps_buf = i2c_registers[9];
  4145  01DF  0020               	movlb	0	; select bank0
  4146  01E0  0847               	movf	_i2c_registers+9,w
  4147  01E1  00A9               	movwf	??_update_rev
  4148  01E2  0829               	movf	??_update_rev,w
  4149  01E3  00AC               	movwf	update_rev@steps_buf
  4150  01E4                     l2287:	
  4151                           
  4152                           ;code/rev.c: 42:      if(PORTBbits.RB3){
  4153  01E4  1D8D               	btfss	13,3	;volatile
  4154  01E5  29E7               	goto	u1261
  4155  01E6  29E8               	goto	u1260
  4156  01E7                     u1261:	
  4157  01E7  2A08               	goto	l2299
  4158  01E8                     u1260:	
  4159  01E8                     l2289:	
  4160                           
  4161                           ;code/rev.c: 43:           short t = get_timer();
  4162  01E8  3184  2419  3181   	fcall	_get_timer
  4163  01EB  0020               	movlb	0	; select bank0
  4164  01EC  0821               	movf	?_get_timer+1,w
  4165  01ED  00AB               	movwf	update_rev@t+1
  4166  01EE  0820               	movf	?_get_timer,w
  4167  01EF  00AA               	movwf	update_rev@t
  4168  01F0                     l2291:	
  4169                           
  4170                           ;code/rev.c: 44:           if(t >= int_time_delay){
  4171  01F0  082B               	movf	update_rev@t+1,w
  4172  01F1  3A80               	xorlw	128
  4173  01F2  00A9               	movwf	??_update_rev
  4174  01F3  3083               	movlw	131
  4175  01F4  0229               	subwf	??_update_rev,w
  4176  01F5  1D03               	skipz
  4177  01F6  29F9               	goto	u1275
  4178  01F7  30E8               	movlw	232
  4179  01F8  022A               	subwf	update_rev@t,w
  4180  01F9                     u1275:	
  4181  01F9  1C03               	skipc
  4182  01FA  29FC               	goto	u1271
  4183  01FB  29FD               	goto	u1270
  4184  01FC                     u1271:	
  4185  01FC  2A05               	goto	l2297
  4186  01FD                     u1270:	
  4187  01FD                     l2293:	
  4188                           
  4189                           ;code/rev.c: 45:                if(i2c_registers[9])i2c_registers[9] -= 1;
  4190  01FD  0020               	movlb	0	; select bank0
  4191  01FE  0847               	movf	_i2c_registers+9,w
  4192  01FF  1903               	btfsc	3,2
  4193  0200  2A02               	goto	u1281
  4194  0201  2A03               	goto	u1280
  4195  0202                     u1281:	
  4196  0202  2A05               	goto	l2297
  4197  0203                     u1280:	
  4198  0203                     l2295:	
  4199  0203  3001               	movlw	1
  4200  0204  02C7               	subwf	_i2c_registers+9,f
  4201  0205                     l2297:	
  4202                           
  4203                           ;code/rev.c: 47:           reset_timer();
  4204  0205  3184  24EA  3181   	fcall	_reset_timer
  4205  0208                     l2299:	
  4206                           
  4207                           ;code/rev.c: 51:      if(!steps_buf && prev_steps){
  4208  0208  0020               	movlb	0	; select bank0
  4209  0209  082C               	movf	update_rev@steps_buf,w
  4210  020A  1D03               	btfss	3,2
  4211  020B  2A0D               	goto	u1291
  4212  020C  2A0E               	goto	u1290
  4213  020D                     u1291:	
  4214  020D  2A18               	goto	l2307
  4215  020E                     u1290:	
  4216  020E                     l2301:	
  4217  020E  0848               	movf	_prev_steps,w
  4218  020F  1903               	btfsc	3,2
  4219  0210  2A12               	goto	u1301
  4220  0211  2A13               	goto	u1300
  4221  0212                     u1301:	
  4222  0212  2A18               	goto	l2307
  4223  0213                     u1300:	
  4224  0213                     l2303:	
  4225                           
  4226                           ;code/rev.c: 52:           i2c_registers[8] = 0;
  4227  0213  01C6               	clrf	_i2c_registers+8
  4228  0214                     l2305:	
  4229                           
  4230                           ;code/rev.c: 53:           stop_timer();
  4231  0214  3184  24F7  3181   	fcall	_stop_timer
  4232                           
  4233                           ;code/rev.c: 54:      }
  4234  0217  2A24               	goto	l2311
  4235  0218                     l2307:	
  4236  0218  082C               	movf	update_rev@steps_buf,w
  4237  0219  0248               	subwf	_prev_steps,w
  4238  021A  1803               	skipnc
  4239  021B  2A1D               	goto	u1311
  4240  021C  2A1E               	goto	u1310
  4241  021D                     u1311:	
  4242  021D  2A24               	goto	l2311
  4243  021E                     u1310:	
  4244  021E                     l2309:	
  4245                           
  4246                           ;code/rev.c: 56:           start_timer();
  4247  021E  3184  24FA  3181   	fcall	_start_timer
  4248                           
  4249                           ;code/rev.c: 57:           reset_timer();
  4250  0221  3184  24EA  3181   	fcall	_reset_timer
  4251  0224                     l2311:	
  4252                           
  4253                           ;code/rev.c: 59:      prev_steps = steps_buf;
  4254  0224  0020               	movlb	0	; select bank0
  4255  0225  082C               	movf	update_rev@steps_buf,w
  4256  0226  00A9               	movwf	??_update_rev
  4257  0227  0829               	movf	??_update_rev,w
  4258  0228  00C8               	movwf	_prev_steps
  4259  0229                     l337:	
  4260  0229  0008               	return
  4261  022A                     __end_of_update_rev:	
  4262                           
  4263                           	psect	text2
  4264  04F7                     __ptext2:	
  4265 ;; *************** function _stop_timer *****************
  4266 ;; Defined at:
  4267 ;;		line 30 in file "code/rev.c"
  4268 ;; Parameters:    Size  Location     Type
  4269 ;;		None
  4270 ;; Auto vars:     Size  Location     Type
  4271 ;;		None
  4272 ;; Return value:  Size  Location     Type
  4273 ;;                  1    wreg      void 
  4274 ;; Registers used:
  4275 ;;		None
  4276 ;; Tracked objects:
  4277 ;;		On entry : 0/0
  4278 ;;		On exit  : 0/0
  4279 ;;		Unchanged: 0/0
  4280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4281 ;;      Params:         0       0       0       0       0       0       0       0
  4282 ;;      Locals:         0       0       0       0       0       0       0       0
  4283 ;;      Temps:          0       0       0       0       0       0       0       0
  4284 ;;      Totals:         0       0       0       0       0       0       0       0
  4285 ;;Total ram usage:        0 bytes
  4286 ;; Hardware stack levels used:    1
  4287 ;; Hardware stack levels required when called:    4
  4288 ;; This function calls:
  4289 ;;		Nothing
  4290 ;; This function is called by:
  4291 ;;		_update_rev
  4292 ;; This function uses a non-reentrant model
  4293 ;;
  4294                           
  4295                           
  4296                           ;psect for function _stop_timer
  4297  04F7                     _stop_timer:	
  4298  04F7                     l2207:	
  4299                           ;incstack = 0
  4300                           ; Regs used in _stop_timer: []
  4301                           
  4302                           
  4303                           ;code/rev.c: 31:      T3CONbits.ON = 0;
  4304  04F7  0020               	movlb	0	; select bank0
  4305  04F8  101E               	bcf	30,0	;volatile
  4306  04F9                     l323:	
  4307  04F9  0008               	return
  4308  04FA                     __end_of_stop_timer:	
  4309                           
  4310                           	psect	text3
  4311  04FA                     __ptext3:	
  4312 ;; *************** function _start_timer *****************
  4313 ;; Defined at:
  4314 ;;		line 34 in file "code/rev.c"
  4315 ;; Parameters:    Size  Location     Type
  4316 ;;		None
  4317 ;; Auto vars:     Size  Location     Type
  4318 ;;		None
  4319 ;; Return value:  Size  Location     Type
  4320 ;;                  1    wreg      void 
  4321 ;; Registers used:
  4322 ;;		None
  4323 ;; Tracked objects:
  4324 ;;		On entry : 0/0
  4325 ;;		On exit  : 0/0
  4326 ;;		Unchanged: 0/0
  4327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4328 ;;      Params:         0       0       0       0       0       0       0       0
  4329 ;;      Locals:         0       0       0       0       0       0       0       0
  4330 ;;      Temps:          0       0       0       0       0       0       0       0
  4331 ;;      Totals:         0       0       0       0       0       0       0       0
  4332 ;;Total ram usage:        0 bytes
  4333 ;; Hardware stack levels used:    1
  4334 ;; Hardware stack levels required when called:    4
  4335 ;; This function calls:
  4336 ;;		Nothing
  4337 ;; This function is called by:
  4338 ;;		_update_rev
  4339 ;; This function uses a non-reentrant model
  4340 ;;
  4341                           
  4342                           
  4343                           ;psect for function _start_timer
  4344  04FA                     _start_timer:	
  4345  04FA                     l2209:	
  4346                           ;incstack = 0
  4347                           ; Regs used in _start_timer: []
  4348                           
  4349                           
  4350                           ;code/rev.c: 35:      T3CONbits.ON = 1;
  4351  04FA  0020               	movlb	0	; select bank0
  4352  04FB  141E               	bsf	30,0	;volatile
  4353  04FC                     l326:	
  4354  04FC  0008               	return
  4355  04FD                     __end_of_start_timer:	
  4356                           
  4357                           	psect	text4
  4358  04EA                     __ptext4:	
  4359 ;; *************** function _reset_timer *****************
  4360 ;; Defined at:
  4361 ;;		line 24 in file "code/rev.c"
  4362 ;; Parameters:    Size  Location     Type
  4363 ;;		None
  4364 ;; Auto vars:     Size  Location     Type
  4365 ;;		None
  4366 ;; Return value:  Size  Location     Type
  4367 ;;                  1    wreg      void 
  4368 ;; Registers used:
  4369 ;;		status,2
  4370 ;; Tracked objects:
  4371 ;;		On entry : 0/0
  4372 ;;		On exit  : 0/0
  4373 ;;		Unchanged: 0/0
  4374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4375 ;;      Params:         0       0       0       0       0       0       0       0
  4376 ;;      Locals:         0       0       0       0       0       0       0       0
  4377 ;;      Temps:          0       0       0       0       0       0       0       0
  4378 ;;      Totals:         0       0       0       0       0       0       0       0
  4379 ;;Total ram usage:        0 bytes
  4380 ;; Hardware stack levels used:    1
  4381 ;; Hardware stack levels required when called:    4
  4382 ;; This function calls:
  4383 ;;		Nothing
  4384 ;; This function is called by:
  4385 ;;		_update_rev
  4386 ;; This function uses a non-reentrant model
  4387 ;;
  4388                           
  4389                           
  4390                           ;psect for function _reset_timer
  4391  04EA                     _reset_timer:	
  4392  04EA                     l2205:	
  4393                           ;incstack = 0
  4394                           ; Regs used in _reset_timer: [status,2]
  4395                           
  4396                           
  4397                           ;code/rev.c: 25:      TMR3L = 0;
  4398  04EA  0020               	movlb	0	; select bank0
  4399  04EB  019C               	clrf	28	;volatile
  4400                           
  4401                           ;code/rev.c: 26:      TMR3H = 0;
  4402  04EC  019D               	clrf	29	;volatile
  4403                           
  4404                           ;code/rev.c: 27:      TMR3L = 0;
  4405  04ED  019C               	clrf	28	;volatile
  4406  04EE                     l320:	
  4407  04EE  0008               	return
  4408  04EF                     __end_of_reset_timer:	
  4409                           
  4410                           	psect	text5
  4411  0419                     __ptext5:	
  4412 ;; *************** function _get_timer *****************
  4413 ;; Defined at:
  4414 ;;		line 15 in file "code/rev.c"
  4415 ;; Parameters:    Size  Location     Type
  4416 ;;		None
  4417 ;; Auto vars:     Size  Location     Type
  4418 ;;  h               1    8[BANK0 ] unsigned char 
  4419 ;;  l               1    7[BANK0 ] unsigned char 
  4420 ;; Return value:  Size  Location     Type
  4421 ;;                  2    0[BANK0 ] short 
  4422 ;; Registers used:
  4423 ;;		wreg, status,2, status,0
  4424 ;; Tracked objects:
  4425 ;;		On entry : 0/0
  4426 ;;		On exit  : 0/0
  4427 ;;		Unchanged: 0/0
  4428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4429 ;;      Params:         0       2       0       0       0       0       0       0
  4430 ;;      Locals:         0       2       0       0       0       0       0       0
  4431 ;;      Temps:          0       5       0       0       0       0       0       0
  4432 ;;      Totals:         0       9       0       0       0       0       0       0
  4433 ;;Total ram usage:        9 bytes
  4434 ;; Hardware stack levels used:    1
  4435 ;; Hardware stack levels required when called:    4
  4436 ;; This function calls:
  4437 ;;		Nothing
  4438 ;; This function is called by:
  4439 ;;		_update_rev
  4440 ;; This function uses a non-reentrant model
  4441 ;;
  4442                           
  4443                           
  4444                           ;psect for function _get_timer
  4445  0419                     _get_timer:	
  4446  0419                     l315:	
  4447                           ;incstack = 0
  4448                           ; Regs used in _get_timer: [wreg+status,2+status,0]
  4449                           ;code/rev.c: 16:      u8 h,l;;code/rev.c: 17:      do{
  4450                           
  4451  0419                     l2199:	
  4452                           
  4453                           ;code/rev.c: 18:           h = TMR3H;
  4454  0419  0020               	movlb	0	; select bank0
  4455  041A  081D               	movf	29,w	;volatile
  4456  041B  00A2               	movwf	??_get_timer
  4457  041C  0822               	movf	??_get_timer,w
  4458  041D  00A8               	movwf	get_timer@h
  4459                           
  4460                           ;code/rev.c: 19:           l = TMR3L;
  4461  041E  081C               	movf	28,w	;volatile
  4462  041F  00A2               	movwf	??_get_timer
  4463  0420  0822               	movf	??_get_timer,w
  4464  0421  00A7               	movwf	get_timer@l
  4465                           
  4466                           ;code/rev.c: 20:      }while(h != TMR3H);
  4467  0422  0828               	movf	get_timer@h,w
  4468  0423  061D               	xorwf	29,w	;volatile
  4469  0424  1D03               	skipz
  4470  0425  2C27               	goto	u1241
  4471  0426  2C28               	goto	u1240
  4472  0427                     u1241:	
  4473  0427  2C19               	goto	l315
  4474  0428                     u1240:	
  4475  0428                     l2201:	
  4476                           
  4477                           ;code/rev.c: 21:      return (h<<8) + l;
  4478  0428  0827               	movf	get_timer@l,w
  4479  0429  00A2               	movwf	??_get_timer
  4480  042A  01A3               	clrf	??_get_timer+1
  4481  042B  0828               	movf	get_timer@h,w
  4482  042C  00A4               	movwf	??_get_timer+2
  4483  042D  01A5               	clrf	??_get_timer+3
  4484  042E  0824               	movf	??_get_timer+2,w
  4485  042F  00A5               	movwf	??_get_timer+3
  4486  0430  01A4               	clrf	??_get_timer+2
  4487  0431  0822               	movf	??_get_timer,w
  4488  0432  0724               	addwf	??_get_timer+2,w
  4489  0433  00A0               	movwf	?_get_timer
  4490  0434  0823               	movf	??_get_timer+1,w
  4491  0435  3D25               	addwfc	??_get_timer+3,w
  4492  0436  00A1               	movwf	?_get_timer+1
  4493  0437                     l317:	
  4494  0437  0008               	return
  4495  0438                     __end_of_get_timer:	
  4496                           
  4497                           	psect	text6
  4498  04F3                     __ptext6:	
  4499 ;; *************** function _update_motors *****************
  4500 ;; Defined at:
  4501 ;;		line 42 in file "code/motors.c"
  4502 ;; Parameters:    Size  Location     Type
  4503 ;;		None
  4504 ;; Auto vars:     Size  Location     Type
  4505 ;;		None
  4506 ;; Return value:  Size  Location     Type
  4507 ;;                  1    wreg      void 
  4508 ;; Registers used:
  4509 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4510 ;; Tracked objects:
  4511 ;;		On entry : 0/0
  4512 ;;		On exit  : 0/0
  4513 ;;		Unchanged: 0/0
  4514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4515 ;;      Params:         0       0       0       0       0       0       0       0
  4516 ;;      Locals:         0       0       0       0       0       0       0       0
  4517 ;;      Temps:          0       0       0       0       0       0       0       0
  4518 ;;      Totals:         0       0       0       0       0       0       0       0
  4519 ;;Total ram usage:        0 bytes
  4520 ;; Hardware stack levels used:    1
  4521 ;; Hardware stack levels required when called:    8
  4522 ;; This function calls:
  4523 ;;		_update_ctl
  4524 ;; This function is called by:
  4525 ;;		_main
  4526 ;; This function uses a non-reentrant model
  4527 ;;
  4528                           
  4529                           
  4530                           ;psect for function _update_motors
  4531  04F3                     _update_motors:	
  4532  04F3                     l2283:	
  4533                           ;incstack = 0
  4534                           ; Regs used in _update_motors: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4535                           
  4536                           
  4537                           ;code/motors.c: 44:      update_ctl();
  4538  04F3  3182  22B6  3184   	fcall	_update_ctl
  4539  04F6                     l168:	
  4540  04F6  0008               	return
  4541  04F7                     __end_of_update_motors:	
  4542                           
  4543                           	psect	text7
  4544  02B6                     __ptext7:	
  4545 ;; *************** function _update_ctl *****************
  4546 ;; Defined at:
  4547 ;;		line 30 in file "code/motors.c"
  4548 ;; Parameters:    Size  Location     Type
  4549 ;;		None
  4550 ;; Auto vars:     Size  Location     Type
  4551 ;;  i               1   29[BANK0 ] unsigned char 
  4552 ;;  c               1   28[BANK0 ] unsigned char 
  4553 ;; Return value:  Size  Location     Type
  4554 ;;                  1    wreg      void 
  4555 ;; Registers used:
  4556 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4557 ;; Tracked objects:
  4558 ;;		On entry : 0/0
  4559 ;;		On exit  : 0/0
  4560 ;;		Unchanged: 0/0
  4561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4562 ;;      Params:         0       0       0       0       0       0       0       0
  4563 ;;      Locals:         0       2       0       0       0       0       0       0
  4564 ;;      Temps:          0       2       0       0       0       0       0       0
  4565 ;;      Totals:         0       4       0       0       0       0       0       0
  4566 ;;Total ram usage:        4 bytes
  4567 ;; Hardware stack levels used:    1
  4568 ;; Hardware stack levels required when called:    7
  4569 ;; This function calls:
  4570 ;;		_set_motor
  4571 ;;		_set_pwm_mode
  4572 ;; This function is called by:
  4573 ;;		_update_motors
  4574 ;; This function uses a non-reentrant model
  4575 ;;
  4576                           
  4577                           
  4578                           ;psect for function _update_ctl
  4579  02B6                     _update_ctl:	
  4580  02B6                     l2175:	
  4581                           ;incstack = 0
  4582                           ; Regs used in _update_ctl: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4583                           
  4584                           
  4585                           ;code/motors.c: 32:      u8 c = i2c_registers[0];
  4586  02B6  0020               	movlb	0	; select bank0
  4587  02B7  083E               	movf	_i2c_registers,w
  4588  02B8  00BA               	movwf	??_update_ctl
  4589  02B9  083A               	movf	??_update_ctl,w
  4590  02BA  00BC               	movwf	update_ctl@c
  4591  02BB                     l2177:	
  4592                           
  4593                           ;code/motors.c: 33:      for(u8 i=1;i<=4;++i){
  4594  02BB  01BD               	clrf	update_ctl@i
  4595  02BC  0ABD               	incf	update_ctl@i,f
  4596  02BD                     l2181:	
  4597                           
  4598                           ;code/motors.c: 34:    if(c & (0b1000<<i)){
  4599  02BD  3008               	movlw	8
  4600  02BE  00BA               	movwf	??_update_ctl
  4601  02BF  0A3D               	incf	update_ctl@i,w
  4602  02C0  2AC2               	goto	u1154
  4603  02C1                     u1155:	
  4604  02C1  35BA               	lslf	??_update_ctl,f
  4605  02C2                     u1154:	
  4606  02C2  0B89               	decfsz	9,f
  4607  02C3  2AC1               	goto	u1155
  4608  02C4  083A               	movf	??_update_ctl,w
  4609  02C5  053C               	andwf	update_ctl@c,w
  4610  02C6  1903               	btfsc	3,2
  4611  02C7  2AC9               	goto	u1161
  4612  02C8  2ACA               	goto	u1160
  4613  02C9                     u1161:	
  4614  02C9  2ADF               	goto	l2185
  4615  02CA                     u1160:	
  4616  02CA                     l2183:	
  4617                           
  4618                           ;code/motors.c: 35:         set_motor(i,i2c_registers[(i<<1)-1],i2c_registers[(i<<1)]);
  4619  02CA  353D               	lslf	update_ctl@i,w
  4620  02CB  3E3D               	addlw	(low ((_i2c_registers| 0+255)))& (0+255)
  4621  02CC  0086               	movwf	6
  4622  02CD  0187               	clrf	7
  4623  02CE  0801               	movf	1,w
  4624  02CF  00BA               	movwf	??_update_ctl
  4625  02D0  083A               	movf	??_update_ctl,w
  4626  02D1  00B5               	movwf	set_motor@dir
  4627  02D2  353D               	lslf	update_ctl@i,w
  4628  02D3  3E3E               	addlw	(low (_i2c_registers| 0))& (0+255)
  4629  02D4  0086               	movwf	6
  4630  02D5  0187               	clrf	7
  4631  02D6  0801               	movf	1,w
  4632  02D7  00BB               	movwf	??_update_ctl+1
  4633  02D8  083B               	movf	??_update_ctl+1,w
  4634  02D9  00B6               	movwf	set_motor@pwm
  4635  02DA  083D               	movf	update_ctl@i,w
  4636  02DB  3181  2183  3182   	fcall	_set_motor
  4637                           
  4638                           ;code/motors.c: 36:    }else{
  4639  02DE  2AE7               	goto	l2187
  4640  02DF                     l2185:	
  4641                           
  4642                           ;code/motors.c: 37:         set_pwm_mode(i,'O');
  4643  02DF  304F               	movlw	79
  4644  02E0  00BA               	movwf	??_update_ctl
  4645  02E1  083A               	movf	??_update_ctl,w
  4646  02E2  00AF               	movwf	set_pwm_mode@mode
  4647  02E3  083D               	movf	update_ctl@i,w
  4648  02E4  3184  2438  3182   	fcall	_set_pwm_mode
  4649  02E7                     l2187:	
  4650                           
  4651                           ;code/motors.c: 39:      }
  4652  02E7  3001               	movlw	1
  4653  02E8  0020               	movlb	0	; select bank0
  4654  02E9  00BA               	movwf	??_update_ctl
  4655  02EA  083A               	movf	??_update_ctl,w
  4656  02EB  07BD               	addwf	update_ctl@i,f
  4657  02EC                     l2189:	
  4658  02EC  3005               	movlw	5
  4659  02ED  023D               	subwf	update_ctl@i,w
  4660  02EE  1C03               	skipc
  4661  02EF  2AF1               	goto	u1171
  4662  02F0  2AF2               	goto	u1170
  4663  02F1                     u1171:	
  4664  02F1  2ABD               	goto	l2181
  4665  02F2                     u1170:	
  4666  02F2                     l165:	
  4667  02F2  0008               	return
  4668  02F3                     __end_of_update_ctl:	
  4669                           
  4670                           	psect	text8
  4671  0183                     __ptext8:	
  4672 ;; *************** function _set_motor *****************
  4673 ;; Defined at:
  4674 ;;		line 6 in file "code/motors.c"
  4675 ;; Parameters:    Size  Location     Type
  4676 ;;  motor           1    wreg     unsigned char 
  4677 ;;  dir             1   21[BANK0 ] unsigned char 
  4678 ;;  pwm             1   22[BANK0 ] unsigned char 
  4679 ;; Auto vars:     Size  Location     Type
  4680 ;;  motor           1   25[BANK0 ] unsigned char 
  4681 ;; Return value:  Size  Location     Type
  4682 ;;                  1    wreg      void 
  4683 ;; Registers used:
  4684 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4685 ;; Tracked objects:
  4686 ;;		On entry : 0/0
  4687 ;;		On exit  : 0/0
  4688 ;;		Unchanged: 0/0
  4689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4690 ;;      Params:         0       2       0       0       0       0       0       0
  4691 ;;      Locals:         0       1       0       0       0       0       0       0
  4692 ;;      Temps:          0       2       0       0       0       0       0       0
  4693 ;;      Totals:         0       5       0       0       0       0       0       0
  4694 ;;Total ram usage:        5 bytes
  4695 ;; Hardware stack levels used:    1
  4696 ;; Hardware stack levels required when called:    6
  4697 ;; This function calls:
  4698 ;;		_set_pwm
  4699 ;;		_set_pwm_mode
  4700 ;; This function is called by:
  4701 ;;		_update_ctl
  4702 ;; This function uses a non-reentrant model
  4703 ;;
  4704                           
  4705                           
  4706                           ;psect for function _set_motor
  4707  0183                     _set_motor:	
  4708                           
  4709                           ;incstack = 0
  4710                           ; Regs used in _set_motor: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4711                           ;set_motor@motor stored from wreg
  4712  0183  0020               	movlb	0	; select bank0
  4713  0184  00B9               	movwf	set_motor@motor
  4714  0185                     l2125:	
  4715                           
  4716                           ;code/motors.c: 6: void set_motor(u8 motor,u8 dir,u8 pwm);code/motors.c: 7: {;code/motor
      +                          s.c: 8:      switch(dir){
  4717  0185  29C8               	goto	l2145
  4718  0186                     l2127:	
  4719                           
  4720                           ;code/motors.c: 10:    set_pwm_mode(motor,'S');
  4721  0186  3053               	movlw	83
  4722  0187  00B7               	movwf	??_set_motor
  4723  0188  0837               	movf	??_set_motor,w
  4724  0189  00AF               	movwf	set_pwm_mode@mode
  4725  018A  0839               	movf	set_motor@motor,w
  4726  018B  3184  2438  3181   	fcall	_set_pwm_mode
  4727  018E                     l2129:	
  4728                           
  4729                           ;code/motors.c: 11:    set_pwm(motor,0);
  4730  018E  0020               	movlb	0	; select bank0
  4731  018F  01A0               	clrf	set_pwm@pwm
  4732  0190  0839               	movf	set_motor@motor,w
  4733  0191  3181  2124  3181   	fcall	_set_pwm
  4734                           
  4735                           ;code/motors.c: 12:    break;
  4736  0194  29DE               	goto	l158
  4737  0195                     l2131:	
  4738                           
  4739                           ;code/motors.c: 14:    set_pwm_mode(motor,'C');
  4740  0195  3043               	movlw	67
  4741  0196  00B7               	movwf	??_set_motor
  4742  0197  0837               	movf	??_set_motor,w
  4743  0198  00AF               	movwf	set_pwm_mode@mode
  4744  0199  0839               	movf	set_motor@motor,w
  4745  019A  3184  2438  3181   	fcall	_set_pwm_mode
  4746  019D                     l2133:	
  4747                           
  4748                           ;code/motors.c: 15:    set_pwm(motor,pwm);
  4749  019D  0020               	movlb	0	; select bank0
  4750  019E  0836               	movf	set_motor@pwm,w
  4751  019F  00B7               	movwf	??_set_motor
  4752  01A0  0837               	movf	??_set_motor,w
  4753  01A1  00A0               	movwf	set_pwm@pwm
  4754  01A2  0839               	movf	set_motor@motor,w
  4755  01A3  3181  2124  3181   	fcall	_set_pwm
  4756                           
  4757                           ;code/motors.c: 16:    break;
  4758  01A6  29DE               	goto	l158
  4759  01A7                     l2135:	
  4760                           
  4761                           ;code/motors.c: 18:    set_pwm_mode(motor,'A');
  4762  01A7  3041               	movlw	65
  4763  01A8  00B7               	movwf	??_set_motor
  4764  01A9  0837               	movf	??_set_motor,w
  4765  01AA  00AF               	movwf	set_pwm_mode@mode
  4766  01AB  0839               	movf	set_motor@motor,w
  4767  01AC  3184  2438  3181   	fcall	_set_pwm_mode
  4768  01AF                     l2137:	
  4769                           
  4770                           ;code/motors.c: 19:    set_pwm(motor,pwm);
  4771  01AF  0020               	movlb	0	; select bank0
  4772  01B0  0836               	movf	set_motor@pwm,w
  4773  01B1  00B7               	movwf	??_set_motor
  4774  01B2  0837               	movf	??_set_motor,w
  4775  01B3  00A0               	movwf	set_pwm@pwm
  4776  01B4  0839               	movf	set_motor@motor,w
  4777  01B5  3181  2124  3181   	fcall	_set_pwm
  4778                           
  4779                           ;code/motors.c: 20:    break;
  4780  01B8  29DE               	goto	l158
  4781  01B9                     l2139:	
  4782                           
  4783                           ;code/motors.c: 22:    set_pwm_mode(motor,'O');
  4784  01B9  304F               	movlw	79
  4785  01BA  00B7               	movwf	??_set_motor
  4786  01BB  0837               	movf	??_set_motor,w
  4787  01BC  00AF               	movwf	set_pwm_mode@mode
  4788  01BD  0839               	movf	set_motor@motor,w
  4789  01BE  3184  2438  3181   	fcall	_set_pwm_mode
  4790  01C1                     l2141:	
  4791                           
  4792                           ;code/motors.c: 23:    set_pwm(motor,0);
  4793  01C1  0020               	movlb	0	; select bank0
  4794  01C2  01A0               	clrf	set_pwm@pwm
  4795  01C3  0839               	movf	set_motor@motor,w
  4796  01C4  3181  2124  3181   	fcall	_set_pwm
  4797                           
  4798                           ;code/motors.c: 24:    break;
  4799  01C7  29DE               	goto	l158
  4800  01C8                     l2145:	
  4801  01C8  0835               	movf	set_motor@dir,w
  4802  01C9  00B7               	movwf	??_set_motor
  4803  01CA  01B8               	clrf	??_set_motor+1
  4804                           
  4805                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4806                           ; Switch size 1, requested type "simple"
  4807                           ; Number of cases is 1, Range of values is 0 to 0
  4808                           ; switch strategies available:
  4809                           ; Name         Instructions Cycles
  4810                           ; simple_byte            4     3 (average)
  4811                           ; direct_byte            8     6 (fixed)
  4812                           ; jumptable            260     6 (fixed)
  4813                           ;	Chosen strategy is simple_byte
  4814  01CB  0838               	movf	??_set_motor+1,w
  4815  01CC  3A00               	xorlw	0	; case 0
  4816  01CD  1903               	skipnz
  4817  01CE  29D0               	goto	l2473
  4818  01CF  29DE               	goto	l158
  4819  01D0                     l2473:	
  4820                           
  4821                           ; Switch size 1, requested type "simple"
  4822                           ; Number of cases is 4, Range of values is 0 to 3
  4823                           ; switch strategies available:
  4824                           ; Name         Instructions Cycles
  4825                           ; simple_byte           13     7 (average)
  4826                           ; direct_byte           14     6 (fixed)
  4827                           ; jumptable            260     6 (fixed)
  4828                           ;	Chosen strategy is simple_byte
  4829  01D0  0837               	movf	??_set_motor,w
  4830  01D1  3A00               	xorlw	0	; case 0
  4831  01D2  1903               	skipnz
  4832  01D3  2986               	goto	l2127
  4833  01D4  3A01               	xorlw	1	; case 1
  4834  01D5  1903               	skipnz
  4835  01D6  2995               	goto	l2131
  4836  01D7  3A03               	xorlw	3	; case 2
  4837  01D8  1903               	skipnz
  4838  01D9  29A7               	goto	l2135
  4839  01DA  3A01               	xorlw	1	; case 3
  4840  01DB  1903               	skipnz
  4841  01DC  29B9               	goto	l2139
  4842  01DD  29DE               	goto	l158
  4843  01DE                     l158:	
  4844  01DE  0008               	return
  4845  01DF                     __end_of_set_motor:	
  4846                           
  4847                           	psect	text9
  4848  0438                     __ptext9:	
  4849 ;; *************** function _set_pwm_mode *****************
  4850 ;; Defined at:
  4851 ;;		line 141 in file "code/pwm.c"
  4852 ;; Parameters:    Size  Location     Type
  4853 ;;  motor           1    wreg     unsigned char 
  4854 ;;  mode            1   15[BANK0 ] unsigned char 
  4855 ;; Auto vars:     Size  Location     Type
  4856 ;;  motor           1   18[BANK0 ] unsigned char 
  4857 ;;  b               1   20[BANK0 ] unsigned char 
  4858 ;;  a               1   19[BANK0 ] unsigned char 
  4859 ;; Return value:  Size  Location     Type
  4860 ;;                  1    wreg      void 
  4861 ;; Registers used:
  4862 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4863 ;; Tracked objects:
  4864 ;;		On entry : 0/0
  4865 ;;		On exit  : 0/0
  4866 ;;		Unchanged: 0/0
  4867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4868 ;;      Params:         0       1       0       0       0       0       0       0
  4869 ;;      Locals:         0       3       0       0       0       0       0       0
  4870 ;;      Temps:          0       2       0       0       0       0       0       0
  4871 ;;      Totals:         0       6       0       0       0       0       0       0
  4872 ;;Total ram usage:        6 bytes
  4873 ;; Hardware stack levels used:    1
  4874 ;; Hardware stack levels required when called:    5
  4875 ;; This function calls:
  4876 ;;		_get_a_val
  4877 ;;		_get_b_val
  4878 ;;		_set_motor_pps
  4879 ;; This function is called by:
  4880 ;;		_set_motor
  4881 ;;		_update_ctl
  4882 ;; This function uses a non-reentrant model
  4883 ;;
  4884                           
  4885                           
  4886                           ;psect for function _set_pwm_mode
  4887  0438                     _set_pwm_mode:	
  4888                           
  4889                           ;incstack = 0
  4890                           ; Regs used in _set_pwm_mode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4891                           ;set_pwm_mode@motor stored from wreg
  4892  0438  0020               	movlb	0	; select bank0
  4893  0439  00B2               	movwf	set_pwm_mode@motor
  4894  043A                     l2075:	
  4895                           
  4896                           ;code/pwm.c: 141: void set_pwm_mode(u8 motor,char mode);code/pwm.c: 142: {;code/pwm.c: 1
      +                          43:      u8 a = get_a_val(mode);
  4897  043A  082F               	movf	set_pwm_mode@mode,w
  4898  043B  3183  23F9  3184   	fcall	_get_a_val
  4899  043E  0020               	movlb	0	; select bank0
  4900  043F  00B0               	movwf	??_set_pwm_mode
  4901  0440  0830               	movf	??_set_pwm_mode,w
  4902  0441  00B3               	movwf	set_pwm_mode@a
  4903                           
  4904                           ;code/pwm.c: 144:      u8 b = get_b_val(mode);
  4905  0442  082F               	movf	set_pwm_mode@mode,w
  4906  0443  3183  23D9  3184   	fcall	_get_b_val
  4907  0446  0020               	movlb	0	; select bank0
  4908  0447  00B0               	movwf	??_set_pwm_mode
  4909  0448  0830               	movf	??_set_pwm_mode,w
  4910  0449  00B4               	movwf	set_pwm_mode@b
  4911  044A                     l2077:	
  4912                           
  4913                           ;code/pwm.c: 145:      set_motor_pps(motor,a,b);
  4914  044A  0833               	movf	set_pwm_mode@a,w
  4915  044B  00B0               	movwf	??_set_pwm_mode
  4916  044C  0830               	movf	??_set_pwm_mode,w
  4917  044D  00A0               	movwf	set_motor_pps@a_mode
  4918  044E  0834               	movf	set_pwm_mode@b,w
  4919  044F  00B1               	movwf	??_set_pwm_mode+1
  4920  0450  0831               	movf	??_set_pwm_mode+1,w
  4921  0451  00A1               	movwf	set_motor_pps@b_mode
  4922  0452  0832               	movf	set_pwm_mode@motor,w
  4923  0453  3180  2037  3184   	fcall	_set_motor_pps
  4924  0456                     l282:	
  4925  0456  0008               	return
  4926  0457                     __end_of_set_pwm_mode:	
  4927                           
  4928                           	psect	text10
  4929  03D9                     __ptext10:	
  4930 ;; *************** function _get_b_val *****************
  4931 ;; Defined at:
  4932 ;;		line 81 in file "code/pwm.c"
  4933 ;; Parameters:    Size  Location     Type
  4934 ;;  mode            1    wreg     unsigned char 
  4935 ;; Auto vars:     Size  Location     Type
  4936 ;;  mode            1    2[BANK0 ] unsigned char 
  4937 ;; Return value:  Size  Location     Type
  4938 ;;                  1    wreg      unsigned char 
  4939 ;; Registers used:
  4940 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4941 ;; Tracked objects:
  4942 ;;		On entry : 0/0
  4943 ;;		On exit  : 0/0
  4944 ;;		Unchanged: 0/0
  4945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4946 ;;      Params:         0       0       0       0       0       0       0       0
  4947 ;;      Locals:         0       1       0       0       0       0       0       0
  4948 ;;      Temps:          0       2       0       0       0       0       0       0
  4949 ;;      Totals:         0       3       0       0       0       0       0       0
  4950 ;;Total ram usage:        3 bytes
  4951 ;; Hardware stack levels used:    1
  4952 ;; Hardware stack levels required when called:    4
  4953 ;; This function calls:
  4954 ;;		Nothing
  4955 ;; This function is called by:
  4956 ;;		_set_pwm_mode
  4957 ;; This function uses a non-reentrant model
  4958 ;;
  4959                           
  4960                           
  4961                           ;psect for function _get_b_val
  4962  03D9                     _get_b_val:	
  4963                           
  4964                           ;incstack = 0
  4965                           ; Regs used in _get_b_val: [wreg-fsr0h+status,2+status,0]
  4966                           ;get_b_val@mode stored from wreg
  4967  03D9  0020               	movlb	0	; select bank0
  4968  03DA  00A2               	movwf	get_b_val@mode
  4969  03DB                     l2047:	
  4970                           
  4971                           ;code/pwm.c: 81: static u8 get_b_val(char mode);code/pwm.c: 82: {;code/pwm.c: 83:      s
      +                          witch(mode){
  4972  03DB  2BE2               	goto	l2067
  4973  03DC                     l2049:	
  4974                           
  4975                           ;code/pwm.c: 85:    return 1;
  4976  03DC  3001               	movlw	1
  4977  03DD  2BF8               	goto	l255
  4978  03DE                     l2053:	
  4979                           
  4980                           ;code/pwm.c: 87:    return 2;
  4981  03DE  3002               	movlw	2
  4982  03DF  2BF8               	goto	l255
  4983  03E0                     l2061:	
  4984                           
  4985                           ;code/pwm.c: 92:    return 0;
  4986  03E0  3000               	movlw	0
  4987  03E1  2BF8               	goto	l255
  4988  03E2                     l2067:	
  4989  03E2  0822               	movf	get_b_val@mode,w
  4990  03E3  00A0               	movwf	??_get_b_val
  4991  03E4  01A1               	clrf	??_get_b_val+1
  4992                           
  4993                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4994                           ; Switch size 1, requested type "simple"
  4995                           ; Number of cases is 1, Range of values is 0 to 0
  4996                           ; switch strategies available:
  4997                           ; Name         Instructions Cycles
  4998                           ; simple_byte            4     3 (average)
  4999                           ; direct_byte            8     6 (fixed)
  5000                           ; jumptable            260     6 (fixed)
  5001                           ;	Chosen strategy is simple_byte
  5002  03E5  0821               	movf	??_get_b_val+1,w
  5003  03E6  3A00               	xorlw	0	; case 0
  5004  03E7  1903               	skipnz
  5005  03E8  2BEA               	goto	l2475
  5006  03E9  2BE0               	goto	l2061
  5007  03EA                     l2475:	
  5008                           
  5009                           ; Switch size 1, requested type "simple"
  5010                           ; Number of cases is 4, Range of values is 65 to 83
  5011                           ; switch strategies available:
  5012                           ; Name         Instructions Cycles
  5013                           ; simple_byte           13     7 (average)
  5014                           ; direct_byte           47     9 (fixed)
  5015                           ; jumptable            263     9 (fixed)
  5016                           ;	Chosen strategy is simple_byte
  5017  03EA  0820               	movf	??_get_b_val,w
  5018  03EB  3A41               	xorlw	65	; case 65
  5019  03EC  1903               	skipnz
  5020  03ED  2BDC               	goto	l2049
  5021  03EE  3A02               	xorlw	2	; case 67
  5022  03EF  1903               	skipnz
  5023  03F0  2BDE               	goto	l2053
  5024  03F1  3A0C               	xorlw	12	; case 79
  5025  03F2  1903               	skipnz
  5026  03F3  2BE0               	goto	l2061
  5027  03F4  3A1C               	xorlw	28	; case 83
  5028  03F5  1903               	skipnz
  5029  03F6  2BDC               	goto	l2049
  5030  03F7  2BE0               	goto	l2061
  5031  03F8                     l255:	
  5032  03F8  0008               	return
  5033  03F9                     __end_of_get_b_val:	
  5034                           
  5035                           	psect	text11
  5036  03F9                     __ptext11:	
  5037 ;; *************** function _get_a_val *****************
  5038 ;; Defined at:
  5039 ;;		line 66 in file "code/pwm.c"
  5040 ;; Parameters:    Size  Location     Type
  5041 ;;  mode            1    wreg     unsigned char 
  5042 ;; Auto vars:     Size  Location     Type
  5043 ;;  mode            1    2[BANK0 ] unsigned char 
  5044 ;; Return value:  Size  Location     Type
  5045 ;;                  1    wreg      unsigned char 
  5046 ;; Registers used:
  5047 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5048 ;; Tracked objects:
  5049 ;;		On entry : 0/0
  5050 ;;		On exit  : 0/0
  5051 ;;		Unchanged: 0/0
  5052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5053 ;;      Params:         0       0       0       0       0       0       0       0
  5054 ;;      Locals:         0       1       0       0       0       0       0       0
  5055 ;;      Temps:          0       2       0       0       0       0       0       0
  5056 ;;      Totals:         0       3       0       0       0       0       0       0
  5057 ;;Total ram usage:        3 bytes
  5058 ;; Hardware stack levels used:    1
  5059 ;; Hardware stack levels required when called:    4
  5060 ;; This function calls:
  5061 ;;		Nothing
  5062 ;; This function is called by:
  5063 ;;		_set_pwm_mode
  5064 ;; This function uses a non-reentrant model
  5065 ;;
  5066                           
  5067                           
  5068                           ;psect for function _get_a_val
  5069  03F9                     _get_a_val:	
  5070                           
  5071                           ;incstack = 0
  5072                           ; Regs used in _get_a_val: [wreg-fsr0h+status,2+status,0]
  5073                           ;get_a_val@mode stored from wreg
  5074  03F9  0020               	movlb	0	; select bank0
  5075  03FA  00A2               	movwf	get_a_val@mode
  5076  03FB                     l2019:	
  5077                           
  5078                           ;code/pwm.c: 66: static u8 get_a_val(char mode);code/pwm.c: 67: {;code/pwm.c: 68:      s
      +                          witch(mode){
  5079  03FB  2C02               	goto	l2039
  5080  03FC                     l2021:	
  5081                           
  5082                           ;code/pwm.c: 70:    return 1;
  5083  03FC  3001               	movlw	1
  5084  03FD  2C18               	goto	l245
  5085  03FE                     l2029:	
  5086                           
  5087                           ;code/pwm.c: 74:    return 2;
  5088  03FE  3002               	movlw	2
  5089  03FF  2C18               	goto	l245
  5090  0400                     l2033:	
  5091                           
  5092                           ;code/pwm.c: 77:    return 0;
  5093  0400  3000               	movlw	0
  5094  0401  2C18               	goto	l245
  5095  0402                     l2039:	
  5096  0402  0822               	movf	get_a_val@mode,w
  5097  0403  00A0               	movwf	??_get_a_val
  5098  0404  01A1               	clrf	??_get_a_val+1
  5099                           
  5100                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5101                           ; Switch size 1, requested type "simple"
  5102                           ; Number of cases is 1, Range of values is 0 to 0
  5103                           ; switch strategies available:
  5104                           ; Name         Instructions Cycles
  5105                           ; simple_byte            4     3 (average)
  5106                           ; direct_byte            8     6 (fixed)
  5107                           ; jumptable            260     6 (fixed)
  5108                           ;	Chosen strategy is simple_byte
  5109  0405  0821               	movf	??_get_a_val+1,w
  5110  0406  3A00               	xorlw	0	; case 0
  5111  0407  1903               	skipnz
  5112  0408  2C0A               	goto	l2477
  5113  0409  2C00               	goto	l2033
  5114  040A                     l2477:	
  5115                           
  5116                           ; Switch size 1, requested type "simple"
  5117                           ; Number of cases is 4, Range of values is 65 to 83
  5118                           ; switch strategies available:
  5119                           ; Name         Instructions Cycles
  5120                           ; simple_byte           13     7 (average)
  5121                           ; direct_byte           47     9 (fixed)
  5122                           ; jumptable            263     9 (fixed)
  5123                           ;	Chosen strategy is simple_byte
  5124  040A  0820               	movf	??_get_a_val,w
  5125  040B  3A41               	xorlw	65	; case 65
  5126  040C  1903               	skipnz
  5127  040D  2BFE               	goto	l2029
  5128  040E  3A02               	xorlw	2	; case 67
  5129  040F  1903               	skipnz
  5130  0410  2BFC               	goto	l2021
  5131  0411  3A0C               	xorlw	12	; case 79
  5132  0412  1903               	skipnz
  5133  0413  2C00               	goto	l2033
  5134  0414  3A1C               	xorlw	28	; case 83
  5135  0415  1903               	skipnz
  5136  0416  2BFC               	goto	l2021
  5137  0417  2C00               	goto	l2033
  5138  0418                     l245:	
  5139  0418  0008               	return
  5140  0419                     __end_of_get_a_val:	
  5141                           
  5142                           	psect	text12
  5143  0124                     __ptext12:	
  5144 ;; *************** function _set_pwm *****************
  5145 ;; Defined at:
  5146 ;;		line 148 in file "code/pwm.c"
  5147 ;; Parameters:    Size  Location     Type
  5148 ;;  motor           1    wreg     unsigned char 
  5149 ;;  pwm             1    0[BANK0 ] unsigned char 
  5150 ;; Auto vars:     Size  Location     Type
  5151 ;;  motor           1    3[BANK0 ] unsigned char 
  5152 ;; Return value:  Size  Location     Type
  5153 ;;                  1    wreg      void 
  5154 ;; Registers used:
  5155 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5156 ;; Tracked objects:
  5157 ;;		On entry : 0/0
  5158 ;;		On exit  : 0/0
  5159 ;;		Unchanged: 0/0
  5160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5161 ;;      Params:         0       1       0       0       0       0       0       0
  5162 ;;      Locals:         0       1       0       0       0       0       0       0
  5163 ;;      Temps:          0       2       0       0       0       0       0       0
  5164 ;;      Totals:         0       4       0       0       0       0       0       0
  5165 ;;Total ram usage:        4 bytes
  5166 ;; Hardware stack levels used:    1
  5167 ;; Hardware stack levels required when called:    4
  5168 ;; This function calls:
  5169 ;;		Nothing
  5170 ;; This function is called by:
  5171 ;;		_set_motor
  5172 ;; This function uses a non-reentrant model
  5173 ;;
  5174                           
  5175                           
  5176                           ;psect for function _set_pwm
  5177  0124                     _set_pwm:	
  5178                           
  5179                           ;incstack = 0
  5180                           ; Regs used in _set_pwm: [wreg-fsr0h+status,2+status,0]
  5181                           ;set_pwm@motor stored from wreg
  5182  0124  0020               	movlb	0	; select bank0
  5183  0125  00A3               	movwf	set_pwm@motor
  5184  0126                     l2079:	
  5185                           
  5186                           ;code/pwm.c: 148: void set_pwm(u8 motor,u8 pwm);code/pwm.c: 149: {;code/pwm.c: 150:     
      +                           switch(motor){
  5187  0126  296C               	goto	l2095
  5188  0127                     l2081:	
  5189                           
  5190                           ;code/pwm.c: 152:    PWM3DCH = pwm >> 2;
  5191  0127  0820               	movf	set_pwm@pwm,w
  5192  0128  00A1               	movwf	??_set_pwm
  5193  0129  3002               	movlw	2
  5194  012A                     u1055:	
  5195  012A  36A1               	lsrf	??_set_pwm,f
  5196  012B  0B89               	decfsz	9,f
  5197  012C  292A               	goto	u1055
  5198  012D  0821               	movf	??_set_pwm,w
  5199  012E  002C               	movlb	12	; select bank12
  5200  012F  0095               	movwf	21	;volatile
  5201                           
  5202                           ;code/pwm.c: 153:    PWM3DCL = pwm << 6;
  5203  0130  0020               	movlb	0	; select bank0
  5204  0131  0820               	movf	set_pwm@pwm,w
  5205  0132  00A1               	movwf	??_set_pwm
  5206  0133  3005               	movlw	5
  5207  0134                     u1065:	
  5208  0134  35A1               	lslf	??_set_pwm,f
  5209  0135  3EFF               	addlw	-1
  5210  0136  1D03               	skipz
  5211  0137  2934               	goto	u1065
  5212  0138  3521               	lslf	??_set_pwm,w
  5213  0139  002C               	movlb	12	; select bank12
  5214  013A  0094               	movwf	20	;volatile
  5215                           
  5216                           ;code/pwm.c: 154:    break;
  5217  013B  2982               	goto	l291
  5218  013C                     l2083:	
  5219                           
  5220                           ;code/pwm.c: 156:    PWM4DCH = pwm >> 2;
  5221  013C  0820               	movf	set_pwm@pwm,w
  5222  013D  00A1               	movwf	??_set_pwm
  5223  013E  3002               	movlw	2
  5224  013F                     u1075:	
  5225  013F  36A1               	lsrf	??_set_pwm,f
  5226  0140  0B89               	decfsz	9,f
  5227  0141  293F               	goto	u1075
  5228  0142  0821               	movf	??_set_pwm,w
  5229  0143  002C               	movlb	12	; select bank12
  5230  0144  0098               	movwf	24	;volatile
  5231                           
  5232                           ;code/pwm.c: 157:    PWM4DCL = pwm << 6;
  5233  0145  0020               	movlb	0	; select bank0
  5234  0146  0820               	movf	set_pwm@pwm,w
  5235  0147  00A1               	movwf	??_set_pwm
  5236  0148  3005               	movlw	5
  5237  0149                     u1085:	
  5238  0149  35A1               	lslf	??_set_pwm,f
  5239  014A  3EFF               	addlw	-1
  5240  014B  1D03               	skipz
  5241  014C  2949               	goto	u1085
  5242  014D  3521               	lslf	??_set_pwm,w
  5243  014E  002C               	movlb	12	; select bank12
  5244  014F  0097               	movwf	23	;volatile
  5245                           
  5246                           ;code/pwm.c: 158:    break;
  5247  0150  2982               	goto	l291
  5248  0151                     l2085:	
  5249                           
  5250                           ;code/pwm.c: 160:    PWM9DCH = pwm >> 2;
  5251  0151  0820               	movf	set_pwm@pwm,w
  5252  0152  00A1               	movwf	??_set_pwm
  5253  0153  3002               	movlw	2
  5254  0154                     u1095:	
  5255  0154  36A1               	lsrf	??_set_pwm,f
  5256  0155  0B89               	decfsz	9,f
  5257  0156  2954               	goto	u1095
  5258  0157  0821               	movf	??_set_pwm,w
  5259  0158  002C               	movlb	12	; select bank12
  5260  0159  009B               	movwf	27	;volatile
  5261                           
  5262                           ;code/pwm.c: 161:    PWM9DCL = pwm << 6;
  5263  015A  0020               	movlb	0	; select bank0
  5264  015B  0820               	movf	set_pwm@pwm,w
  5265  015C  00A1               	movwf	??_set_pwm
  5266  015D  3005               	movlw	5
  5267  015E                     u1105:	
  5268  015E  35A1               	lslf	??_set_pwm,f
  5269  015F  3EFF               	addlw	-1
  5270  0160  1D03               	skipz
  5271  0161  295E               	goto	u1105
  5272  0162  3521               	lslf	??_set_pwm,w
  5273  0163  002C               	movlb	12	; select bank12
  5274  0164  009A               	movwf	26	;volatile
  5275                           
  5276                           ;code/pwm.c: 162:    break;
  5277  0165  2982               	goto	l291
  5278  0166                     l2087:	
  5279                           
  5280                           ;code/pwm.c: 164:    PWM5DCL = pwm;
  5281  0166  0820               	movf	set_pwm@pwm,w
  5282  0167  003B               	movlb	27	; select bank27
  5283  0168  0093               	movwf	19	;volatile
  5284  0169                     l2089:	
  5285                           
  5286                           ;code/pwm.c: 165:    PWM5DCH = 0;
  5287  0169  0194               	clrf	20	;volatile
  5288  016A                     l2091:	
  5289                           
  5290                           ;code/pwm.c: 166:        PWM5LDCONbits.LDA = 1;
  5291  016A  179F               	bsf	31,7	;volatile
  5292                           
  5293                           ;code/pwm.c: 167:    break;
  5294  016B  2982               	goto	l291
  5295  016C                     l2095:	
  5296  016C  0823               	movf	set_pwm@motor,w
  5297  016D  00A1               	movwf	??_set_pwm
  5298  016E  01A2               	clrf	??_set_pwm+1
  5299                           
  5300                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5301                           ; Switch size 1, requested type "simple"
  5302                           ; Number of cases is 1, Range of values is 0 to 0
  5303                           ; switch strategies available:
  5304                           ; Name         Instructions Cycles
  5305                           ; simple_byte            4     3 (average)
  5306                           ; direct_byte            8     6 (fixed)
  5307                           ; jumptable            260     6 (fixed)
  5308                           ;	Chosen strategy is simple_byte
  5309  016F  0822               	movf	??_set_pwm+1,w
  5310  0170  3A00               	xorlw	0	; case 0
  5311  0171  1903               	skipnz
  5312  0172  2974               	goto	l2479
  5313  0173  2982               	goto	l291
  5314  0174                     l2479:	
  5315                           
  5316                           ; Switch size 1, requested type "simple"
  5317                           ; Number of cases is 4, Range of values is 1 to 4
  5318                           ; switch strategies available:
  5319                           ; Name         Instructions Cycles
  5320                           ; simple_byte           13     7 (average)
  5321                           ; direct_byte           17     9 (fixed)
  5322                           ; jumptable            263     9 (fixed)
  5323                           ;	Chosen strategy is simple_byte
  5324  0174  0821               	movf	??_set_pwm,w
  5325  0175  3A01               	xorlw	1	; case 1
  5326  0176  1903               	skipnz
  5327  0177  2927               	goto	l2081
  5328  0178  3A03               	xorlw	3	; case 2
  5329  0179  1903               	skipnz
  5330  017A  293C               	goto	l2083
  5331  017B  3A01               	xorlw	1	; case 3
  5332  017C  1903               	skipnz
  5333  017D  2951               	goto	l2085
  5334  017E  3A07               	xorlw	7	; case 4
  5335  017F  1903               	skipnz
  5336  0180  2966               	goto	l2087
  5337  0181  2982               	goto	l291
  5338  0182                     l291:	
  5339  0182  0008               	return
  5340  0183                     __end_of_set_pwm:	
  5341                           
  5342                           	psect	text13
  5343  0457                     __ptext13:	
  5344 ;; *************** function _i2c_isr *****************
  5345 ;; Defined at:
  5346 ;;		line 68 in file "code/i2c.c"
  5347 ;; Parameters:    Size  Location     Type
  5348 ;;		None
  5349 ;; Auto vars:     Size  Location     Type
  5350 ;;		None
  5351 ;; Return value:  Size  Location     Type
  5352 ;;                  1    wreg      void 
  5353 ;; Registers used:
  5354 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5355 ;; Tracked objects:
  5356 ;;		On entry : 0/0
  5357 ;;		On exit  : 0/0
  5358 ;;		Unchanged: 0/0
  5359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5360 ;;      Params:         0       0       0       0       0       0       0       0
  5361 ;;      Locals:         0       0       0       0       0       0       0       0
  5362 ;;      Temps:          0       0       0       0       0       0       0       0
  5363 ;;      Totals:         0       0       0       0       0       0       0       0
  5364 ;;Total ram usage:        0 bytes
  5365 ;; Hardware stack levels used:    1
  5366 ;; Hardware stack levels required when called:    6
  5367 ;; This function calls:
  5368 ;;		_handle_read
  5369 ;;		_handle_write
  5370 ;; This function is called by:
  5371 ;;		_main
  5372 ;; This function uses a non-reentrant model
  5373 ;;
  5374                           
  5375                           
  5376                           ;psect for function _i2c_isr
  5377  0457                     _i2c_isr:	
  5378  0457                     l2235:	
  5379                           ;incstack = 0
  5380                           ; Regs used in _i2c_isr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5381                           
  5382                           
  5383                           ;code/i2c.c: 70:      PIR1bits.SSP1IF = 0;
  5384  0457  0020               	movlb	0	; select bank0
  5385  0458  1191               	bcf	17,3	;volatile
  5386                           
  5387                           ;code/i2c.c: 71:      if(SSP1STATbits.R_nW) handle_read();
  5388  0459  0024               	movlb	4	; select bank4
  5389  045A  1D14               	btfss	20,2	;volatile
  5390  045B  2C5D               	goto	u1251
  5391  045C  2C5E               	goto	u1250
  5392  045D                     u1251:	
  5393  045D  2C62               	goto	l2239
  5394  045E                     u1250:	
  5395  045E                     l2237:	
  5396  045E  3184  2499  3184   	fcall	_handle_read
  5397  0461  2C65               	goto	l2241
  5398  0462                     l2239:	
  5399  0462  3182  22F3  3184   	fcall	_handle_write
  5400  0465                     l2241:	
  5401                           
  5402                           ;code/i2c.c: 73:      SSP1CONbits.CKP = 1;
  5403  0465  0024               	movlb	4	; select bank4
  5404  0466  1615               	bsf	21,4	;volatile
  5405  0467                     l60:	
  5406  0467  0008               	return
  5407  0468                     __end_of_i2c_isr:	
  5408                           
  5409                           	psect	text14
  5410  02F3                     __ptext14:	
  5411 ;; *************** function _handle_write *****************
  5412 ;; Defined at:
  5413 ;;		line 84 in file "code/i2c.c"
  5414 ;; Parameters:    Size  Location     Type
  5415 ;;		None
  5416 ;; Auto vars:     Size  Location     Type
  5417 ;;  buf             1    5[BANK0 ] unsigned char 
  5418 ;; Return value:  Size  Location     Type
  5419 ;;                  1    wreg      void 
  5420 ;; Registers used:
  5421 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5422 ;; Tracked objects:
  5423 ;;		On entry : 0/0
  5424 ;;		On exit  : 0/0
  5425 ;;		Unchanged: 0/0
  5426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5427 ;;      Params:         0       0       0       0       0       0       0       0
  5428 ;;      Locals:         0       1       0       0       0       0       0       0
  5429 ;;      Temps:          0       1       0       0       0       0       0       0
  5430 ;;      Totals:         0       2       0       0       0       0       0       0
  5431 ;;Total ram usage:        2 bytes
  5432 ;; Hardware stack levels used:    1
  5433 ;; Hardware stack levels required when called:    5
  5434 ;; This function calls:
  5435 ;;		_write_register
  5436 ;; This function is called by:
  5437 ;;		_i2c_isr
  5438 ;; This function uses a non-reentrant model
  5439 ;;
  5440                           
  5441                           
  5442                           ;psect for function _handle_write
  5443  02F3                     _handle_write:	
  5444  02F3                     l2159:	
  5445                           ;incstack = 0
  5446                           ; Regs used in _handle_write: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5447                           
  5448                           
  5449                           ;code/i2c.c: 86:      u8 buf = SSP1BUF;
  5450  02F3  0024               	movlb	4	; select bank4
  5451  02F4  0811               	movf	17,w	;volatile
  5452  02F5  0020               	movlb	0	; select bank0
  5453  02F6  00A4               	movwf	??_handle_write
  5454  02F7  0824               	movf	??_handle_write,w
  5455  02F8  00A5               	movwf	handle_write@buf
  5456  02F9                     l2161:	
  5457                           
  5458                           ;code/i2c.c: 88:      if(!SSP1STATbits.D_nA){
  5459  02F9  0024               	movlb	4	; select bank4
  5460  02FA  1A94               	btfsc	20,5	;volatile
  5461  02FB  2AFD               	goto	u1131
  5462  02FC  2AFE               	goto	u1130
  5463  02FD                     u1131:	
  5464  02FD  2B02               	goto	l2165
  5465  02FE                     u1130:	
  5466  02FE                     l2163:	
  5467                           
  5468                           ;code/i2c.c: 89:    first_write = 1;
  5469  02FE  0020               	movlb	0	; select bank0
  5470  02FF  01C9               	clrf	_first_write
  5471  0300  0AC9               	incf	_first_write,f
  5472                           
  5473                           ;code/i2c.c: 90:    return;
  5474  0301  2B1B               	goto	l67
  5475  0302                     l2165:	
  5476                           
  5477                           ;code/i2c.c: 92:      if(first_write){
  5478  0302  0020               	movlb	0	; select bank0
  5479  0303  0849               	movf	_first_write,w
  5480  0304  1903               	btfsc	3,2
  5481  0305  2B07               	goto	u1141
  5482  0306  2B08               	goto	u1140
  5483  0307                     u1141:	
  5484  0307  2B0E               	goto	l2171
  5485  0308                     u1140:	
  5486  0308                     l2167:	
  5487                           
  5488                           ;code/i2c.c: 93:    current_reg = buf;
  5489  0308  0825               	movf	handle_write@buf,w
  5490  0309  00A4               	movwf	??_handle_write
  5491  030A  0824               	movf	??_handle_write,w
  5492  030B  00CA               	movwf	_current_reg
  5493  030C                     l2169:	
  5494                           
  5495                           ;code/i2c.c: 94:    first_write = 0;
  5496  030C  01C9               	clrf	_first_write
  5497                           
  5498                           ;code/i2c.c: 95:      }else{
  5499  030D  2B1B               	goto	l67
  5500  030E                     l2171:	
  5501                           
  5502                           ;code/i2c.c: 96:    write_register(current_reg++,buf);
  5503  030E  0825               	movf	handle_write@buf,w
  5504  030F  00A4               	movwf	??_handle_write
  5505  0310  0824               	movf	??_handle_write,w
  5506  0311  00A0               	movwf	write_register@val
  5507  0312  084A               	movf	_current_reg,w
  5508  0313  3183  231C  3182   	fcall	_write_register
  5509  0316                     l2173:	
  5510  0316  3001               	movlw	1
  5511  0317  0020               	movlb	0	; select bank0
  5512  0318  00A4               	movwf	??_handle_write
  5513  0319  0824               	movf	??_handle_write,w
  5514  031A  07CA               	addwf	_current_reg,f
  5515  031B                     l67:	
  5516  031B  0008               	return
  5517  031C                     __end_of_handle_write:	
  5518                           
  5519                           	psect	text15
  5520  031C                     __ptext15:	
  5521 ;; *************** function _write_register *****************
  5522 ;; Defined at:
  5523 ;;		line 100 in file "code/i2c.c"
  5524 ;; Parameters:    Size  Location     Type
  5525 ;;  reg             1    wreg     unsigned char 
  5526 ;;  val             1    0[BANK0 ] unsigned char 
  5527 ;; Auto vars:     Size  Location     Type
  5528 ;;  reg             1    3[BANK0 ] unsigned char 
  5529 ;;  msk             1    2[BANK0 ] unsigned char 
  5530 ;; Return value:  Size  Location     Type
  5531 ;;                  1    wreg      void 
  5532 ;; Registers used:
  5533 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5534 ;; Tracked objects:
  5535 ;;		On entry : 0/0
  5536 ;;		On exit  : 0/0
  5537 ;;		Unchanged: 0/0
  5538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5539 ;;      Params:         0       1       0       0       0       0       0       0
  5540 ;;      Locals:         0       2       0       0       0       0       0       0
  5541 ;;      Temps:          0       1       0       0       0       0       0       0
  5542 ;;      Totals:         0       4       0       0       0       0       0       0
  5543 ;;Total ram usage:        4 bytes
  5544 ;; Hardware stack levels used:    1
  5545 ;; Hardware stack levels required when called:    4
  5546 ;; This function calls:
  5547 ;;		Nothing
  5548 ;; This function is called by:
  5549 ;;		_handle_write
  5550 ;; This function uses a non-reentrant model
  5551 ;;
  5552                           
  5553                           
  5554                           ;psect for function _write_register
  5555  031C                     _write_register:	
  5556                           
  5557                           ;incstack = 0
  5558                           ; Regs used in _write_register: [wreg+fsr1l+fsr1h+status,2+status,0]
  5559                           ;write_register@reg stored from wreg
  5560  031C  0020               	movlb	0	; select bank0
  5561  031D  00A3               	movwf	write_register@reg
  5562  031E                     l2113:	
  5563                           
  5564                           ;code/i2c.c: 100: static void write_register(u8 reg,u8 val);code/i2c.c: 101: {;code/i2c.
      +                          c: 102:      if(reg >= 10) return;
  5565  031E  300A               	movlw	10
  5566  031F  0223               	subwf	write_register@reg,w
  5567  0320  1C03               	skipc
  5568  0321  2B23               	goto	u1121
  5569  0322  2B24               	goto	u1120
  5570  0323                     u1121:	
  5571  0323  2B25               	goto	l2117
  5572  0324                     u1120:	
  5573  0324  2B42               	goto	l73
  5574  0325                     l2117:	
  5575                           
  5576                           ;code/i2c.c: 103:      u8 msk = writeable_reg[reg];
  5577  0325  0823               	movf	write_register@reg,w
  5578  0326  3E4B               	addlw	(low (_writeable_reg| 0))& (0+255)
  5579  0327  0086               	movwf	6
  5580  0328  0187               	clrf	7
  5581  0329  0801               	movf	1,w
  5582  032A  00A1               	movwf	??_write_register
  5583  032B  0821               	movf	??_write_register,w
  5584  032C  00A2               	movwf	write_register@msk
  5585  032D                     l2119:	
  5586                           
  5587                           ;code/i2c.c: 106:      val &= msk;
  5588  032D  0822               	movf	write_register@msk,w
  5589  032E  00A1               	movwf	??_write_register
  5590  032F  0821               	movf	??_write_register,w
  5591  0330  05A0               	andwf	write_register@val,f
  5592  0331                     l2121:	
  5593                           
  5594                           ;code/i2c.c: 107:      val |= (i2c_registers[reg] & ~msk);
  5595  0331  0823               	movf	write_register@reg,w
  5596  0332  3E3E               	addlw	(low (_i2c_registers| 0))& (0+255)
  5597  0333  0086               	movwf	6
  5598  0334  0187               	clrf	7
  5599  0335  0922               	comf	write_register@msk,w
  5600  0336  0501               	andwf	1,w
  5601  0337  00A1               	movwf	??_write_register
  5602  0338  0821               	movf	??_write_register,w
  5603  0339  04A0               	iorwf	write_register@val,f
  5604  033A                     l2123:	
  5605                           
  5606                           ;code/i2c.c: 108:  i2c_registers[reg] = val;
  5607  033A  0820               	movf	write_register@val,w
  5608  033B  00A1               	movwf	??_write_register
  5609  033C  0823               	movf	write_register@reg,w
  5610  033D  3E3E               	addlw	(low (_i2c_registers| 0))& (0+255)
  5611  033E  0086               	movwf	6
  5612  033F  0187               	clrf	7
  5613  0340  0821               	movf	??_write_register,w
  5614  0341  0081               	movwf	1
  5615  0342                     l73:	
  5616  0342  0008               	return
  5617  0343                     __end_of_write_register:	
  5618                           
  5619                           	psect	text16
  5620  0499                     __ptext16:	
  5621 ;; *************** function _handle_read *****************
  5622 ;; Defined at:
  5623 ;;		line 76 in file "code/i2c.c"
  5624 ;; Parameters:    Size  Location     Type
  5625 ;;		None
  5626 ;; Auto vars:     Size  Location     Type
  5627 ;;  buf             1    3[BANK0 ] unsigned char 
  5628 ;;  x               1    0        unsigned char 
  5629 ;; Return value:  Size  Location     Type
  5630 ;;                  1    wreg      void 
  5631 ;; Registers used:
  5632 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5633 ;; Tracked objects:
  5634 ;;		On entry : 0/0
  5635 ;;		On exit  : 0/0
  5636 ;;		Unchanged: 0/0
  5637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5638 ;;      Params:         0       0       0       0       0       0       0       0
  5639 ;;      Locals:         0       2       0       0       0       0       0       0
  5640 ;;      Temps:          0       1       0       0       0       0       0       0
  5641 ;;      Totals:         0       3       0       0       0       0       0       0
  5642 ;;Total ram usage:        3 bytes
  5643 ;; Hardware stack levels used:    1
  5644 ;; Hardware stack levels required when called:    5
  5645 ;; This function calls:
  5646 ;;		_read_register
  5647 ;; This function is called by:
  5648 ;;		_i2c_isr
  5649 ;; This function uses a non-reentrant model
  5650 ;;
  5651                           
  5652                           
  5653                           ;psect for function _handle_read
  5654  0499                     _handle_read:	
  5655  0499                     l2153:	
  5656                           ;incstack = 0
  5657                           ; Regs used in _handle_read: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5658                           
  5659  0499  0024               	movlb	4	; select bank4
  5660  049A  0811               	movf	17,w	;volatile
  5661  049B                     l2155:	
  5662                           
  5663                           ;code/i2c.c: 79:      u8 buf = read_register(current_reg);
  5664  049B  0020               	movlb	0	; select bank0
  5665  049C  084A               	movf	_current_reg,w
  5666  049D  3184  2479  3184   	fcall	_read_register
  5667  04A0  0020               	movlb	0	; select bank0
  5668  04A1  00A1               	movwf	??_handle_read
  5669  04A2  0821               	movf	??_handle_read,w
  5670  04A3  00A3               	movwf	handle_read@buf
  5671  04A4                     l2157:	
  5672                           
  5673                           ;code/i2c.c: 80:      SSP1BUF = buf;
  5674  04A4  0823               	movf	handle_read@buf,w
  5675  04A5  0024               	movlb	4	; select bank4
  5676  04A6  0091               	movwf	17	;volatile
  5677  04A7                     l63:	
  5678  04A7  0008               	return
  5679  04A8                     __end_of_handle_read:	
  5680                           
  5681                           	psect	text17
  5682  0479                     __ptext17:	
  5683 ;; *************** function _read_register *****************
  5684 ;; Defined at:
  5685 ;;		line 111 in file "code/i2c.c"
  5686 ;; Parameters:    Size  Location     Type
  5687 ;;  reg             1    wreg     unsigned char 
  5688 ;; Auto vars:     Size  Location     Type
  5689 ;;  reg             1    0[BANK0 ] unsigned char 
  5690 ;; Return value:  Size  Location     Type
  5691 ;;                  1    wreg      unsigned char 
  5692 ;; Registers used:
  5693 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5694 ;; Tracked objects:
  5695 ;;		On entry : 0/0
  5696 ;;		On exit  : 0/0
  5697 ;;		Unchanged: 0/0
  5698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5699 ;;      Params:         0       0       0       0       0       0       0       0
  5700 ;;      Locals:         0       1       0       0       0       0       0       0
  5701 ;;      Temps:          0       0       0       0       0       0       0       0
  5702 ;;      Totals:         0       1       0       0       0       0       0       0
  5703 ;;Total ram usage:        1 bytes
  5704 ;; Hardware stack levels used:    1
  5705 ;; Hardware stack levels required when called:    4
  5706 ;; This function calls:
  5707 ;;		Nothing
  5708 ;; This function is called by:
  5709 ;;		_handle_read
  5710 ;; This function uses a non-reentrant model
  5711 ;;
  5712                           
  5713                           
  5714                           ;psect for function _read_register
  5715  0479                     _read_register:	
  5716                           
  5717                           ;incstack = 0
  5718                           ; Regs used in _read_register: [wreg+fsr1l+fsr1h+status,2+status,0]
  5719                           ;read_register@reg stored from wreg
  5720  0479  0020               	movlb	0	; select bank0
  5721  047A  00A0               	movwf	read_register@reg
  5722  047B                     l2103:	
  5723                           
  5724                           ;code/i2c.c: 111: static u8 read_register(u8 reg);code/i2c.c: 112: {;code/i2c.c: 113:   
      +                             if(reg >= 10) return 0;
  5725  047B  300A               	movlw	10
  5726  047C  0220               	subwf	read_register@reg,w
  5727  047D  1C03               	skipc
  5728  047E  2C80               	goto	u1111
  5729  047F  2C81               	goto	u1110
  5730  0480                     u1111:	
  5731  0480  2C83               	goto	l2109
  5732  0481                     u1110:	
  5733  0481                     l2105:	
  5734  0481  3000               	movlw	0
  5735  0482  2C88               	goto	l77
  5736  0483                     l2109:	
  5737                           
  5738                           ;code/i2c.c: 114:      return i2c_registers[reg];
  5739  0483  0820               	movf	read_register@reg,w
  5740  0484  3E3E               	addlw	(low (_i2c_registers| 0))& (0+255)
  5741  0485  0086               	movwf	6
  5742  0486  0187               	clrf	7
  5743  0487  0801               	movf	1,w
  5744  0488                     l77:	
  5745  0488  0008               	return
  5746  0489                     __end_of_read_register:	
  5747                           
  5748                           	psect	text18
  5749  04CF                     __ptext18:	
  5750 ;; *************** function _config_rev *****************
  5751 ;; Defined at:
  5752 ;;		line 6 in file "code/rev.c"
  5753 ;; Parameters:    Size  Location     Type
  5754 ;;		None
  5755 ;; Auto vars:     Size  Location     Type
  5756 ;;		None
  5757 ;; Return value:  Size  Location     Type
  5758 ;;                  1    wreg      void 
  5759 ;; Registers used:
  5760 ;;		wreg, status,2
  5761 ;; Tracked objects:
  5762 ;;		On entry : 0/0
  5763 ;;		On exit  : 0/0
  5764 ;;		Unchanged: 0/0
  5765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5766 ;;      Params:         0       0       0       0       0       0       0       0
  5767 ;;      Locals:         0       0       0       0       0       0       0       0
  5768 ;;      Temps:          0       0       0       0       0       0       0       0
  5769 ;;      Totals:         0       0       0       0       0       0       0       0
  5770 ;;Total ram usage:        0 bytes
  5771 ;; Hardware stack levels used:    1
  5772 ;; Hardware stack levels required when called:    4
  5773 ;; This function calls:
  5774 ;;		Nothing
  5775 ;; This function is called by:
  5776 ;;		_main
  5777 ;; This function uses a non-reentrant model
  5778 ;;
  5779                           
  5780                           
  5781                           ;psect for function _config_rev
  5782  04CF                     _config_rev:	
  5783  04CF                     l2277:	
  5784                           ;incstack = 0
  5785                           ; Regs used in _config_rev: [wreg+status,2]
  5786                           
  5787                           
  5788                           ;code/rev.c: 8:      LATB = 0;
  5789  04CF  0022               	movlb	2	; select bank2
  5790  04D0  018D               	clrf	13	;volatile
  5791  04D1                     l2279:	
  5792                           
  5793                           ;code/rev.c: 9:      TRISB = 0b11001000;
  5794  04D1  30C8               	movlw	200
  5795  04D2  0021               	movlb	1	; select bank1
  5796  04D3  008D               	movwf	13	;volatile
  5797  04D4                     l2281:	
  5798                           
  5799                           ;code/rev.c: 12:      T3CON = 0b11110000;
  5800  04D4  30F0               	movlw	240
  5801  04D5  0020               	movlb	0	; select bank0
  5802  04D6  009E               	movwf	30	;volatile
  5803  04D7                     l312:	
  5804  04D7  0008               	return
  5805  04D8                     __end_of_config_rev:	
  5806                           
  5807                           	psect	text19
  5808  0272                     __ptext19:	
  5809 ;; *************** function _config_pwm *****************
  5810 ;; Defined at:
  5811 ;;		line 28 in file "code/pwm.c"
  5812 ;; Parameters:    Size  Location     Type
  5813 ;;		None
  5814 ;; Auto vars:     Size  Location     Type
  5815 ;;		None
  5816 ;; Return value:  Size  Location     Type
  5817 ;;                  1    wreg      void 
  5818 ;; Registers used:
  5819 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5820 ;; Tracked objects:
  5821 ;;		On entry : 0/0
  5822 ;;		On exit  : 0/0
  5823 ;;		Unchanged: 0/0
  5824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5825 ;;      Params:         0       0       0       0       0       0       0       0
  5826 ;;      Locals:         0       0       0       0       0       0       0       0
  5827 ;;      Temps:          0       1       0       0       0       0       0       0
  5828 ;;      Totals:         0       1       0       0       0       0       0       0
  5829 ;;Total ram usage:        1 bytes
  5830 ;; Hardware stack levels used:    1
  5831 ;; Hardware stack levels required when called:    5
  5832 ;; This function calls:
  5833 ;;		_set_motor_pps
  5834 ;;		_set_pwms_dc
  5835 ;; This function is called by:
  5836 ;;		_main
  5837 ;; This function uses a non-reentrant model
  5838 ;;
  5839                           
  5840                           
  5841                           ;psect for function _config_pwm
  5842  0272                     _config_pwm:	
  5843  0272                     l2255:	
  5844                           ;incstack = 0
  5845                           ; Regs used in _config_pwm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5846                           
  5847                           
  5848                           ;code/pwm.c: 31:      T2CLKCON = 0b0001;
  5849  0272  3001               	movlw	1
  5850  0273  0029               	movlb	9	; select bank9
  5851  0274  0097               	movwf	23	;volatile
  5852                           
  5853                           ;code/pwm.c: 32:      T2PR = 0x3F;
  5854  0275  303F               	movlw	63
  5855  0276  0094               	movwf	20	;volatile
  5856                           
  5857                           ;code/pwm.c: 33:      T2CON = 0b10100000;
  5858  0277  30A0               	movlw	160
  5859  0278  0095               	movwf	21	;volatile
  5860                           
  5861                           ;code/pwm.c: 35:      PWM3CON = 0x90;
  5862  0279  3090               	movlw	144
  5863  027A  002C               	movlb	12	; select bank12
  5864  027B  0096               	movwf	22	;volatile
  5865                           
  5866                           ;code/pwm.c: 36:      PWM4CON = 0x90;
  5867  027C  3090               	movlw	144
  5868  027D  0099               	movwf	25	;volatile
  5869                           
  5870                           ;code/pwm.c: 37:      PWM9CON = 0x90;
  5871  027E  3090               	movlw	144
  5872  027F  009C               	movwf	28	;volatile
  5873                           
  5874                           ;code/pwm.c: 39:      PWM5CLKCON = 0b00100000;
  5875  0280  3020               	movlw	32
  5876  0281  003B               	movlb	27	; select bank27
  5877  0282  009E               	movwf	30	;volatile
  5878  0283                     l2257:	
  5879                           
  5880                           ;code/pwm.c: 40:      PWM5LDCON = 0b00000000;
  5881  0283  019F               	clrf	31	;volatile
  5882  0284                     l2259:	
  5883                           
  5884                           ;code/pwm.c: 41:      PWM5PRH = 0;
  5885  0284  0196               	clrf	22	;volatile
  5886                           
  5887                           ;code/pwm.c: 42:      PWM5PRL = 0xFF;
  5888  0285  30FF               	movlw	255
  5889  0286  0095               	movwf	21	;volatile
  5890  0287                     l2261:	
  5891                           
  5892                           ;code/pwm.c: 43:      PWM5PHH = 0;
  5893  0287  0192               	clrf	18	;volatile
  5894  0288                     l2263:	
  5895                           
  5896                           ;code/pwm.c: 44:      PWM5PHL = 0;
  5897  0288  0191               	clrf	17	;volatile
  5898                           
  5899                           ;code/pwm.c: 45:      PWM5CON = 0x90;
  5900  0289  3090               	movlw	144
  5901  028A  009B               	movwf	27	;volatile
  5902  028B                     l2265:	
  5903                           
  5904                           ;code/pwm.c: 47:      set_pwms_dc(0,0,0,0);
  5905  028B  0020               	movlb	0	; select bank0
  5906  028C  01A0               	clrf	set_pwms_dc@m4
  5907  028D  01A1               	clrf	set_pwms_dc@m9
  5908  028E  01A2               	clrf	set_pwms_dc@m5
  5909  028F  3000               	movlw	0
  5910  0290  3182  222A  3182   	fcall	_set_pwms_dc
  5911  0293                     l2267:	
  5912                           
  5913                           ;code/pwm.c: 49:      LATC &= 0x0F;
  5914  0293  300F               	movlw	15
  5915  0294  0020               	movlb	0	; select bank0
  5916  0295  00AF               	movwf	??_config_pwm
  5917  0296  082F               	movf	??_config_pwm,w
  5918  0297  0022               	movlb	2	; select bank2
  5919  0298  058E               	andwf	14,f	;volatile
  5920  0299                     l2269:	
  5921                           
  5922                           ;code/pwm.c: 51:      set_motor_pps(1,0,0);
  5923  0299  0020               	movlb	0	; select bank0
  5924  029A  01A0               	clrf	set_motor_pps@a_mode
  5925  029B  01A1               	clrf	set_motor_pps@b_mode
  5926  029C  3001               	movlw	1
  5927  029D  3180  2037  3182   	fcall	_set_motor_pps
  5928  02A0                     l2271:	
  5929                           
  5930                           ;code/pwm.c: 52:      set_motor_pps(2,0,0);
  5931  02A0  0020               	movlb	0	; select bank0
  5932  02A1  01A0               	clrf	set_motor_pps@a_mode
  5933  02A2  01A1               	clrf	set_motor_pps@b_mode
  5934  02A3  3002               	movlw	2
  5935  02A4  3180  2037  3182   	fcall	_set_motor_pps
  5936  02A7                     l2273:	
  5937                           
  5938                           ;code/pwm.c: 53:      set_motor_pps(3,0,0);
  5939  02A7  0020               	movlb	0	; select bank0
  5940  02A8  01A0               	clrf	set_motor_pps@a_mode
  5941  02A9  01A1               	clrf	set_motor_pps@b_mode
  5942  02AA  3003               	movlw	3
  5943  02AB  3180  2037  3182   	fcall	_set_motor_pps
  5944  02AE                     l2275:	
  5945                           
  5946                           ;code/pwm.c: 54:      set_motor_pps(4,0,0);
  5947  02AE  0020               	movlb	0	; select bank0
  5948  02AF  01A0               	clrf	set_motor_pps@a_mode
  5949  02B0  01A1               	clrf	set_motor_pps@b_mode
  5950  02B1  3004               	movlw	4
  5951  02B2  3180  2037  3182   	fcall	_set_motor_pps
  5952  02B5                     l240:	
  5953  02B5  0008               	return
  5954  02B6                     __end_of_config_pwm:	
  5955                           
  5956                           	psect	text20
  5957  022A                     __ptext20:	
  5958 ;; *************** function _set_pwms_dc *****************
  5959 ;; Defined at:
  5960 ;;		line 12 in file "code/pwm.c"
  5961 ;; Parameters:    Size  Location     Type
  5962 ;;  m3              1    wreg     unsigned char 
  5963 ;;  m4              1    0[BANK0 ] unsigned char 
  5964 ;;  m9              1    1[BANK0 ] unsigned char 
  5965 ;;  m5              1    2[BANK0 ] unsigned char 
  5966 ;; Auto vars:     Size  Location     Type
  5967 ;;  m3              1    4[BANK0 ] unsigned char 
  5968 ;; Return value:  Size  Location     Type
  5969 ;;                  1    wreg      void 
  5970 ;; Registers used:
  5971 ;;		wreg, status,2, status,0
  5972 ;; Tracked objects:
  5973 ;;		On entry : 0/0
  5974 ;;		On exit  : 0/0
  5975 ;;		Unchanged: 0/0
  5976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5977 ;;      Params:         0       3       0       0       0       0       0       0
  5978 ;;      Locals:         0       1       0       0       0       0       0       0
  5979 ;;      Temps:          0       1       0       0       0       0       0       0
  5980 ;;      Totals:         0       5       0       0       0       0       0       0
  5981 ;;Total ram usage:        5 bytes
  5982 ;; Hardware stack levels used:    1
  5983 ;; Hardware stack levels required when called:    4
  5984 ;; This function calls:
  5985 ;;		Nothing
  5986 ;; This function is called by:
  5987 ;;		_config_pwm
  5988 ;; This function uses a non-reentrant model
  5989 ;;
  5990                           
  5991                           
  5992                           ;psect for function _set_pwms_dc
  5993  022A                     _set_pwms_dc:	
  5994                           
  5995                           ;incstack = 0
  5996                           ; Regs used in _set_pwms_dc: [wreg+status,2+status,0]
  5997                           ;set_pwms_dc@m3 stored from wreg
  5998  022A  0020               	movlb	0	; select bank0
  5999  022B  00A4               	movwf	set_pwms_dc@m3
  6000  022C                     l2191:	
  6001                           
  6002                           ;code/pwm.c: 12: static void set_pwms_dc(u8 m3,u8 m4,u8 m9,u8 m5);code/pwm.c: 13: {;code
      +                          /pwm.c: 14:      PWM3DCH = m3 >> 2;
  6003  022C  0824               	movf	set_pwms_dc@m3,w
  6004  022D  00A3               	movwf	??_set_pwms_dc
  6005  022E  3002               	movlw	2
  6006  022F                     u1185:	
  6007  022F  36A3               	lsrf	??_set_pwms_dc,f
  6008  0230  0B89               	decfsz	9,f
  6009  0231  2A2F               	goto	u1185
  6010  0232  0823               	movf	??_set_pwms_dc,w
  6011  0233  002C               	movlb	12	; select bank12
  6012  0234  0095               	movwf	21	;volatile
  6013                           
  6014                           ;code/pwm.c: 15:      PWM3DCL = m3 << 6;
  6015  0235  0020               	movlb	0	; select bank0
  6016  0236  0824               	movf	set_pwms_dc@m3,w
  6017  0237  00A3               	movwf	??_set_pwms_dc
  6018  0238  3005               	movlw	5
  6019  0239                     u1195:	
  6020  0239  35A3               	lslf	??_set_pwms_dc,f
  6021  023A  3EFF               	addlw	-1
  6022  023B  1D03               	skipz
  6023  023C  2A39               	goto	u1195
  6024  023D  3523               	lslf	??_set_pwms_dc,w
  6025  023E  002C               	movlb	12	; select bank12
  6026  023F  0094               	movwf	20	;volatile
  6027                           
  6028                           ;code/pwm.c: 17:      PWM4DCH = m4 >> 2;
  6029  0240  0020               	movlb	0	; select bank0
  6030  0241  0820               	movf	set_pwms_dc@m4,w
  6031  0242  00A3               	movwf	??_set_pwms_dc
  6032  0243  3002               	movlw	2
  6033  0244                     u1205:	
  6034  0244  36A3               	lsrf	??_set_pwms_dc,f
  6035  0245  0B89               	decfsz	9,f
  6036  0246  2A44               	goto	u1205
  6037  0247  0823               	movf	??_set_pwms_dc,w
  6038  0248  002C               	movlb	12	; select bank12
  6039  0249  0098               	movwf	24	;volatile
  6040                           
  6041                           ;code/pwm.c: 18:      PWM4DCL = m4 << 6;
  6042  024A  0020               	movlb	0	; select bank0
  6043  024B  0820               	movf	set_pwms_dc@m4,w
  6044  024C  00A3               	movwf	??_set_pwms_dc
  6045  024D  3005               	movlw	5
  6046  024E                     u1215:	
  6047  024E  35A3               	lslf	??_set_pwms_dc,f
  6048  024F  3EFF               	addlw	-1
  6049  0250  1D03               	skipz
  6050  0251  2A4E               	goto	u1215
  6051  0252  3523               	lslf	??_set_pwms_dc,w
  6052  0253  002C               	movlb	12	; select bank12
  6053  0254  0097               	movwf	23	;volatile
  6054                           
  6055                           ;code/pwm.c: 20:      PWM9DCH = m9 >> 2;
  6056  0255  0020               	movlb	0	; select bank0
  6057  0256  0821               	movf	set_pwms_dc@m9,w
  6058  0257  00A3               	movwf	??_set_pwms_dc
  6059  0258  3002               	movlw	2
  6060  0259                     u1225:	
  6061  0259  36A3               	lsrf	??_set_pwms_dc,f
  6062  025A  0B89               	decfsz	9,f
  6063  025B  2A59               	goto	u1225
  6064  025C  0823               	movf	??_set_pwms_dc,w
  6065  025D  002C               	movlb	12	; select bank12
  6066  025E  009B               	movwf	27	;volatile
  6067                           
  6068                           ;code/pwm.c: 21:      PWM9DCL = m9 << 6;
  6069  025F  0020               	movlb	0	; select bank0
  6070  0260  0821               	movf	set_pwms_dc@m9,w
  6071  0261  00A3               	movwf	??_set_pwms_dc
  6072  0262  3005               	movlw	5
  6073  0263                     u1235:	
  6074  0263  35A3               	lslf	??_set_pwms_dc,f
  6075  0264  3EFF               	addlw	-1
  6076  0265  1D03               	skipz
  6077  0266  2A63               	goto	u1235
  6078  0267  3523               	lslf	??_set_pwms_dc,w
  6079  0268  002C               	movlb	12	; select bank12
  6080  0269  009A               	movwf	26	;volatile
  6081  026A                     l2193:	
  6082                           
  6083                           ;code/pwm.c: 23:      PWM5DCH = 0;
  6084  026A  003B               	movlb	27	; select bank27
  6085  026B  0194               	clrf	20	;volatile
  6086  026C                     l2195:	
  6087                           
  6088                           ;code/pwm.c: 24:      PWM5DCL = m5;
  6089  026C  0020               	movlb	0	; select bank0
  6090  026D  0822               	movf	set_pwms_dc@m5,w
  6091  026E  003B               	movlb	27	; select bank27
  6092  026F  0093               	movwf	19	;volatile
  6093  0270                     l2197:	
  6094                           
  6095                           ;code/pwm.c: 25:      PWM5LDCONbits.LDA = 1;
  6096  0270  179F               	bsf	31,7	;volatile
  6097  0271                     l237:	
  6098  0271  0008               	return
  6099  0272                     __end_of_set_pwms_dc:	
  6100                           
  6101                           	psect	text21
  6102  0037                     __ptext21:	
  6103 ;; *************** function _set_motor_pps *****************
  6104 ;; Defined at:
  6105 ;;		line 98 in file "code/pwm.c"
  6106 ;; Parameters:    Size  Location     Type
  6107 ;;  motor           1    wreg     unsigned char 
  6108 ;;  a_mode          1    0[BANK0 ] unsigned char 
  6109 ;;  b_mode          1    1[BANK0 ] unsigned char 
  6110 ;; Auto vars:     Size  Location     Type
  6111 ;;  motor           1    9[BANK0 ] unsigned char 
  6112 ;;  x               1   14[BANK0 ] unsigned char 
  6113 ;;  lat_b           1   13[BANK0 ] unsigned char 
  6114 ;;  lat_a           1   12[BANK0 ] unsigned char 
  6115 ;;  pps_b           1   11[BANK0 ] unsigned char 
  6116 ;;  pps_a           1   10[BANK0 ] unsigned char 
  6117 ;; Return value:  Size  Location     Type
  6118 ;;                  1    wreg      void 
  6119 ;; Registers used:
  6120 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  6121 ;; Tracked objects:
  6122 ;;		On entry : 0/0
  6123 ;;		On exit  : 0/0
  6124 ;;		Unchanged: 0/0
  6125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6126 ;;      Params:         0       2       0       0       0       0       0       0
  6127 ;;      Locals:         0      10       0       0       0       0       0       0
  6128 ;;      Temps:          0       3       0       0       0       0       0       0
  6129 ;;      Totals:         0      15       0       0       0       0       0       0
  6130 ;;Total ram usage:       15 bytes
  6131 ;; Hardware stack levels used:    1
  6132 ;; Hardware stack levels required when called:    4
  6133 ;; This function calls:
  6134 ;;		Nothing
  6135 ;; This function is called by:
  6136 ;;		_config_pwm
  6137 ;;		_set_pwm_mode
  6138 ;; This function uses a non-reentrant model
  6139 ;;
  6140                           
  6141                           
  6142                           ;psect for function _set_motor_pps
  6143  0037                     _set_motor_pps:	
  6144                           
  6145                           ;incstack = 0
  6146                           ; Regs used in _set_motor_pps: [wreg-fsr1h+status,2+status,0]
  6147                           ;set_motor_pps@motor stored from wreg
  6148  0037  0020               	movlb	0	; select bank0
  6149  0038  00A9               	movwf	set_motor_pps@motor
  6150  0039                     l1967:	
  6151                           
  6152                           ;code/pwm.c: 98: static void set_motor_pps(u8 motor,u8 a_mode,u8 b_mode);code/pwm.c: 99:
      +                           {;code/pwm.c: 100:      u8 pps_a = a_mode==2 ? pps_pwm_vals[motor-1] : 0;
  6153  0039  3002               	movlw	2
  6154  003A  0620               	xorwf	set_motor_pps@a_mode,w
  6155  003B  1903               	btfsc	3,2
  6156  003C  283E               	goto	u931
  6157  003D  283F               	goto	u930
  6158  003E                     u931:	
  6159  003E  2842               	goto	l1971
  6160  003F                     u930:	
  6161  003F                     l1969:	
  6162  003F  01A5               	clrf	_set_motor_pps$390
  6163  0040  01A6               	clrf	_set_motor_pps$390+1
  6164  0041  284D               	goto	l1973
  6165  0042                     l1971:	
  6166  0042  0829               	movf	set_motor_pps@motor,w
  6167  0043  3E75               	addlw	(low ((_pps_pwm_vals| 0+255)))& (0+255)
  6168  0044  0086               	movwf	6
  6169  0045  0187               	clrf	7
  6170  0046  0801               	movf	1,w
  6171  0047  00A2               	movwf	??_set_motor_pps
  6172  0048  01A3               	clrf	??_set_motor_pps+1
  6173  0049  0822               	movf	??_set_motor_pps,w
  6174  004A  00A5               	movwf	_set_motor_pps$390
  6175  004B  0823               	movf	??_set_motor_pps+1,w
  6176  004C  00A6               	movwf	_set_motor_pps$390+1
  6177  004D                     l1973:	
  6178  004D  0825               	movf	_set_motor_pps$390,w
  6179  004E  00A2               	movwf	??_set_motor_pps
  6180  004F  0822               	movf	??_set_motor_pps,w
  6181  0050  00AA               	movwf	set_motor_pps@pps_a
  6182  0051                     l1975:	
  6183                           
  6184                           ;code/pwm.c: 101:      u8 pps_b = b_mode==2 ? pps_pwm_vals[motor-1] : 0;
  6185  0051  3002               	movlw	2
  6186  0052  0621               	xorwf	set_motor_pps@b_mode,w
  6187  0053  1903               	btfsc	3,2
  6188  0054  2856               	goto	u941
  6189  0055  2857               	goto	u940
  6190  0056                     u941:	
  6191  0056  285A               	goto	l1979
  6192  0057                     u940:	
  6193  0057                     l1977:	
  6194  0057  01A7               	clrf	_set_motor_pps$392
  6195  0058  01A8               	clrf	_set_motor_pps$392+1
  6196  0059  2865               	goto	l1981
  6197  005A                     l1979:	
  6198  005A  0829               	movf	set_motor_pps@motor,w
  6199  005B  3E75               	addlw	(low ((_pps_pwm_vals| 0+255)))& (0+255)
  6200  005C  0086               	movwf	6
  6201  005D  0187               	clrf	7
  6202  005E  0801               	movf	1,w
  6203  005F  00A2               	movwf	??_set_motor_pps
  6204  0060  01A3               	clrf	??_set_motor_pps+1
  6205  0061  0822               	movf	??_set_motor_pps,w
  6206  0062  00A7               	movwf	_set_motor_pps$392
  6207  0063  0823               	movf	??_set_motor_pps+1,w
  6208  0064  00A8               	movwf	_set_motor_pps$392+1
  6209  0065                     l1981:	
  6210  0065  0827               	movf	_set_motor_pps$392,w
  6211  0066  00A2               	movwf	??_set_motor_pps
  6212  0067  0822               	movf	??_set_motor_pps,w
  6213  0068  00AB               	movwf	set_motor_pps@pps_b
  6214  0069                     l1983:	
  6215                           
  6216                           ;code/pwm.c: 102:      u8 lat_a = a_mode ? 1 : 0;
  6217  0069  0820               	movf	set_motor_pps@a_mode,w
  6218  006A  1D03               	btfss	3,2
  6219  006B  286D               	goto	u951
  6220  006C  286F               	goto	u950
  6221  006D                     u951:	
  6222  006D  3001               	movlw	1
  6223  006E  2870               	goto	u960
  6224  006F                     u950:	
  6225  006F  3000               	movlw	0
  6226  0070                     u960:	
  6227  0070  00A2               	movwf	??_set_motor_pps
  6228  0071  0822               	movf	??_set_motor_pps,w
  6229  0072  00AC               	movwf	set_motor_pps@lat_a
  6230  0073                     l1985:	
  6231                           
  6232                           ;code/pwm.c: 103:      u8 lat_b = b_mode ? 1 : 0;
  6233  0073  0821               	movf	set_motor_pps@b_mode,w
  6234  0074  1D03               	btfss	3,2
  6235  0075  2877               	goto	u971
  6236  0076  2879               	goto	u970
  6237  0077                     u971:	
  6238  0077  3001               	movlw	1
  6239  0078  287A               	goto	u980
  6240  0079                     u970:	
  6241  0079  3000               	movlw	0
  6242  007A                     u980:	
  6243  007A  00A2               	movwf	??_set_motor_pps
  6244  007B  0822               	movf	??_set_motor_pps,w
  6245  007C  00AD               	movwf	set_motor_pps@lat_b
  6246                           
  6247                           ;code/pwm.c: 104:      u8 x;;code/pwm.c: 105:      switch(motor){
  6248  007D  290D               	goto	l2013
  6249  007E                     l1987:	
  6250                           
  6251                           ;code/pwm.c: 107:    RA0PPS = pps_a;
  6252  007E  082A               	movf	set_motor_pps@pps_a,w
  6253  007F  003D               	movlb	29	; select bank29
  6254  0080  0090               	movwf	16	;volatile
  6255                           
  6256                           ;code/pwm.c: 108:    RA1PPS = pps_b;
  6257  0081  0020               	movlb	0	; select bank0
  6258  0082  082B               	movf	set_motor_pps@pps_b,w
  6259  0083  003D               	movlb	29	; select bank29
  6260  0084  0091               	movwf	17	;volatile
  6261                           
  6262                           ;code/pwm.c: 109:        x = LATA;
  6263  0085  0022               	movlb	2	; select bank2
  6264  0086  080C               	movf	12,w	;volatile
  6265  0087  0020               	movlb	0	; select bank0
  6266  0088  00A2               	movwf	??_set_motor_pps
  6267  0089  0822               	movf	??_set_motor_pps,w
  6268  008A  00AE               	movwf	set_motor_pps@x
  6269  008B                     l1989:	
  6270                           
  6271                           ;code/pwm.c: 110:    x &= 0xFC;
  6272  008B  30FC               	movlw	252
  6273  008C  00A2               	movwf	??_set_motor_pps
  6274  008D  0822               	movf	??_set_motor_pps,w
  6275  008E  05AE               	andwf	set_motor_pps@x,f
  6276  008F                     l1991:	
  6277                           
  6278                           ;code/pwm.c: 111:    x |= (lat_b<<1) + (lat_a<<0);
  6279  008F  352D               	lslf	set_motor_pps@lat_b,w
  6280  0090  072C               	addwf	set_motor_pps@lat_a,w
  6281  0091  00A2               	movwf	??_set_motor_pps
  6282  0092  0822               	movf	??_set_motor_pps,w
  6283  0093  04AE               	iorwf	set_motor_pps@x,f
  6284                           
  6285                           ;code/pwm.c: 112:        LATA = x;
  6286  0094  082E               	movf	set_motor_pps@x,w
  6287  0095  0022               	movlb	2	; select bank2
  6288  0096  008C               	movwf	12	;volatile
  6289                           
  6290                           ;code/pwm.c: 113:    break;
  6291  0097  2923               	goto	l279
  6292  0098                     l1993:	
  6293                           
  6294                           ;code/pwm.c: 115:    RA2PPS = pps_a;
  6295  0098  082A               	movf	set_motor_pps@pps_a,w
  6296  0099  003D               	movlb	29	; select bank29
  6297  009A  0092               	movwf	18	;volatile
  6298                           
  6299                           ;code/pwm.c: 116:    RA3PPS = pps_b;
  6300  009B  0020               	movlb	0	; select bank0
  6301  009C  082B               	movf	set_motor_pps@pps_b,w
  6302  009D  003D               	movlb	29	; select bank29
  6303  009E  0093               	movwf	19	;volatile
  6304                           
  6305                           ;code/pwm.c: 117:        x = LATA;
  6306  009F  0022               	movlb	2	; select bank2
  6307  00A0  080C               	movf	12,w	;volatile
  6308  00A1  0020               	movlb	0	; select bank0
  6309  00A2  00A2               	movwf	??_set_motor_pps
  6310  00A3  0822               	movf	??_set_motor_pps,w
  6311  00A4  00AE               	movwf	set_motor_pps@x
  6312  00A5                     l1995:	
  6313                           
  6314                           ;code/pwm.c: 118:    x &= 0xF3;
  6315  00A5  30F3               	movlw	243
  6316  00A6  00A2               	movwf	??_set_motor_pps
  6317  00A7  0822               	movf	??_set_motor_pps,w
  6318  00A8  05AE               	andwf	set_motor_pps@x,f
  6319  00A9                     l1997:	
  6320                           
  6321                           ;code/pwm.c: 119:    x |= (lat_b<<3) + (lat_a<<2);
  6322  00A9  082C               	movf	set_motor_pps@lat_a,w
  6323  00AA  00A2               	movwf	??_set_motor_pps
  6324  00AB  3002               	movlw	2
  6325  00AC                     u995:	
  6326  00AC  35A2               	lslf	??_set_motor_pps,f
  6327  00AD  0B89               	decfsz	9,f
  6328  00AE  28AC               	goto	u995
  6329  00AF  082D               	movf	set_motor_pps@lat_b,w
  6330  00B0  00A3               	movwf	??_set_motor_pps+1
  6331  00B1  3002               	movlw	2
  6332  00B2                     u1005:	
  6333  00B2  35A3               	lslf	??_set_motor_pps+1,f
  6334  00B3  3EFF               	addlw	-1
  6335  00B4  1D03               	skipz
  6336  00B5  28B2               	goto	u1005
  6337  00B6  3523               	lslf	??_set_motor_pps+1,w
  6338  00B7  0722               	addwf	??_set_motor_pps,w
  6339  00B8  00A4               	movwf	??_set_motor_pps+2
  6340  00B9  0824               	movf	??_set_motor_pps+2,w
  6341  00BA  04AE               	iorwf	set_motor_pps@x,f
  6342                           
  6343                           ;code/pwm.c: 120:        LATA = x;
  6344  00BB  082E               	movf	set_motor_pps@x,w
  6345  00BC  0022               	movlb	2	; select bank2
  6346  00BD  008C               	movwf	12	;volatile
  6347                           
  6348                           ;code/pwm.c: 121:    break;
  6349  00BE  2923               	goto	l279
  6350  00BF                     l1999:	
  6351                           
  6352                           ;code/pwm.c: 123:    RA4PPS = pps_a;
  6353  00BF  082A               	movf	set_motor_pps@pps_a,w
  6354  00C0  003D               	movlb	29	; select bank29
  6355  00C1  0094               	movwf	20	;volatile
  6356                           
  6357                           ;code/pwm.c: 124:    RA5PPS = pps_b;
  6358  00C2  0020               	movlb	0	; select bank0
  6359  00C3  082B               	movf	set_motor_pps@pps_b,w
  6360  00C4  003D               	movlb	29	; select bank29
  6361  00C5  0095               	movwf	21	;volatile
  6362                           
  6363                           ;code/pwm.c: 125:        x = LATA;
  6364  00C6  0022               	movlb	2	; select bank2
  6365  00C7  080C               	movf	12,w	;volatile
  6366  00C8  0020               	movlb	0	; select bank0
  6367  00C9  00A2               	movwf	??_set_motor_pps
  6368  00CA  0822               	movf	??_set_motor_pps,w
  6369  00CB  00AE               	movwf	set_motor_pps@x
  6370  00CC                     l2001:	
  6371                           
  6372                           ;code/pwm.c: 126:    x &= 0xCF;
  6373  00CC  30CF               	movlw	207
  6374  00CD  00A2               	movwf	??_set_motor_pps
  6375  00CE  0822               	movf	??_set_motor_pps,w
  6376  00CF  05AE               	andwf	set_motor_pps@x,f
  6377  00D0                     l2003:	
  6378                           
  6379                           ;code/pwm.c: 127:    x |= (lat_b<<5) + (lat_a<<4);
  6380  00D0  082C               	movf	set_motor_pps@lat_a,w
  6381  00D1  00A2               	movwf	??_set_motor_pps
  6382  00D2  3004               	movlw	4
  6383  00D3                     u1015:	
  6384  00D3  35A2               	lslf	??_set_motor_pps,f
  6385  00D4  0B89               	decfsz	9,f
  6386  00D5  28D3               	goto	u1015
  6387  00D6  082D               	movf	set_motor_pps@lat_b,w
  6388  00D7  00A3               	movwf	??_set_motor_pps+1
  6389  00D8  3004               	movlw	4
  6390  00D9                     u1025:	
  6391  00D9  35A3               	lslf	??_set_motor_pps+1,f
  6392  00DA  3EFF               	addlw	-1
  6393  00DB  1D03               	skipz
  6394  00DC  28D9               	goto	u1025
  6395  00DD  3523               	lslf	??_set_motor_pps+1,w
  6396  00DE  0722               	addwf	??_set_motor_pps,w
  6397  00DF  00A4               	movwf	??_set_motor_pps+2
  6398  00E0  0824               	movf	??_set_motor_pps+2,w
  6399  00E1  04AE               	iorwf	set_motor_pps@x,f
  6400                           
  6401                           ;code/pwm.c: 128:        LATA = x;
  6402  00E2  082E               	movf	set_motor_pps@x,w
  6403  00E3  0022               	movlb	2	; select bank2
  6404  00E4  008C               	movwf	12	;volatile
  6405                           
  6406                           ;code/pwm.c: 129:    break;
  6407  00E5  2923               	goto	l279
  6408  00E6                     l2005:	
  6409                           
  6410                           ;code/pwm.c: 131:    RA7PPS = pps_a;
  6411  00E6  082A               	movf	set_motor_pps@pps_a,w
  6412  00E7  003D               	movlb	29	; select bank29
  6413  00E8  0097               	movwf	23	;volatile
  6414                           
  6415                           ;code/pwm.c: 132:    RA6PPS = pps_b;
  6416  00E9  0020               	movlb	0	; select bank0
  6417  00EA  082B               	movf	set_motor_pps@pps_b,w
  6418  00EB  003D               	movlb	29	; select bank29
  6419  00EC  0096               	movwf	22	;volatile
  6420                           
  6421                           ;code/pwm.c: 133:        x = LATA;
  6422  00ED  0022               	movlb	2	; select bank2
  6423  00EE  080C               	movf	12,w	;volatile
  6424  00EF  0020               	movlb	0	; select bank0
  6425  00F0  00A2               	movwf	??_set_motor_pps
  6426  00F1  0822               	movf	??_set_motor_pps,w
  6427  00F2  00AE               	movwf	set_motor_pps@x
  6428  00F3                     l2007:	
  6429                           
  6430                           ;code/pwm.c: 134:    x &= 0x3F;
  6431  00F3  303F               	movlw	63
  6432  00F4  00A2               	movwf	??_set_motor_pps
  6433  00F5  0822               	movf	??_set_motor_pps,w
  6434  00F6  05AE               	andwf	set_motor_pps@x,f
  6435  00F7                     l2009:	
  6436                           
  6437                           ;code/pwm.c: 135:    x |= (lat_b<<6) + (lat_a<<7);
  6438  00F7  082D               	movf	set_motor_pps@lat_b,w
  6439  00F8  00A2               	movwf	??_set_motor_pps
  6440  00F9  3006               	movlw	6
  6441  00FA                     u1035:	
  6442  00FA  35A2               	lslf	??_set_motor_pps,f
  6443  00FB  0B89               	decfsz	9,f
  6444  00FC  28FA               	goto	u1035
  6445  00FD  082C               	movf	set_motor_pps@lat_a,w
  6446  00FE  00A3               	movwf	??_set_motor_pps+1
  6447  00FF  3006               	movlw	6
  6448  0100                     u1045:	
  6449  0100  35A3               	lslf	??_set_motor_pps+1,f
  6450  0101  3EFF               	addlw	-1
  6451  0102  1D03               	skipz
  6452  0103  2900               	goto	u1045
  6453  0104  3523               	lslf	??_set_motor_pps+1,w
  6454  0105  0722               	addwf	??_set_motor_pps,w
  6455  0106  00A4               	movwf	??_set_motor_pps+2
  6456  0107  0824               	movf	??_set_motor_pps+2,w
  6457  0108  04AE               	iorwf	set_motor_pps@x,f
  6458                           
  6459                           ;code/pwm.c: 136:        LATA = x;
  6460  0109  082E               	movf	set_motor_pps@x,w
  6461  010A  0022               	movlb	2	; select bank2
  6462  010B  008C               	movwf	12	;volatile
  6463                           
  6464                           ;code/pwm.c: 137:    break;
  6465  010C  2923               	goto	l279
  6466  010D                     l2013:	
  6467  010D  0829               	movf	set_motor_pps@motor,w
  6468  010E  00A2               	movwf	??_set_motor_pps
  6469  010F  01A3               	clrf	??_set_motor_pps+1
  6470                           
  6471                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6472                           ; Switch size 1, requested type "simple"
  6473                           ; Number of cases is 1, Range of values is 0 to 0
  6474                           ; switch strategies available:
  6475                           ; Name         Instructions Cycles
  6476                           ; simple_byte            4     3 (average)
  6477                           ; direct_byte            8     6 (fixed)
  6478                           ; jumptable            260     6 (fixed)
  6479                           ;	Chosen strategy is simple_byte
  6480  0110  0823               	movf	??_set_motor_pps+1,w
  6481  0111  3A00               	xorlw	0	; case 0
  6482  0112  1903               	skipnz
  6483  0113  2915               	goto	l2481
  6484  0114  2923               	goto	l279
  6485  0115                     l2481:	
  6486                           
  6487                           ; Switch size 1, requested type "simple"
  6488                           ; Number of cases is 4, Range of values is 1 to 4
  6489                           ; switch strategies available:
  6490                           ; Name         Instructions Cycles
  6491                           ; simple_byte           13     7 (average)
  6492                           ; direct_byte           17     9 (fixed)
  6493                           ; jumptable            263     9 (fixed)
  6494                           ;	Chosen strategy is simple_byte
  6495  0115  0822               	movf	??_set_motor_pps,w
  6496  0116  3A01               	xorlw	1	; case 1
  6497  0117  1903               	skipnz
  6498  0118  287E               	goto	l1987
  6499  0119  3A03               	xorlw	3	; case 2
  6500  011A  1903               	skipnz
  6501  011B  2898               	goto	l1993
  6502  011C  3A01               	xorlw	1	; case 3
  6503  011D  1903               	skipnz
  6504  011E  28BF               	goto	l1999
  6505  011F  3A07               	xorlw	7	; case 4
  6506  0120  1903               	skipnz
  6507  0121  28E6               	goto	l2005
  6508  0122  2923               	goto	l279
  6509  0123                     l279:	
  6510  0123  0008               	return
  6511  0124                     __end_of_set_motor_pps:	
  6512                           
  6513                           	psect	text22
  6514  0489                     __ptext22:	
  6515 ;; *************** function _config_io *****************
  6516 ;; Defined at:
  6517 ;;		line 3 in file "code/io.c"
  6518 ;; Parameters:    Size  Location     Type
  6519 ;;		None
  6520 ;; Auto vars:     Size  Location     Type
  6521 ;;		None
  6522 ;; Return value:  Size  Location     Type
  6523 ;;                  1    wreg      void 
  6524 ;; Registers used:
  6525 ;;		wreg, status,2
  6526 ;; Tracked objects:
  6527 ;;		On entry : 0/0
  6528 ;;		On exit  : 0/0
  6529 ;;		Unchanged: 0/0
  6530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6531 ;;      Params:         0       0       0       0       0       0       0       0
  6532 ;;      Locals:         0       0       0       0       0       0       0       0
  6533 ;;      Temps:          0       0       0       0       0       0       0       0
  6534 ;;      Totals:         0       0       0       0       0       0       0       0
  6535 ;;Total ram usage:        0 bytes
  6536 ;; Hardware stack levels used:    1
  6537 ;; Hardware stack levels required when called:    4
  6538 ;; This function calls:
  6539 ;;		Nothing
  6540 ;; This function is called by:
  6541 ;;		_main
  6542 ;; This function uses a non-reentrant model
  6543 ;;
  6544                           
  6545                           
  6546                           ;psect for function _config_io
  6547  0489                     _config_io:	
  6548  0489                     l2243:	
  6549                           ;incstack = 0
  6550                           ; Regs used in _config_io: [wreg+status,2]
  6551                           
  6552                           
  6553                           ;code/io.c: 5:      TRISA = 0x00;
  6554  0489  0021               	movlb	1	; select bank1
  6555  048A  018C               	clrf	12	;volatile
  6556                           
  6557                           ;code/io.c: 6:      TRISB = 0x00;
  6558  048B  018D               	clrf	13	;volatile
  6559                           
  6560                           ;code/io.c: 7:      TRISC = 0x00;
  6561  048C  018E               	clrf	14	;volatile
  6562                           
  6563                           ;code/io.c: 9:      WPUA = 0x00;
  6564  048D  0024               	movlb	4	; select bank4
  6565  048E  018C               	clrf	12	;volatile
  6566                           
  6567                           ;code/io.c: 10:      WPUB = 0x00;
  6568  048F  018D               	clrf	13	;volatile
  6569  0490                     l2245:	
  6570                           
  6571                           ;code/io.c: 11:      WPUC = 0x0C;
  6572  0490  300C               	movlw	12
  6573  0491  008E               	movwf	14	;volatile
  6574  0492                     l2247:	
  6575                           
  6576                           ;code/io.c: 12:      WPUE = 0x08;
  6577  0492  3008               	movlw	8
  6578  0493  0090               	movwf	16	;volatile
  6579                           
  6580                           ;code/io.c: 14:      ANSELA = 0x00;
  6581  0494  0023               	movlb	3	; select bank3
  6582  0495  018C               	clrf	12	;volatile
  6583                           
  6584                           ;code/io.c: 15:      ANSELB = 0x00;
  6585  0496  018D               	clrf	13	;volatile
  6586                           
  6587                           ;code/io.c: 16:      ANSELC = 0x00;
  6588  0497  018E               	clrf	14	;volatile
  6589  0498                     l100:	
  6590  0498  0008               	return
  6591  0499                     __end_of_config_io:	
  6592                           
  6593                           	psect	text23
  6594  036A                     __ptext23:	
  6595 ;; *************** function _config_i2c *****************
  6596 ;; Defined at:
  6597 ;;		line 48 in file "code/i2c.c"
  6598 ;; Parameters:    Size  Location     Type
  6599 ;;		None
  6600 ;; Auto vars:     Size  Location     Type
  6601 ;;		None
  6602 ;; Return value:  Size  Location     Type
  6603 ;;                  1    wreg      void 
  6604 ;; Registers used:
  6605 ;;		wreg, status,2, status,0
  6606 ;; Tracked objects:
  6607 ;;		On entry : 0/0
  6608 ;;		On exit  : 0/0
  6609 ;;		Unchanged: 0/0
  6610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6611 ;;      Params:         0       0       0       0       0       0       0       0
  6612 ;;      Locals:         0       0       0       0       0       0       0       0
  6613 ;;      Temps:          0       1       0       0       0       0       0       0
  6614 ;;      Totals:         0       1       0       0       0       0       0       0
  6615 ;;Total ram usage:        1 bytes
  6616 ;; Hardware stack levels used:    1
  6617 ;; Hardware stack levels required when called:    4
  6618 ;; This function calls:
  6619 ;;		Nothing
  6620 ;; This function is called by:
  6621 ;;		_main
  6622 ;; This function uses a non-reentrant model
  6623 ;;
  6624                           
  6625                           
  6626                           ;psect for function _config_i2c
  6627  036A                     _config_i2c:	
  6628  036A                     l2211:	
  6629                           ;incstack = 0
  6630                           ; Regs used in _config_i2c: [wreg+status,2+status,0]
  6631                           
  6632                           
  6633                           ;code/i2c.c: 50:      TRISC |= (0b1100);
  6634  036A  300C               	movlw	12
  6635  036B  0020               	movlb	0	; select bank0
  6636  036C  00A0               	movwf	??_config_i2c
  6637  036D  0820               	movf	??_config_i2c,w
  6638  036E  0021               	movlb	1	; select bank1
  6639  036F  048E               	iorwf	14,f	;volatile
  6640                           
  6641                           ;code/i2c.c: 51:      LATC &= ~0b1100;
  6642  0370  30F3               	movlw	243
  6643  0371  0020               	movlb	0	; select bank0
  6644  0372  00A0               	movwf	??_config_i2c
  6645  0373  0820               	movf	??_config_i2c,w
  6646  0374  0022               	movlb	2	; select bank2
  6647  0375  058E               	andwf	14,f	;volatile
  6648  0376                     l2213:	
  6649                           
  6650                           ;code/i2c.c: 52:      ANSELC = 0;
  6651  0376  0023               	movlb	3	; select bank3
  6652  0377  018E               	clrf	14	;volatile
  6653  0378                     l2215:	
  6654                           
  6655                           ;code/i2c.c: 53:      WPUC = 0b1100;
  6656  0378  300C               	movlw	12
  6657  0379  0024               	movlb	4	; select bank4
  6658  037A  008E               	movwf	14	;volatile
  6659  037B                     l2217:	
  6660                           
  6661                           ;code/i2c.c: 55:      PIE1bits.SSP1IE = 1;
  6662  037B  0021               	movlb	1	; select bank1
  6663  037C  1591               	bsf	17,3	;volatile
  6664  037D                     l2219:	
  6665                           
  6666                           ;code/i2c.c: 56:      SSP1ADD = i2c_slave_addr << 1;
  6667  037D  3052               	movlw	82
  6668  037E  0024               	movlb	4	; select bank4
  6669  037F  0092               	movwf	18	;volatile
  6670  0380                     l2221:	
  6671                           
  6672                           ;code/i2c.c: 58:      SSP1CON1 = 0b00110110;
  6673  0380  3036               	movlw	54
  6674  0381  0095               	movwf	21	;volatile
  6675  0382                     l2223:	
  6676                           
  6677                           ;code/i2c.c: 59:      SSP1CON2 = 0b00000000;
  6678  0382  0196               	clrf	22	;volatile
  6679  0383                     l2225:	
  6680                           
  6681                           ;code/i2c.c: 60:      SSP1CON3 = 0b00001011;
  6682  0383  300B               	movlw	11
  6683  0384  0097               	movwf	23	;volatile
  6684  0385                     l2227:	
  6685                           
  6686                           ;code/i2c.c: 62:      SSPCLKPPS = 0b00010010;
  6687  0385  3012               	movlw	18
  6688  0386  003C               	movlb	28	; select bank28
  6689  0387  00BA               	movwf	58	;volatile
  6690  0388                     l2229:	
  6691                           
  6692                           ;code/i2c.c: 63:      SSPDATPPS = 0b00010011;
  6693  0388  3013               	movlw	19
  6694  0389  00BB               	movwf	59	;volatile
  6695  038A                     l2231:	
  6696                           
  6697                           ;code/i2c.c: 64:      RC2PPS = 0b100001;
  6698  038A  3021               	movlw	33
  6699  038B  003D               	movlb	29	; select bank29
  6700  038C  00A2               	movwf	34	;volatile
  6701  038D                     l2233:	
  6702                           
  6703                           ;code/i2c.c: 65:      RC3PPS = 0b100010;
  6704  038D  3022               	movlw	34
  6705  038E  00A3               	movwf	35	;volatile
  6706  038F                     l55:	
  6707  038F  0008               	return
  6708  0390                     __end_of_config_i2c:	
  6709                           
  6710                           	psect	text24
  6711  04E4                     __ptext24:	
  6712 ;; *************** function _config_cpu *****************
  6713 ;; Defined at:
  6714 ;;		line 18 in file "code/main.c"
  6715 ;; Parameters:    Size  Location     Type
  6716 ;;		None
  6717 ;; Auto vars:     Size  Location     Type
  6718 ;;		None
  6719 ;; Return value:  Size  Location     Type
  6720 ;;                  1    wreg      void 
  6721 ;; Registers used:
  6722 ;;		wreg, status,2
  6723 ;; Tracked objects:
  6724 ;;		On entry : 0/0
  6725 ;;		On exit  : 0/0
  6726 ;;		Unchanged: 0/0
  6727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6728 ;;      Params:         0       0       0       0       0       0       0       0
  6729 ;;      Locals:         0       0       0       0       0       0       0       0
  6730 ;;      Temps:          0       0       0       0       0       0       0       0
  6731 ;;      Totals:         0       0       0       0       0       0       0       0
  6732 ;;Total ram usage:        0 bytes
  6733 ;; Hardware stack levels used:    1
  6734 ;; Hardware stack levels required when called:    4
  6735 ;; This function calls:
  6736 ;;		Nothing
  6737 ;; This function is called by:
  6738 ;;		_main
  6739 ;; This function uses a non-reentrant model
  6740 ;;
  6741                           
  6742                           
  6743                           ;psect for function _config_cpu
  6744  04E4                     _config_cpu:	
  6745  04E4                     l2249:	
  6746                           ;incstack = 0
  6747                           ; Regs used in _config_cpu: [wreg+status,2]
  6748                           
  6749                           
  6750                           ;code/main.c: 20:      OSCCON = 0b11110010;
  6751  04E4  30F2               	movlw	242
  6752  04E5  0021               	movlb	1	; select bank1
  6753  04E6  009B               	movwf	27	;volatile
  6754  04E7                     l2251:	
  6755                           
  6756                           ;code/main.c: 21:      INTCON = 0;
  6757  04E7  018B               	clrf	11	;volatile
  6758  04E8                     l2253:	
  6759                           
  6760                           ;code/main.c: 22:      OPTION_REG = 0;
  6761  04E8  0197               	clrf	23	;volatile
  6762  04E9                     l133:	
  6763  04E9  0008               	return
  6764  04EA                     __end_of_config_cpu:	
  6765                           
  6766                           	psect	intentry
  6767  0004                     __pintentry:	
  6768 ;; *************** function _isr *****************
  6769 ;; Defined at:
  6770 ;;		line 10 in file "code/main.c"
  6771 ;; Parameters:    Size  Location     Type
  6772 ;;		None
  6773 ;; Auto vars:     Size  Location     Type
  6774 ;;		None
  6775 ;; Return value:  Size  Location     Type
  6776 ;;                  1    wreg      void 
  6777 ;; Registers used:
  6778 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6779 ;; Tracked objects:
  6780 ;;		On entry : 0/0
  6781 ;;		On exit  : 0/0
  6782 ;;		Unchanged: 0/0
  6783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6784 ;;      Params:         0       0       0       0       0       0       0       0
  6785 ;;      Locals:         0       0       0       0       0       0       0       0
  6786 ;;      Temps:          0       0       0       0       0       0       0       0
  6787 ;;      Totals:         0       0       0       0       0       0       0       0
  6788 ;;Total ram usage:        0 bytes
  6789 ;; Hardware stack levels used:    1
  6790 ;; Hardware stack levels required when called:    3
  6791 ;; This function calls:
  6792 ;;		i1_i2c_isr
  6793 ;; This function is called by:
  6794 ;;		Interrupt level 1
  6795 ;; This function uses a non-reentrant model
  6796 ;;
  6797                           
  6798  0004                     _isr:	
  6799                           
  6800                           ;incstack = 0
  6801  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  6802                           
  6803                           ; Regs used in _isr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6804  0005  3180               	pagesel	$
  6805  0006                     i1l1801:	
  6806                           
  6807                           ;code/main.c: 12:      if(PIR1bits.SSP1IF){
  6808  0006  0020               	movlb	0	; select bank0
  6809  0007  1D91               	btfss	17,3	;volatile
  6810  0008  280A               	goto	u91_21
  6811  0009  280B               	goto	u91_20
  6812  000A                     u91_21:	
  6813  000A  280F               	goto	i1l130
  6814  000B                     u91_20:	
  6815  000B                     i1l1803:	
  6816                           
  6817                           ;code/main.c: 13:    PIR1bits.SSP1IF = 0;
  6818  000B  1191               	bcf	17,3	;volatile
  6819  000C                     i1l1805:	
  6820                           
  6821                           ;code/main.c: 14:    i2c_isr();
  6822  000C  3184  2468  3180   	fcall	i1_i2c_isr
  6823  000F                     i1l130:	
  6824  000F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6825  0010  0009               	retfie
  6826  0011                     __end_of_isr:	
  6827                           
  6828                           	psect	text26
  6829  0468                     __ptext26:	
  6830 ;; *************** function i1_i2c_isr *****************
  6831 ;; Defined at:
  6832 ;;		line 68 in file "code/i2c.c"
  6833 ;; Parameters:    Size  Location     Type
  6834 ;;		None
  6835 ;; Auto vars:     Size  Location     Type
  6836 ;;		None
  6837 ;; Return value:  Size  Location     Type
  6838 ;;                  1    wreg      void 
  6839 ;; Registers used:
  6840 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6841 ;; Tracked objects:
  6842 ;;		On entry : 0/0
  6843 ;;		On exit  : 0/0
  6844 ;;		Unchanged: 0/0
  6845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6846 ;;      Params:         0       0       0       0       0       0       0       0
  6847 ;;      Locals:         0       0       0       0       0       0       0       0
  6848 ;;      Temps:          0       0       0       0       0       0       0       0
  6849 ;;      Totals:         0       0       0       0       0       0       0       0
  6850 ;;Total ram usage:        0 bytes
  6851 ;; Hardware stack levels used:    1
  6852 ;; Hardware stack levels required when called:    2
  6853 ;; This function calls:
  6854 ;;		i1_handle_read
  6855 ;;		i1_handle_write
  6856 ;; This function is called by:
  6857 ;;		_isr
  6858 ;; This function uses a non-reentrant model
  6859 ;;
  6860                           
  6861                           
  6862                           ;psect for function i1_i2c_isr
  6863  0468                     i1_i2c_isr:	
  6864  0468                     i1l1793:	
  6865                           ;incstack = 0
  6866                           ; Regs used in i1_i2c_isr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6867                           
  6868                           
  6869                           ;code/i2c.c: 70:      PIR1bits.SSP1IF = 0;
  6870  0468  0020               	movlb	0	; select bank0
  6871  0469  1191               	bcf	17,3	;volatile
  6872                           
  6873                           ;code/i2c.c: 71:      if(SSP1STATbits.R_nW) handle_read();
  6874  046A  0024               	movlb	4	; select bank4
  6875  046B  1D14               	btfss	20,2	;volatile
  6876  046C  2C6E               	goto	u90_21
  6877  046D  2C6F               	goto	u90_20
  6878  046E                     u90_21:	
  6879  046E  2C73               	goto	i1l1797
  6880  046F                     u90_20:	
  6881  046F                     i1l1795:	
  6882  046F  3184  24B7  3184   	fcall	i1_handle_read
  6883  0472  2C76               	goto	i1l1799
  6884  0473                     i1l1797:	
  6885  0473  3183  2343  3184   	fcall	i1_handle_write
  6886  0476                     i1l1799:	
  6887                           
  6888                           ;code/i2c.c: 73:      SSP1CONbits.CKP = 1;
  6889  0476  0024               	movlb	4	; select bank4
  6890  0477  1615               	bsf	21,4	;volatile
  6891  0478                     i1l60:	
  6892  0478  0008               	return
  6893  0479                     __end_ofi1_i2c_isr:	
  6894                           
  6895                           	psect	text27
  6896  0343                     __ptext27:	
  6897 ;; *************** function i1_handle_write *****************
  6898 ;; Defined at:
  6899 ;;		line 84 in file "code/i2c.c"
  6900 ;; Parameters:    Size  Location     Type
  6901 ;;		None
  6902 ;; Auto vars:     Size  Location     Type
  6903 ;;  handle_write    1    5[COMMON] unsigned char 
  6904 ;; Return value:  Size  Location     Type
  6905 ;;                  1    wreg      void 
  6906 ;; Registers used:
  6907 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6908 ;; Tracked objects:
  6909 ;;		On entry : 0/0
  6910 ;;		On exit  : 0/0
  6911 ;;		Unchanged: 0/0
  6912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6913 ;;      Params:         0       0       0       0       0       0       0       0
  6914 ;;      Locals:         1       0       0       0       0       0       0       0
  6915 ;;      Temps:          1       0       0       0       0       0       0       0
  6916 ;;      Totals:         2       0       0       0       0       0       0       0
  6917 ;;Total ram usage:        2 bytes
  6918 ;; Hardware stack levels used:    1
  6919 ;; Hardware stack levels required when called:    1
  6920 ;; This function calls:
  6921 ;;		i1_write_register
  6922 ;; This function is called by:
  6923 ;;		i1_i2c_isr
  6924 ;; This function uses a non-reentrant model
  6925 ;;
  6926                           
  6927                           
  6928                           ;psect for function i1_handle_write
  6929  0343                     i1_handle_write:	
  6930  0343                     i1l1675:	
  6931                           ;incstack = 0
  6932                           ; Regs used in i1_handle_write: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6933                           
  6934                           
  6935                           ;code/i2c.c: 86:      u8 buf = SSP1BUF;
  6936  0343  0024               	movlb	4	; select bank4
  6937  0344  0811               	movf	17,w	;volatile
  6938  0345  00F4               	movwf	??i1_handle_write
  6939  0346  0874               	movf	??i1_handle_write,w
  6940  0347  00F5               	movwf	i1handle_write@buf
  6941  0348                     i1l1677:	
  6942                           
  6943                           ;code/i2c.c: 88:      if(!SSP1STATbits.D_nA){
  6944  0348  1A94               	btfsc	20,5	;volatile
  6945  0349  2B4B               	goto	u81_21
  6946  034A  2B4C               	goto	u81_20
  6947  034B                     u81_21:	
  6948  034B  2B50               	goto	i1l1681
  6949  034C                     u81_20:	
  6950  034C                     i1l1679:	
  6951                           
  6952                           ;code/i2c.c: 89:    first_write = 1;
  6953  034C  0020               	movlb	0	; select bank0
  6954  034D  01C9               	clrf	_first_write
  6955  034E  0AC9               	incf	_first_write,f
  6956                           
  6957                           ;code/i2c.c: 90:    return;
  6958  034F  2B69               	goto	i1l67
  6959  0350                     i1l1681:	
  6960                           
  6961                           ;code/i2c.c: 92:      if(first_write){
  6962  0350  0020               	movlb	0	; select bank0
  6963  0351  0849               	movf	_first_write,w
  6964  0352  1903               	btfsc	3,2
  6965  0353  2B55               	goto	u82_21
  6966  0354  2B56               	goto	u82_20
  6967  0355                     u82_21:	
  6968  0355  2B5C               	goto	i1l1687
  6969  0356                     u82_20:	
  6970  0356                     i1l1683:	
  6971                           
  6972                           ;code/i2c.c: 93:    current_reg = buf;
  6973  0356  0875               	movf	i1handle_write@buf,w
  6974  0357  00F4               	movwf	??i1_handle_write
  6975  0358  0874               	movf	??i1_handle_write,w
  6976  0359  00CA               	movwf	_current_reg
  6977  035A                     i1l1685:	
  6978                           
  6979                           ;code/i2c.c: 94:    first_write = 0;
  6980  035A  01C9               	clrf	_first_write
  6981                           
  6982                           ;code/i2c.c: 95:      }else{
  6983  035B  2B69               	goto	i1l67
  6984  035C                     i1l1687:	
  6985                           
  6986                           ;code/i2c.c: 96:    write_register(current_reg++,buf);
  6987  035C  0875               	movf	i1handle_write@buf,w
  6988  035D  00F4               	movwf	??i1_handle_write
  6989  035E  0874               	movf	??i1_handle_write,w
  6990  035F  00F0               	movwf	i1write_register@val
  6991  0360  084A               	movf	_current_reg,w
  6992  0361  3183  2390  3183   	fcall	i1_write_register
  6993  0364                     i1l1689:	
  6994  0364  3001               	movlw	1
  6995  0365  00F4               	movwf	??i1_handle_write
  6996  0366  0874               	movf	??i1_handle_write,w
  6997  0367  0020               	movlb	0	; select bank0
  6998  0368  07CA               	addwf	_current_reg,f
  6999  0369                     i1l67:	
  7000  0369  0008               	return
  7001  036A                     __end_ofi1_handle_write:	
  7002                           
  7003                           	psect	text28
  7004  0390                     __ptext28:	
  7005 ;; *************** function i1_write_register *****************
  7006 ;; Defined at:
  7007 ;;		line 100 in file "code/i2c.c"
  7008 ;; Parameters:    Size  Location     Type
  7009 ;;  reg             1    wreg     unsigned char 
  7010 ;;  val             1    0[COMMON] unsigned char 
  7011 ;; Auto vars:     Size  Location     Type
  7012 ;;  reg             1    3[COMMON] unsigned char 
  7013 ;;  write_regist    1    2[COMMON] unsigned char 
  7014 ;; Return value:  Size  Location     Type
  7015 ;;                  1    wreg      void 
  7016 ;; Registers used:
  7017 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7018 ;; Tracked objects:
  7019 ;;		On entry : 0/0
  7020 ;;		On exit  : 0/0
  7021 ;;		Unchanged: 0/0
  7022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7023 ;;      Params:         1       0       0       0       0       0       0       0
  7024 ;;      Locals:         2       0       0       0       0       0       0       0
  7025 ;;      Temps:          1       0       0       0       0       0       0       0
  7026 ;;      Totals:         4       0       0       0       0       0       0       0
  7027 ;;Total ram usage:        4 bytes
  7028 ;; Hardware stack levels used:    1
  7029 ;; This function calls:
  7030 ;;		Nothing
  7031 ;; This function is called by:
  7032 ;;		i1_handle_write
  7033 ;; This function uses a non-reentrant model
  7034 ;;
  7035                           
  7036                           
  7037                           ;psect for function i1_write_register
  7038  0390                     i1_write_register:	
  7039                           
  7040                           ;incstack = 0
  7041                           ; Regs used in i1_write_register: [wreg+fsr1l+fsr1h+status,2+status,0]
  7042                           ;i1write_register@reg stored from wreg
  7043  0390  00F3               	movwf	i1write_register@reg
  7044  0391                     i1l1589:	
  7045                           
  7046                           ;code/i2c.c: 100: static void write_register(u8 reg,u8 val);code/i2c.c: 101: {;code/i2c.
      +                          c: 102:      if(reg >= 10) return;
  7047  0391  300A               	movlw	10
  7048  0392  0273               	subwf	i1write_register@reg,w
  7049  0393  1C03               	skipc
  7050  0394  2B96               	goto	u67_21
  7051  0395  2B97               	goto	u67_20
  7052  0396                     u67_21:	
  7053  0396  2B98               	goto	i1l1593
  7054  0397                     u67_20:	
  7055  0397  2BB5               	goto	i1l73
  7056  0398                     i1l1593:	
  7057                           
  7058                           ;code/i2c.c: 103:      u8 msk = writeable_reg[reg];
  7059  0398  0873               	movf	i1write_register@reg,w
  7060  0399  3E4B               	addlw	(low (_writeable_reg| 0))& (0+255)
  7061  039A  0086               	movwf	6
  7062  039B  0187               	clrf	7
  7063  039C  0801               	movf	1,w
  7064  039D  00F1               	movwf	??i1_write_register
  7065  039E  0871               	movf	??i1_write_register,w
  7066  039F  00F2               	movwf	i1write_register@msk
  7067  03A0                     i1l1595:	
  7068                           
  7069                           ;code/i2c.c: 106:      val &= msk;
  7070  03A0  0872               	movf	i1write_register@msk,w
  7071  03A1  00F1               	movwf	??i1_write_register
  7072  03A2  0871               	movf	??i1_write_register,w
  7073  03A3  05F0               	andwf	i1write_register@val,f
  7074  03A4                     i1l1597:	
  7075                           
  7076                           ;code/i2c.c: 107:      val |= (i2c_registers[reg] & ~msk);
  7077  03A4  0873               	movf	i1write_register@reg,w
  7078  03A5  3E3E               	addlw	(low (_i2c_registers| 0))& (0+255)
  7079  03A6  0086               	movwf	6
  7080  03A7  0187               	clrf	7
  7081  03A8  0972               	comf	i1write_register@msk,w
  7082  03A9  0501               	andwf	1,w
  7083  03AA  00F1               	movwf	??i1_write_register
  7084  03AB  0871               	movf	??i1_write_register,w
  7085  03AC  04F0               	iorwf	i1write_register@val,f
  7086  03AD                     i1l1599:	
  7087                           
  7088                           ;code/i2c.c: 108:  i2c_registers[reg] = val;
  7089  03AD  0870               	movf	i1write_register@val,w
  7090  03AE  00F1               	movwf	??i1_write_register
  7091  03AF  0873               	movf	i1write_register@reg,w
  7092  03B0  3E3E               	addlw	(low (_i2c_registers| 0))& (0+255)
  7093  03B1  0086               	movwf	6
  7094  03B2  0187               	clrf	7
  7095  03B3  0871               	movf	??i1_write_register,w
  7096  03B4  0081               	movwf	1
  7097  03B5                     i1l73:	
  7098  03B5  0008               	return
  7099  03B6                     __end_ofi1_write_register:	
  7100                           
  7101                           	psect	text29
  7102  04B7                     __ptext29:	
  7103 ;; *************** function i1_handle_read *****************
  7104 ;; Defined at:
  7105 ;;		line 76 in file "code/i2c.c"
  7106 ;; Parameters:    Size  Location     Type
  7107 ;;		None
  7108 ;; Auto vars:     Size  Location     Type
  7109 ;;  handle_read     1    3[COMMON] unsigned char 
  7110 ;;  handle_read     1    0        unsigned char 
  7111 ;; Return value:  Size  Location     Type
  7112 ;;                  1    wreg      void 
  7113 ;; Registers used:
  7114 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7115 ;; Tracked objects:
  7116 ;;		On entry : 0/0
  7117 ;;		On exit  : 0/0
  7118 ;;		Unchanged: 0/0
  7119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7120 ;;      Params:         0       0       0       0       0       0       0       0
  7121 ;;      Locals:         2       0       0       0       0       0       0       0
  7122 ;;      Temps:          1       0       0       0       0       0       0       0
  7123 ;;      Totals:         3       0       0       0       0       0       0       0
  7124 ;;Total ram usage:        3 bytes
  7125 ;; Hardware stack levels used:    1
  7126 ;; Hardware stack levels required when called:    1
  7127 ;; This function calls:
  7128 ;;		i1_read_register
  7129 ;; This function is called by:
  7130 ;;		i1_i2c_isr
  7131 ;; This function uses a non-reentrant model
  7132 ;;
  7133                           
  7134                           
  7135                           ;psect for function i1_handle_read
  7136  04B7                     i1_handle_read:	
  7137  04B7                     i1l1669:	
  7138                           ;incstack = 0
  7139                           ; Regs used in i1_handle_read: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7140                           
  7141  04B7  0024               	movlb	4	; select bank4
  7142  04B8  0811               	movf	17,w	;volatile
  7143  04B9                     i1l1671:	
  7144                           
  7145                           ;code/i2c.c: 79:      u8 buf = read_register(current_reg);
  7146  04B9  0020               	movlb	0	; select bank0
  7147  04BA  084A               	movf	_current_reg,w
  7148  04BB  3184  24A8  3184   	fcall	i1_read_register
  7149  04BE  00F1               	movwf	??i1_handle_read
  7150  04BF  0871               	movf	??i1_handle_read,w
  7151  04C0  00F3               	movwf	i1handle_read@buf
  7152  04C1                     i1l1673:	
  7153                           
  7154                           ;code/i2c.c: 80:      SSP1BUF = buf;
  7155  04C1  0873               	movf	i1handle_read@buf,w
  7156  04C2  0024               	movlb	4	; select bank4
  7157  04C3  0091               	movwf	17	;volatile
  7158  04C4                     i1l63:	
  7159  04C4  0008               	return
  7160  04C5                     __end_ofi1_handle_read:	
  7161                           
  7162                           	psect	text30
  7163  04A8                     __ptext30:	
  7164 ;; *************** function i1_read_register *****************
  7165 ;; Defined at:
  7166 ;;		line 111 in file "code/i2c.c"
  7167 ;; Parameters:    Size  Location     Type
  7168 ;;  reg             1    wreg     unsigned char 
  7169 ;; Auto vars:     Size  Location     Type
  7170 ;;  reg             1    0[COMMON] unsigned char 
  7171 ;; Return value:  Size  Location     Type
  7172 ;;                  1    wreg      unsigned char 
  7173 ;; Registers used:
  7174 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7175 ;; Tracked objects:
  7176 ;;		On entry : 0/0
  7177 ;;		On exit  : 0/0
  7178 ;;		Unchanged: 0/0
  7179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7180 ;;      Params:         0       0       0       0       0       0       0       0
  7181 ;;      Locals:         1       0       0       0       0       0       0       0
  7182 ;;      Temps:          0       0       0       0       0       0       0       0
  7183 ;;      Totals:         1       0       0       0       0       0       0       0
  7184 ;;Total ram usage:        1 bytes
  7185 ;; Hardware stack levels used:    1
  7186 ;; This function calls:
  7187 ;;		Nothing
  7188 ;; This function is called by:
  7189 ;;		i1_handle_read
  7190 ;; This function uses a non-reentrant model
  7191 ;;
  7192                           
  7193                           
  7194                           ;psect for function i1_read_register
  7195  04A8                     i1_read_register:	
  7196                           
  7197                           ;incstack = 0
  7198                           ; Regs used in i1_read_register: [wreg+fsr1l+fsr1h+status,2+status,0]
  7199                           ;i1read_register@reg stored from wreg
  7200  04A8  00F0               	movwf	i1read_register@reg
  7201  04A9                     i1l1601:	
  7202                           
  7203                           ;code/i2c.c: 111: static u8 read_register(u8 reg);code/i2c.c: 112: {;code/i2c.c: 113:   
      +                             if(reg >= 10) return 0;
  7204  04A9  300A               	movlw	10
  7205  04AA  0270               	subwf	i1read_register@reg,w
  7206  04AB  1C03               	skipc
  7207  04AC  2CAE               	goto	u68_21
  7208  04AD  2CAF               	goto	u68_20
  7209  04AE                     u68_21:	
  7210  04AE  2CB1               	goto	i1l1607
  7211  04AF                     u68_20:	
  7212  04AF                     i1l1603:	
  7213  04AF  3000               	movlw	0
  7214  04B0  2CB6               	goto	i1l77
  7215  04B1                     i1l1607:	
  7216                           
  7217                           ;code/i2c.c: 114:      return i2c_registers[reg];
  7218  04B1  0870               	movf	i1read_register@reg,w
  7219  04B2  3E3E               	addlw	(low (_i2c_registers| 0))& (0+255)
  7220  04B3  0086               	movwf	6
  7221  04B4  0187               	clrf	7
  7222  04B5  0801               	movf	1,w
  7223  04B6                     i1l77:	
  7224  04B6  0008               	return
  7225  04B7                     __end_ofi1_read_register:	
  7226  007E                     btemp	set	126	;btemp
  7227  007E                     int$flags	set	126
  7228  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    3
    Data        14
    BSS         13
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     32      55
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    main@ptr	PTR unsigned char  size(2) Largest target is 1
		 -> SSP1CON(SFR4[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    i1_i2c_isr->i1_handle_write
    i1_handle_write->i1_write_register
    i1_handle_read->i1_read_register

Critical Paths under _main in BANK0

    _update_rev->_get_timer
    _update_motors->_update_ctl
    _update_ctl->_set_motor
    _set_motor->_set_pwm_mode
    _set_pwm_mode->_set_motor_pps
    _i2c_isr->_handle_write
    _handle_write->_write_register
    _handle_read->_read_register
    _config_pwm->_set_motor_pps

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    9508
                                             30 BANK0      2     2      0
                         _config_cpu
                         _config_i2c
                          _config_io
                         _config_pwm
                         _config_rev
                            _i2c_isr
                      _update_motors
                         _update_rev
 ---------------------------------------------------------------------------------
 (1) _update_rev                                           4     4      0     229
                                              9 BANK0      4     4      0
                          _get_timer
                        _reset_timer
                        _start_timer
                         _stop_timer
 ---------------------------------------------------------------------------------
 (2) _stop_timer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_timer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _reset_timer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _get_timer                                            9     7      2      99
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (1) _update_motors                                        0     0      0    6450
                         _update_ctl
 ---------------------------------------------------------------------------------
 (2) _update_ctl                                           4     4      0    6450
                                             26 BANK0      4     4      0
                          _set_motor
                       _set_pwm_mode
 ---------------------------------------------------------------------------------
 (3) _set_motor                                            5     3      2    3661
                                             21 BANK0      5     3      2
                            _set_pwm
                       _set_pwm_mode
 ---------------------------------------------------------------------------------
 (3) _set_pwm_mode                                         6     5      1    2532
                                             15 BANK0      6     5      1
                          _get_a_val
                          _get_b_val
                      _set_motor_pps
 ---------------------------------------------------------------------------------
 (4) _get_b_val                                            3     3      0      31
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) _get_a_val                                            3     3      0      31
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) _set_pwm                                              4     3      1     608
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _i2c_isr                                              0     0      0     480
                        _handle_read
                       _handle_write
 ---------------------------------------------------------------------------------
 (2) _handle_write                                         2     2      0     381
                                              4 BANK0      2     2      0
                     _write_register
 ---------------------------------------------------------------------------------
 (3) _write_register                                       4     3      1     316
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _handle_read                                          3     3      0      99
                                              1 BANK0      3     3      0
                      _read_register
 ---------------------------------------------------------------------------------
 (3) _read_register                                        1     1      0      62
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _config_rev                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_pwm                                           1     1      0    2346
                                             15 BANK0      1     1      0
                      _set_motor_pps
                        _set_pwms_dc
 ---------------------------------------------------------------------------------
 (2) _set_pwms_dc                                          5     2      3     487
                                              0 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (4) _set_motor_pps                                       15    13      2    1859
                                              0 BANK0     15    13      2
 ---------------------------------------------------------------------------------
 (1) _config_io                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_i2c                                           1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _config_cpu                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  0     0      0     296
                          i1_i2c_isr
 ---------------------------------------------------------------------------------
 (7) i1_i2c_isr                                            0     0      0     296
                      i1_handle_read
                     i1_handle_write
 ---------------------------------------------------------------------------------
 (8) i1_handle_write                                       2     2      0     228
                                              4 COMMON     2     2      0
                   i1_write_register
 ---------------------------------------------------------------------------------
 (9) i1_write_register                                     4     3      1     183
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (8) i1_handle_read                                        3     3      0      68
                                              1 COMMON     3     3      0
                    i1_read_register
 ---------------------------------------------------------------------------------
 (9) i1_read_register                                      1     1      0      44
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _config_cpu
   _config_i2c
   _config_io
   _config_pwm
     _set_motor_pps
     _set_pwms_dc
   _config_rev
   _i2c_isr
     _handle_read
       _read_register
     _handle_write
       _write_register
   _update_motors
     _update_ctl
       _set_motor
         _set_pwm
         _set_pwm_mode
           _get_a_val
           _get_b_val
           _set_motor_pps
       _set_pwm_mode
         _get_a_val
         _get_b_val
         _set_motor_pps
   _update_rev
     _get_timer
     _reset_timer
     _start_timer
     _stop_timer

 _isr (ROOT)
   i1_i2c_isr
     i1_handle_read
       i1_read_register
     i1_handle_write
       i1_write_register

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      41       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     20      37       6       68.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      41      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Oct 25 13:11:47 2020

        i1handle_write@buf 0075              get_b_val@mode 0022                __CFG_CP$OFF 0000  
                       l60 0467                         l55 038F                         l63 04A7  
                       l73 0342                         l67 031B                         l77 0488  
            _update_motors 04F3                        l100 0498                        l133 04E9  
                      l240 02B5                        l312 04D7                        l320 04EE  
                      l315 0419                        l323 04F9                        l237 0271  
                      l245 0418                        l165 02F2                        l317 0437  
                      l158 01DE                        l326 04FC                        l255 03F8  
                      l168 04F6                        l337 0229                        l282 0456  
                      l291 0182                        l279 0123                        u930 003F  
                      u931 003E                        u940 0057                        u941 0056  
                      u950 006F                        u951 006D                        u960 0070  
                      u970 0079                        u971 0077                        u980 007A  
                      u995 00AC                        _isr 0004                _start_timer 04FA  
             __CFG_BORV$LO 0000                        wreg 0009               __CFG_IESO$ON 0000  
             __CFG_LVP$OFF 0000               __CFG_ZCD$OFF 0000                       l2001 00CC  
                     l2003 00D0                       l2005 00E6                       l2013 010D  
                     l2021 03FC                       l2007 00F3                       l2103 047B  
                     l2009 00F7                       l2105 0481                       l2121 0331  
                     l2113 031E                       l2033 0400                       l2201 0428  
                     l2211 036A                       l2123 033A                       l2019 03FB  
                     l2131 0195                       l2221 0380                       l2213 0376  
                     l2109 0483                       l2117 0325                       l2029 03FE  
                     l2061 03E0                       l2053 03DE                       l2141 01C1  
                     l2133 019D                       l2125 0185                       l2205 04EA  
                     l2301 020E                       l2231 038A                       l2223 0382  
                     l2215 0378                       l2119 032D                       l2039 0402  
                     l2047 03DB                       l2135 01A7                       l2127 0186  
                     l2207 04F7                       l2311 0224                       l2303 0213  
                     l2233 038D                       l2225 0383                       l2217 037B  
                     l2153 0499                       l2161 02F9                       l2241 0465  
                     l2081 0127                       l2049 03DC                       l2137 01AF  
                     l2129 018E                       l2145 01C8                       l2209 04FA  
                     l2305 0214                       l2321 03C4                       l2313 03B6  
                     l2251 04E7                       l2227 0385                       l2219 037D  
                     l2243 0489                       l2155 049B                       l2171 030E  
                     l2163 02FE                       l2235 0457                       l2091 016A  
                     l2083 013C                       l2067 03E2                       l2075 043A  
                     l2139 01B9                       l2307 0218                       l2331 03D3  
                     l2323 03C7                       l2315 03B8                       l2253 04E8  
                     l2229 0388                       l2245 0490                       l2261 0287  
                     l2157 04A4                       l2173 0316                       l2165 0302  
                     l2237 045E                       l2085 0151                       l2077 044A  
                     l2181 02BD                       l2309 021E                       l2325 03CA  
                     l2317 03BE                       l2247 0492                       l2191 022C  
                     l2271 02A0                       l2263 0288                       l2255 0272  
                     l2167 0308                       l2159 02F3                       l2239 0462  
                     l2087 0166                       l2095 016C                       l2079 0126  
                     l2183 02CA                       l2175 02B6                       l2327 03CF  
                     l2319 03C1                       l2249 04E4                       l2193 026A  
                     l2273 02A7                       l2265 028B                       l2257 0283  
                     l2281 04D4                       l2169 030C                       l2089 0169  
                     l2185 02DF                       l2177 02BB                       l2329 03D0  
                     l2195 026C                       l2275 02AE                       l2267 0293  
                     l2259 0284                       l2187 02E7                       l2283 04F3  
                     l2291 01F0                       l2197 0270                       l2269 0299  
                     l2277 04CF                       l2189 02EC                       l2293 01FD  
                     l2285 01DF                       l2279 04D1                       l2199 0419  
                     l2295 0203                       l2287 01E4                       l2481 0115  
                     l2473 01D0                       l2297 0205                       l2289 01E8  
                     l2475 03EA                       l2299 0208                       l2477 040A  
                     l2479 0174                       l1971 0042                       l1981 0065  
                     l1973 004D                       l1991 008F                       l1983 0069  
                     l1975 0051                       l1967 0039                       l1993 0098  
                     l1985 0073                       l1977 0057                       l1969 003F  
                     l1995 00A5                       l1987 007E                       l1979 005A  
                     l1997 00A9                       l1989 008B                       l1999 00BF  
                     ?_isr 0070                       u1005 00B2                       u1110 0481  
                     u1015 00D3                       u1111 0480                       u1120 0324  
                     u1025 00D9                       u1121 0323                       u1105 015E  
                     u1130 02FE                       u1035 00FA                       u1131 02FD  
                     u1140 0308                       u1300 0213                       u1045 0100  
                     u1205 0244                       u1141 0307                       u1301 0212  
                     u1310 021E                       u1215 024E                       u1055 012A  
                     u1311 021D                       u1160 02CA                       u1240 0428  
                     u1320 03CF                       u1225 0259                       u1065 0134  
                     u1161 02C9                       u1241 0427                       u1321 03CE  
                     u1250 045E                       u1170 02F2                       u1154 02C2  
                     u1235 0263                       u1251 045D                       u1075 013F  
                     u1171 02F1                       u1155 02C1                       u1260 01E8  
                     u1085 0149                       u1261 01E7                       _LATA 010C  
                     u1270 01FD                       _LATB 010D                       u1095 0154  
                     u1271 01FC                       _LATC 010E                       u1280 0203  
                     u1185 022F                       u1281 0202                       u1290 020E  
                     u1195 0239                       u1291 020D                       u1275 01F9  
                     _T2PR 0494                       i1l60 0478                       i1l63 04C4  
                     i1l73 03B5                       i1l67 0369                       i1l77 04B6  
                     _WPUA 020C                       _WPUB 020D                       _WPUC 020E  
                     _WPUE 0210               __CFG_WRT$OFF 0000              __CFG_FCMEN$ON 0000  
                     _main 03B6                       fsr0h 0005                       fsr1h 0007  
                     indf0 0000                       fsr0l 0004                       indf1 0001  
                     fsr1l 0006                       btemp 007E              __CFG_BOREN$ON 0000  
                     start 0011              __CFG_MCLRE$ON 0000              _i2c_registers 003E  
          __end_of_i2c_isr 0468                      ??_isr 0076             ?_update_motors 0070  
            __CFG_PLLEN$ON 0000                      ?_main 0070              __CFG_WDTE$OFF 0000  
                    _T2CON 0495                      _T3CON 001E                      i1l130 000F  
                    _TMR3H 001D                      _TMR3L 001C                      u81_20 034C  
                    u81_21 034B                      _TRISA 008C                      _TRISB 008D  
                    _TRISC 008E                      u82_20 0356                      u90_20 046F  
                    u82_21 0355                      u90_21 046E                      u67_20 0397  
                    u91_20 000B                      u67_21 0396                      u91_21 000A  
                    u68_20 04AF                      u68_21 04AE           i1_write_register 0390  
        write_register@reg 0023         __size_ofi1_i2c_isr 0011          write_register@msk 0022  
        write_register@val 0020   __size_ofi1_read_register 000F            __end_of_set_pwm 0183  
                    status 0003                      wtemp0 007E            __initialization 0013  
   __size_ofi1_handle_read 000E               __end_of_main 03D9         set_motor_pps@lat_a 002C  
       set_motor_pps@lat_b 002D         set_motor_pps@motor 0029         set_motor_pps@pps_a 002A  
       set_motor_pps@pps_b 002B             __CFG_LPBOR$OFF 0000                     ??_main 003E  
           _i2c_slave_addr 04FF       __end_of_handle_write 031C       __size_of_handle_read 000F  
                   _ANSELA 018C                     _ANSELB 018D                     _ANSELC 018E  
         ??_write_register 0021                     _RA0PPS 0E90                     _RA1PPS 0E91  
                   _RA2PPS 0E92                     _RA3PPS 0E93                     _RA4PPS 0E94  
                   _RA5PPS 0E95                     _RC2PPS 0EA2                     _RA6PPS 0E96  
                   _RC3PPS 0EA3                     _RA7PPS 0E97                     i1l1601 04A9  
                   i1l1603 04AF                     i1l1607 04B1                     i1l1801 0006  
                   i1l1803 000B                     i1l1805 000C                     i1l1671 04B9  
                   i1l1673 04C1                     i1l1593 0398                     i1l1681 0350  
                   i1l1595 03A0                     i1l1683 0356                     i1l1675 0343  
                   i1l1669 04B7                     i1l1597 03A4                     i1l1589 0391  
                   i1l1685 035A                     i1l1677 0348                     i1l1599 03AD  
                   i1l1687 035C                     i1l1679 034C                     i1l1689 0364  
                   i1l1793 0468                     i1l1795 046F                     i1l1797 0473  
                   i1l1799 0476                     _INTCON 000B                     _OSCCON 009B  
                ??_i2c_isr 0026             __CFG_PWRTE$OFF 0000               ?_reset_timer 0070  
          ??_update_motors 003E             __CFG_STVREN$ON 0000          __end_ofi1_i2c_isr 0479  
             ?_set_pwms_dc 0020     __end_of_i2c_slave_addr 0500               __pdataCOMMON 0076  
            i1_handle_read 04B7                  ??_set_pwm 0021    __end_of__initialization 0033  
   __size_of_read_register 0010          ??i1_read_register 0070             __pcstackCOMMON 0070  
             __pidataBANK0 04C5    __size_ofi1_handle_write 0027        set_motor_pps@a_mode 0020  
      set_motor_pps@b_mode 0021               ?_start_timer 0070             ?i1_handle_read 0070  
       __size_of_get_a_val 0020         __size_of_get_b_val 0020         __size_of_config_io 0010  
    __end_of_set_motor_pps 0124         __size_of_get_timer 001F                 __pbssBANK0 003E  
 __end_ofi1_write_register 03B6                 __pmaintext 03B6            __CFG_PPS1WAY$ON 0000  
               __pintentry 0004      __size_of_handle_write 0029              _read_register 0479  
       __size_of_set_motor 005C                 _config_i2c 036A          _set_motor_pps$390 0025  
        _set_motor_pps$392 0027                 _config_cpu 04E4                 _config_rev 04CF  
               _config_pwm 0272                    _PWM3DCH 0615                    _PWM3DCL 0614  
                  _PWM4DCH 0618                    _PWM4DCL 0617                    _PWM5DCH 0D94  
                  _PWM5DCL 0D93                    _PWM3CON 0616                    _PWM4CON 0619  
                  _PWM5CON 0D9B                    _PWM9DCH 061B                    _PWM9DCL 061A  
                  _PWM5PHH 0D92                    _PWM9CON 061C                    _PWM5PHL 0D91  
                  _SSP1ADD 0212                    _PWM5PRH 0D96                    _PWM5PRL 0D95  
                  _SSP1CON 0215                    _SSP1BUF 0211              _writeable_reg 004B  
                  _i2c_isr 0457               _handle_write 02F3          __end_of_get_a_val 0419  
        __end_of_get_b_val 03F9          __end_of_config_io 0499          __end_of_get_timer 0438  
     __size_of_reset_timer 0005            handle_write@buf 0025             ?_read_register 0070  
                  __ptext1 01DF                    __ptext2 04F7                    __ptext3 04FA  
                  __ptext4 04EA                    __ptext5 0419                    __ptext6 04F3  
                  __ptext7 02B6                    __ptext8 0183                    __ptext9 0438  
          ??i1_handle_read 0071       __size_of_set_pwms_dc 0048              ?_set_pwm_mode 002F  
             __size_of_isr 000D                  _T3CONbits 001E                    _set_pwm 0124  
                  clrloop0 04DF       end_of_initialization 0033                    init_ram 04D8  
                  initloop 04D9          __end_of_set_motor 01DF             i1_handle_write 0343  
      i1write_register@reg 0073        i1write_register@msk 0072        i1write_register@val 0070  
                _PWM5LDCON 0D9F          set_pwm_mode@motor 0032                  _PORTBbits 000D  
               _prev_steps 0048                  i1_i2c_isr 0468             ??_set_pwm_mode 0030  
                _SSPDATPPS 0E3B                  _SSPCLKPPS 0E3A              ??_handle_read 0021  
         __CFG_FOSC$INTOSC 0000                ?_config_i2c 0070                ?_config_cpu 0070  
              ?_config_rev 0070                ?_config_pwm 0070                 _update_ctl 02B6  
          i1_read_register 04A8                 _update_rev 01DF       __size_of_start_timer 0003  
               get_timer@h 0028                 get_timer@l 0027     __end_ofi1_handle_write 036A  
               _stop_timer 04F7            ??_read_register 0020      __end_of_update_motors 04F7  
            __pidataCOMMON 04EF                 ?i1_i2c_isr 0070        start_initialization 0013  
              __end_of_isr 0011                update_ctl@c 003C                update_ctl@i 003D  
              update_rev@t 002A        __end_of_handle_read 04A8            ?i1_handle_write 0070  
        ?i1_write_register 0070        __size_of_config_i2c 0026    __size_of_write_register 0027  
      __size_of_config_cpu 0006        __size_of_config_rev 0009        __size_of_config_pwm 0044  
            _PWM5LDCONbits 0D9F         ??i1_write_register 0071                __pdataBANK0 004B  
           set_motor@motor 0039    __end_ofi1_read_register 04B7                  ___latbits 0001  
            __pcstackBANK0 0020             set_motor_pps@x 002E                ?_update_ctl 0070  
              ?_update_rev 0070       __end_of_set_pwm_mode 0457                   ?_i2c_isr 0070  
              ?_stop_timer 0070             handle_read@buf 0023     __size_of_set_motor_pps 00ED  
                _get_a_val 03F9                  _get_b_val 03D9                  _config_io 0489  
                _get_timer 0419                ??i1_i2c_isr 0076                _handle_read 0499  
                 ?_set_pwm 0020                   _T2CLKCON 0497                  clear_ram0 04DE  
                 _PIE1bits 0091                 set_pwm@pwm 0020              ??_reset_timer 0020  
                 _PIR1bits 0011                  _set_motor 0183        __size_of_update_ctl 003D  
      __size_of_update_rev 004B                   _SSP1CON1 0215                   _SSP1CON2 0216  
                 _SSP1CON3 0217           set_pwm_mode@mode 002F              ??_set_pwms_dc 0023  
               ?_get_a_val 0070                 ?_get_b_val 0070                 ?_config_io 0070  
               ?_get_timer 0020           ?i1_read_register 0070      __end_ofi1_handle_read 04C5  
             ??_config_i2c 0020               ??_config_cpu 0020               ??_config_rev 0020  
             ??_config_pwm 002F        __size_of_stop_timer 0003              _set_motor_pps 0037  
              _first_write 0049           __size_of_i2c_isr 0011             _write_register 031C  
           _int_time_delay 04FD                 ?_set_motor 0035         __end_of_config_i2c 0390  
       __end_of_config_cpu 04EA         __end_of_config_rev 04D8         __end_of_config_pwm 02B6  
      __end_of_reset_timer 04EF           read_register@reg 0020        update_rev@steps_buf 002C  
            ??_start_timer 0020                _current_reg 004A        __end_of_set_pwms_dc 0272  
           ?_set_motor_pps 0020                   __ptext10 03D9                   __ptext11 03F9  
                 __ptext20 022A                   __ptext12 0124                   __ptext21 0037  
                 __ptext13 0457                   __ptext30 04A8                   __ptext22 0489  
                 __ptext14 02F3                   __ptext23 036A                   __ptext15 031C  
                 __ptext24 04E4                   __ptext16 0499                   __ptext17 0479  
                 __ptext26 0468                   __ptext18 04CF                   __ptext27 0343  
                 __ptext19 0272                   __ptext28 0390                   __ptext29 04B7  
         __size_of_set_pwm 005F              set_pwm_mode@a 0033              set_pwm_mode@b 0034  
    __size_of_set_pwm_mode 001F           ??i1_handle_write 0074              set_pwms_dc@m3 0024  
            set_pwms_dc@m4 0020              set_pwms_dc@m5 0022              set_pwms_dc@m9 0021  
            __size_of_main 0023     __end_of_write_register 0343     __end_of_int_time_delay 04FF  
                 int$flags 007E                ??_get_a_val 0020                ??_get_b_val 0020  
             _SSP1STATbits 0214                ??_config_io 0020      __end_of_read_register 0489  
              ??_get_timer 0022               _set_pwm_mode 0438  __size_ofi1_write_register 0026  
             ??_update_ctl 003A               ??_update_rev 0029               set_motor@dir 0035  
             set_motor@pwm 0036               set_pwm@motor 0023        __end_of_start_timer 04FD  
                 intlevel1 0000     __size_of_update_motors 0004          __CFG_CLKOUTEN$OFF 0000  
          ?_write_register 0020                _SSP1CONbits 0215              ?_handle_write 0070  
              _reset_timer 04EA               ??_stop_timer 0020                ??_set_motor 0037  
       __end_of_update_ctl 02F3         __end_of_update_rev 022A                 _PWM5CLKCON 0D9E  
              _set_pwms_dc 022A              __pstringtext1 04FD              __pstringtext2 04FF  
               _OPTION_REG 0097               ?_handle_read 0070            ??_set_motor_pps 0022  
         i1handle_read@buf 0073               _pps_pwm_vals 0076         __end_of_stop_timer 04FA  
           ??_handle_write 0024              get_a_val@mode 0022         i1read_register@reg 0070  
