

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Sep  1 15:51:48 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F1773
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	intentry,global,class=CODE,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	dabs	1,0x7E,2
    48  0000                     
    49                           ; Version 2.10
    50                           ; Generated 31/07/2019 GMT
    51                           ; 
    52                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC16F1773 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83  0000                     	;# 
    84  0001                     	;# 
    85  0002                     	;# 
    86  0003                     	;# 
    87  0004                     	;# 
    88  0005                     	;# 
    89  0006                     	;# 
    90  0007                     	;# 
    91  0008                     	;# 
    92  0009                     	;# 
    93  000A                     	;# 
    94  000B                     	;# 
    95  000C                     	;# 
    96  000D                     	;# 
    97  000E                     	;# 
    98  0010                     	;# 
    99  0011                     	;# 
   100  0012                     	;# 
   101  0013                     	;# 
   102  0014                     	;# 
   103  0015                     	;# 
   104  0016                     	;# 
   105  0017                     	;# 
   106  0018                     	;# 
   107  0018                     	;# 
   108  0019                     	;# 
   109  001A                     	;# 
   110  001B                     	;# 
   111  001C                     	;# 
   112  001C                     	;# 
   113  001D                     	;# 
   114  001E                     	;# 
   115  001F                     	;# 
   116  008C                     	;# 
   117  008D                     	;# 
   118  008E                     	;# 
   119  0090                     	;# 
   120  0091                     	;# 
   121  0092                     	;# 
   122  0093                     	;# 
   123  0094                     	;# 
   124  0095                     	;# 
   125  0096                     	;# 
   126  0097                     	;# 
   127  0098                     	;# 
   128  0099                     	;# 
   129  009A                     	;# 
   130  009B                     	;# 
   131  009C                     	;# 
   132  009D                     	;# 
   133  009E                     	;# 
   134  009F                     	;# 
   135  010C                     	;# 
   136  010D                     	;# 
   137  010E                     	;# 
   138  0111                     	;# 
   139  0112                     	;# 
   140  0113                     	;# 
   141  0114                     	;# 
   142  0115                     	;# 
   143  0116                     	;# 
   144  0117                     	;# 
   145  0118                     	;# 
   146  0119                     	;# 
   147  011A                     	;# 
   148  011B                     	;# 
   149  011C                     	;# 
   150  011D                     	;# 
   151  018C                     	;# 
   152  018D                     	;# 
   153  018E                     	;# 
   154  0191                     	;# 
   155  0191                     	;# 
   156  0192                     	;# 
   157  0193                     	;# 
   158  0193                     	;# 
   159  0194                     	;# 
   160  0195                     	;# 
   161  0196                     	;# 
   162  0197                     	;# 
   163  0199                     	;# 
   164  0199                     	;# 
   165  0199                     	;# 
   166  019A                     	;# 
   167  019A                     	;# 
   168  019A                     	;# 
   169  019B                     	;# 
   170  019B                     	;# 
   171  019B                     	;# 
   172  019B                     	;# 
   173  019B                     	;# 
   174  019C                     	;# 
   175  019C                     	;# 
   176  019C                     	;# 
   177  019D                     	;# 
   178  019D                     	;# 
   179  019D                     	;# 
   180  019E                     	;# 
   181  019E                     	;# 
   182  019E                     	;# 
   183  019F                     	;# 
   184  019F                     	;# 
   185  019F                     	;# 
   186  019F                     	;# 
   187  019F                     	;# 
   188  020C                     	;# 
   189  020D                     	;# 
   190  020E                     	;# 
   191  0210                     	;# 
   192  0211                     	;# 
   193  0211                     	;# 
   194  0212                     	;# 
   195  0212                     	;# 
   196  0213                     	;# 
   197  0213                     	;# 
   198  0214                     	;# 
   199  0214                     	;# 
   200  0215                     	;# 
   201  0215                     	;# 
   202  0215                     	;# 
   203  0215                     	;# 
   204  0216                     	;# 
   205  0216                     	;# 
   206  0217                     	;# 
   207  0217                     	;# 
   208  021B                     	;# 
   209  021C                     	;# 
   210  021D                     	;# 
   211  021E                     	;# 
   212  021F                     	;# 
   213  028C                     	;# 
   214  028D                     	;# 
   215  028E                     	;# 
   216  0291                     	;# 
   217  0291                     	;# 
   218  0292                     	;# 
   219  0293                     	;# 
   220  0294                     	;# 
   221  0295                     	;# 
   222  0295                     	;# 
   223  0296                     	;# 
   224  0297                     	;# 
   225  0298                     	;# 
   226  0299                     	;# 
   227  0299                     	;# 
   228  029A                     	;# 
   229  029B                     	;# 
   230  029C                     	;# 
   231  029E                     	;# 
   232  029F                     	;# 
   233  030C                     	;# 
   234  030D                     	;# 
   235  030E                     	;# 
   236  0315                     	;# 
   237  0316                     	;# 
   238  0317                     	;# 
   239  0318                     	;# 
   240  0319                     	;# 
   241  031B                     	;# 
   242  031C                     	;# 
   243  031D                     	;# 
   244  031E                     	;# 
   245  031F                     	;# 
   246  038C                     	;# 
   247  038D                     	;# 
   248  038E                     	;# 
   249  0390                     	;# 
   250  0391                     	;# 
   251  0392                     	;# 
   252  0393                     	;# 
   253  0394                     	;# 
   254  0395                     	;# 
   255  0396                     	;# 
   256  0397                     	;# 
   257  0398                     	;# 
   258  0399                     	;# 
   259  039D                     	;# 
   260  039E                     	;# 
   261  039F                     	;# 
   262  040D                     	;# 
   263  040F                     	;# 
   264  040F                     	;# 
   265  0410                     	;# 
   266  0411                     	;# 
   267  0412                     	;# 
   268  0413                     	;# 
   269  0413                     	;# 
   270  0414                     	;# 
   271  0414                     	;# 
   272  0415                     	;# 
   273  0416                     	;# 
   274  0417                     	;# 
   275  0418                     	;# 
   276  041A                     	;# 
   277  041A                     	;# 
   278  041B                     	;# 
   279  041B                     	;# 
   280  041C                     	;# 
   281  041D                     	;# 
   282  041E                     	;# 
   283  041F                     	;# 
   284  048E                     	;# 
   285  048E                     	;# 
   286  048F                     	;# 
   287  0490                     	;# 
   288  0491                     	;# 
   289  0492                     	;# 
   290  0493                     	;# 
   291  0493                     	;# 
   292  0494                     	;# 
   293  0494                     	;# 
   294  0495                     	;# 
   295  0496                     	;# 
   296  0497                     	;# 
   297  0498                     	;# 
   298  049A                     	;# 
   299  049A                     	;# 
   300  049B                     	;# 
   301  049B                     	;# 
   302  049C                     	;# 
   303  049D                     	;# 
   304  049E                     	;# 
   305  049F                     	;# 
   306  050F                     	;# 
   307  0510                     	;# 
   308  0511                     	;# 
   309  0512                     	;# 
   310  0513                     	;# 
   311  0514                     	;# 
   312  0515                     	;# 
   313  0516                     	;# 
   314  0517                     	;# 
   315  0518                     	;# 
   316  0519                     	;# 
   317  051A                     	;# 
   318  058D                     	;# 
   319  058E                     	;# 
   320  058F                     	;# 
   321  058F                     	;# 
   322  058F                     	;# 
   323  0590                     	;# 
   324  0590                     	;# 
   325  0591                     	;# 
   326  0592                     	;# 
   327  0592                     	;# 
   328  0592                     	;# 
   329  0593                     	;# 
   330  0593                     	;# 
   331  0594                     	;# 
   332  0595                     	;# 
   333  0595                     	;# 
   334  0596                     	;# 
   335  0597                     	;# 
   336  0597                     	;# 
   337  0598                     	;# 
   338  0599                     	;# 
   339  0599                     	;# 
   340  0599                     	;# 
   341  059A                     	;# 
   342  059A                     	;# 
   343  059E                     	;# 
   344  059F                     	;# 
   345  059F                     	;# 
   346  0614                     	;# 
   347  0614                     	;# 
   348  0615                     	;# 
   349  0616                     	;# 
   350  0617                     	;# 
   351  0617                     	;# 
   352  0618                     	;# 
   353  0619                     	;# 
   354  061A                     	;# 
   355  061A                     	;# 
   356  061B                     	;# 
   357  061C                     	;# 
   358  068D                     	;# 
   359  068E                     	;# 
   360  068F                     	;# 
   361  0690                     	;# 
   362  0691                     	;# 
   363  0692                     	;# 
   364  0693                     	;# 
   365  0694                     	;# 
   366  0695                     	;# 
   367  0696                     	;# 
   368  0697                     	;# 
   369  0698                     	;# 
   370  0699                     	;# 
   371  069A                     	;# 
   372  069B                     	;# 
   373  069C                     	;# 
   374  069D                     	;# 
   375  069E                     	;# 
   376  069F                     	;# 
   377  070D                     	;# 
   378  070E                     	;# 
   379  070F                     	;# 
   380  0710                     	;# 
   381  0711                     	;# 
   382  0712                     	;# 
   383  0713                     	;# 
   384  0714                     	;# 
   385  0715                     	;# 
   386  0716                     	;# 
   387  0717                     	;# 
   388  0718                     	;# 
   389  0719                     	;# 
   390  071A                     	;# 
   391  071B                     	;# 
   392  071C                     	;# 
   393  071D                     	;# 
   394  071E                     	;# 
   395  071F                     	;# 
   396  078E                     	;# 
   397  078F                     	;# 
   398  0790                     	;# 
   399  0791                     	;# 
   400  0792                     	;# 
   401  0793                     	;# 
   402  0794                     	;# 
   403  0795                     	;# 
   404  0796                     	;# 
   405  0797                     	;# 
   406  0798                     	;# 
   407  0799                     	;# 
   408  079A                     	;# 
   409  079B                     	;# 
   410  079C                     	;# 
   411  079D                     	;# 
   412  079E                     	;# 
   413  079F                     	;# 
   414  080D                     	;# 
   415  080E                     	;# 
   416  080F                     	;# 
   417  0810                     	;# 
   418  0811                     	;# 
   419  0812                     	;# 
   420  0813                     	;# 
   421  0814                     	;# 
   422  0815                     	;# 
   423  0816                     	;# 
   424  0817                     	;# 
   425  0818                     	;# 
   426  0819                     	;# 
   427  081A                     	;# 
   428  081B                     	;# 
   429  081C                     	;# 
   430  081D                     	;# 
   431  081E                     	;# 
   432  081F                     	;# 
   433  090C                     	;# 
   434  090D                     	;# 
   435  090E                     	;# 
   436  090F                     	;# 
   437  0910                     	;# 
   438  0911                     	;# 
   439  0912                     	;# 
   440  0913                     	;# 
   441  0914                     	;# 
   442  0915                     	;# 
   443  0916                     	;# 
   444  0917                     	;# 
   445  0D8E                     	;# 
   446  0D8F                     	;# 
   447  0D90                     	;# 
   448  0D91                     	;# 
   449  0D91                     	;# 
   450  0D92                     	;# 
   451  0D93                     	;# 
   452  0D93                     	;# 
   453  0D94                     	;# 
   454  0D95                     	;# 
   455  0D95                     	;# 
   456  0D96                     	;# 
   457  0D97                     	;# 
   458  0D97                     	;# 
   459  0D98                     	;# 
   460  0D99                     	;# 
   461  0D99                     	;# 
   462  0D9A                     	;# 
   463  0D9B                     	;# 
   464  0D9C                     	;# 
   465  0D9C                     	;# 
   466  0D9D                     	;# 
   467  0D9D                     	;# 
   468  0D9E                     	;# 
   469  0D9F                     	;# 
   470  0DA0                     	;# 
   471  0DA1                     	;# 
   472  0DA1                     	;# 
   473  0DA2                     	;# 
   474  0DA3                     	;# 
   475  0DA3                     	;# 
   476  0DA4                     	;# 
   477  0DA5                     	;# 
   478  0DA5                     	;# 
   479  0DA6                     	;# 
   480  0DA7                     	;# 
   481  0DA7                     	;# 
   482  0DA8                     	;# 
   483  0DA9                     	;# 
   484  0DA9                     	;# 
   485  0DAA                     	;# 
   486  0DAB                     	;# 
   487  0DAC                     	;# 
   488  0DAC                     	;# 
   489  0DAD                     	;# 
   490  0DAD                     	;# 
   491  0DAE                     	;# 
   492  0DAF                     	;# 
   493  0DB0                     	;# 
   494  0DB1                     	;# 
   495  0DB1                     	;# 
   496  0DB2                     	;# 
   497  0DB3                     	;# 
   498  0DB3                     	;# 
   499  0DB4                     	;# 
   500  0DB5                     	;# 
   501  0DB5                     	;# 
   502  0DB6                     	;# 
   503  0DB7                     	;# 
   504  0DB7                     	;# 
   505  0DB8                     	;# 
   506  0DB9                     	;# 
   507  0DB9                     	;# 
   508  0DBA                     	;# 
   509  0DBB                     	;# 
   510  0DBC                     	;# 
   511  0DBC                     	;# 
   512  0DBD                     	;# 
   513  0DBD                     	;# 
   514  0DBE                     	;# 
   515  0DBF                     	;# 
   516  0DC0                     	;# 
   517  0E0C                     	;# 
   518  0E0D                     	;# 
   519  0E0E                     	;# 
   520  0E0F                     	;# 
   521  0E10                     	;# 
   522  0E11                     	;# 
   523  0E12                     	;# 
   524  0E13                     	;# 
   525  0E14                     	;# 
   526  0E15                     	;# 
   527  0E15                     	;# 
   528  0E15                     	;# 
   529  0E16                     	;# 
   530  0E16                     	;# 
   531  0E16                     	;# 
   532  0E17                     	;# 
   533  0E17                     	;# 
   534  0E17                     	;# 
   535  0E18                     	;# 
   536  0E18                     	;# 
   537  0E18                     	;# 
   538  0E19                     	;# 
   539  0E1A                     	;# 
   540  0E1B                     	;# 
   541  0E1D                     	;# 
   542  0E1E                     	;# 
   543  0E1F                     	;# 
   544  0E21                     	;# 
   545  0E22                     	;# 
   546  0E23                     	;# 
   547  0E24                     	;# 
   548  0E25                     	;# 
   549  0E26                     	;# 
   550  0E27                     	;# 
   551  0E28                     	;# 
   552  0E29                     	;# 
   553  0E2D                     	;# 
   554  0E2E                     	;# 
   555  0E2F                     	;# 
   556  0E30                     	;# 
   557  0E31                     	;# 
   558  0E32                     	;# 
   559  0E35                     	;# 
   560  0E36                     	;# 
   561  0E37                     	;# 
   562  0E38                     	;# 
   563  0E39                     	;# 
   564  0E3A                     	;# 
   565  0E3B                     	;# 
   566  0E3C                     	;# 
   567  0E3D                     	;# 
   568  0E3E                     	;# 
   569  0E90                     	;# 
   570  0E91                     	;# 
   571  0E92                     	;# 
   572  0E93                     	;# 
   573  0E94                     	;# 
   574  0E95                     	;# 
   575  0E96                     	;# 
   576  0E97                     	;# 
   577  0E98                     	;# 
   578  0E99                     	;# 
   579  0E9A                     	;# 
   580  0E9B                     	;# 
   581  0E9C                     	;# 
   582  0E9D                     	;# 
   583  0E9E                     	;# 
   584  0E9F                     	;# 
   585  0EA0                     	;# 
   586  0EA1                     	;# 
   587  0EA2                     	;# 
   588  0EA3                     	;# 
   589  0EA4                     	;# 
   590  0EA5                     	;# 
   591  0EA6                     	;# 
   592  0EA7                     	;# 
   593  0F0F                     	;# 
   594  0F10                     	;# 
   595  0F11                     	;# 
   596  0F12                     	;# 
   597  0F13                     	;# 
   598  0F14                     	;# 
   599  0F15                     	;# 
   600  0F16                     	;# 
   601  0F17                     	;# 
   602  0F18                     	;# 
   603  0F19                     	;# 
   604  0F1A                     	;# 
   605  0F1B                     	;# 
   606  0F1C                     	;# 
   607  0F1D                     	;# 
   608  0F1E                     	;# 
   609  0F1F                     	;# 
   610  0F20                     	;# 
   611  0F21                     	;# 
   612  0F22                     	;# 
   613  0F23                     	;# 
   614  0F24                     	;# 
   615  0F25                     	;# 
   616  0F26                     	;# 
   617  0F27                     	;# 
   618  0F28                     	;# 
   619  0F29                     	;# 
   620  0F2A                     	;# 
   621  0F2B                     	;# 
   622  0F2C                     	;# 
   623  0F2D                     	;# 
   624  0F2E                     	;# 
   625  0F2F                     	;# 
   626  0F30                     	;# 
   627  0F31                     	;# 
   628  0F32                     	;# 
   629  0F33                     	;# 
   630  0F34                     	;# 
   631  0F35                     	;# 
   632  0F36                     	;# 
   633  0F37                     	;# 
   634  0FE4                     	;# 
   635  0FE5                     	;# 
   636  0FE6                     	;# 
   637  0FE7                     	;# 
   638  0FE8                     	;# 
   639  0FE9                     	;# 
   640  0FEA                     	;# 
   641  0FEB                     	;# 
   642  0FED                     	;# 
   643  0FEE                     	;# 
   644  0FEF                     	;# 
   645  0000                     	;# 
   646  0001                     	;# 
   647  0002                     	;# 
   648  0003                     	;# 
   649  0004                     	;# 
   650  0005                     	;# 
   651  0006                     	;# 
   652  0007                     	;# 
   653  0008                     	;# 
   654  0009                     	;# 
   655  000A                     	;# 
   656  000B                     	;# 
   657  000C                     	;# 
   658  000D                     	;# 
   659  000E                     	;# 
   660  0010                     	;# 
   661  0011                     	;# 
   662  0012                     	;# 
   663  0013                     	;# 
   664  0014                     	;# 
   665  0015                     	;# 
   666  0016                     	;# 
   667  0017                     	;# 
   668  0018                     	;# 
   669  0018                     	;# 
   670  0019                     	;# 
   671  001A                     	;# 
   672  001B                     	;# 
   673  001C                     	;# 
   674  001C                     	;# 
   675  001D                     	;# 
   676  001E                     	;# 
   677  001F                     	;# 
   678  008C                     	;# 
   679  008D                     	;# 
   680  008E                     	;# 
   681  0090                     	;# 
   682  0091                     	;# 
   683  0092                     	;# 
   684  0093                     	;# 
   685  0094                     	;# 
   686  0095                     	;# 
   687  0096                     	;# 
   688  0097                     	;# 
   689  0098                     	;# 
   690  0099                     	;# 
   691  009A                     	;# 
   692  009B                     	;# 
   693  009C                     	;# 
   694  009D                     	;# 
   695  009E                     	;# 
   696  009F                     	;# 
   697  010C                     	;# 
   698  010D                     	;# 
   699  010E                     	;# 
   700  0111                     	;# 
   701  0112                     	;# 
   702  0113                     	;# 
   703  0114                     	;# 
   704  0115                     	;# 
   705  0116                     	;# 
   706  0117                     	;# 
   707  0118                     	;# 
   708  0119                     	;# 
   709  011A                     	;# 
   710  011B                     	;# 
   711  011C                     	;# 
   712  011D                     	;# 
   713  018C                     	;# 
   714  018D                     	;# 
   715  018E                     	;# 
   716  0191                     	;# 
   717  0191                     	;# 
   718  0192                     	;# 
   719  0193                     	;# 
   720  0193                     	;# 
   721  0194                     	;# 
   722  0195                     	;# 
   723  0196                     	;# 
   724  0197                     	;# 
   725  0199                     	;# 
   726  0199                     	;# 
   727  0199                     	;# 
   728  019A                     	;# 
   729  019A                     	;# 
   730  019A                     	;# 
   731  019B                     	;# 
   732  019B                     	;# 
   733  019B                     	;# 
   734  019B                     	;# 
   735  019B                     	;# 
   736  019C                     	;# 
   737  019C                     	;# 
   738  019C                     	;# 
   739  019D                     	;# 
   740  019D                     	;# 
   741  019D                     	;# 
   742  019E                     	;# 
   743  019E                     	;# 
   744  019E                     	;# 
   745  019F                     	;# 
   746  019F                     	;# 
   747  019F                     	;# 
   748  019F                     	;# 
   749  019F                     	;# 
   750  020C                     	;# 
   751  020D                     	;# 
   752  020E                     	;# 
   753  0210                     	;# 
   754  0211                     	;# 
   755  0211                     	;# 
   756  0212                     	;# 
   757  0212                     	;# 
   758  0213                     	;# 
   759  0213                     	;# 
   760  0214                     	;# 
   761  0214                     	;# 
   762  0215                     	;# 
   763  0215                     	;# 
   764  0215                     	;# 
   765  0215                     	;# 
   766  0216                     	;# 
   767  0216                     	;# 
   768  0217                     	;# 
   769  0217                     	;# 
   770  021B                     	;# 
   771  021C                     	;# 
   772  021D                     	;# 
   773  021E                     	;# 
   774  021F                     	;# 
   775  028C                     	;# 
   776  028D                     	;# 
   777  028E                     	;# 
   778  0291                     	;# 
   779  0291                     	;# 
   780  0292                     	;# 
   781  0293                     	;# 
   782  0294                     	;# 
   783  0295                     	;# 
   784  0295                     	;# 
   785  0296                     	;# 
   786  0297                     	;# 
   787  0298                     	;# 
   788  0299                     	;# 
   789  0299                     	;# 
   790  029A                     	;# 
   791  029B                     	;# 
   792  029C                     	;# 
   793  029E                     	;# 
   794  029F                     	;# 
   795  030C                     	;# 
   796  030D                     	;# 
   797  030E                     	;# 
   798  0315                     	;# 
   799  0316                     	;# 
   800  0317                     	;# 
   801  0318                     	;# 
   802  0319                     	;# 
   803  031B                     	;# 
   804  031C                     	;# 
   805  031D                     	;# 
   806  031E                     	;# 
   807  031F                     	;# 
   808  038C                     	;# 
   809  038D                     	;# 
   810  038E                     	;# 
   811  0390                     	;# 
   812  0391                     	;# 
   813  0392                     	;# 
   814  0393                     	;# 
   815  0394                     	;# 
   816  0395                     	;# 
   817  0396                     	;# 
   818  0397                     	;# 
   819  0398                     	;# 
   820  0399                     	;# 
   821  039D                     	;# 
   822  039E                     	;# 
   823  039F                     	;# 
   824  040D                     	;# 
   825  040F                     	;# 
   826  040F                     	;# 
   827  0410                     	;# 
   828  0411                     	;# 
   829  0412                     	;# 
   830  0413                     	;# 
   831  0413                     	;# 
   832  0414                     	;# 
   833  0414                     	;# 
   834  0415                     	;# 
   835  0416                     	;# 
   836  0417                     	;# 
   837  0418                     	;# 
   838  041A                     	;# 
   839  041A                     	;# 
   840  041B                     	;# 
   841  041B                     	;# 
   842  041C                     	;# 
   843  041D                     	;# 
   844  041E                     	;# 
   845  041F                     	;# 
   846  048E                     	;# 
   847  048E                     	;# 
   848  048F                     	;# 
   849  0490                     	;# 
   850  0491                     	;# 
   851  0492                     	;# 
   852  0493                     	;# 
   853  0493                     	;# 
   854  0494                     	;# 
   855  0494                     	;# 
   856  0495                     	;# 
   857  0496                     	;# 
   858  0497                     	;# 
   859  0498                     	;# 
   860  049A                     	;# 
   861  049A                     	;# 
   862  049B                     	;# 
   863  049B                     	;# 
   864  049C                     	;# 
   865  049D                     	;# 
   866  049E                     	;# 
   867  049F                     	;# 
   868  050F                     	;# 
   869  0510                     	;# 
   870  0511                     	;# 
   871  0512                     	;# 
   872  0513                     	;# 
   873  0514                     	;# 
   874  0515                     	;# 
   875  0516                     	;# 
   876  0517                     	;# 
   877  0518                     	;# 
   878  0519                     	;# 
   879  051A                     	;# 
   880  058D                     	;# 
   881  058E                     	;# 
   882  058F                     	;# 
   883  058F                     	;# 
   884  058F                     	;# 
   885  0590                     	;# 
   886  0590                     	;# 
   887  0591                     	;# 
   888  0592                     	;# 
   889  0592                     	;# 
   890  0592                     	;# 
   891  0593                     	;# 
   892  0593                     	;# 
   893  0594                     	;# 
   894  0595                     	;# 
   895  0595                     	;# 
   896  0596                     	;# 
   897  0597                     	;# 
   898  0597                     	;# 
   899  0598                     	;# 
   900  0599                     	;# 
   901  0599                     	;# 
   902  0599                     	;# 
   903  059A                     	;# 
   904  059A                     	;# 
   905  059E                     	;# 
   906  059F                     	;# 
   907  059F                     	;# 
   908  0614                     	;# 
   909  0614                     	;# 
   910  0615                     	;# 
   911  0616                     	;# 
   912  0617                     	;# 
   913  0617                     	;# 
   914  0618                     	;# 
   915  0619                     	;# 
   916  061A                     	;# 
   917  061A                     	;# 
   918  061B                     	;# 
   919  061C                     	;# 
   920  068D                     	;# 
   921  068E                     	;# 
   922  068F                     	;# 
   923  0690                     	;# 
   924  0691                     	;# 
   925  0692                     	;# 
   926  0693                     	;# 
   927  0694                     	;# 
   928  0695                     	;# 
   929  0696                     	;# 
   930  0697                     	;# 
   931  0698                     	;# 
   932  0699                     	;# 
   933  069A                     	;# 
   934  069B                     	;# 
   935  069C                     	;# 
   936  069D                     	;# 
   937  069E                     	;# 
   938  069F                     	;# 
   939  070D                     	;# 
   940  070E                     	;# 
   941  070F                     	;# 
   942  0710                     	;# 
   943  0711                     	;# 
   944  0712                     	;# 
   945  0713                     	;# 
   946  0714                     	;# 
   947  0715                     	;# 
   948  0716                     	;# 
   949  0717                     	;# 
   950  0718                     	;# 
   951  0719                     	;# 
   952  071A                     	;# 
   953  071B                     	;# 
   954  071C                     	;# 
   955  071D                     	;# 
   956  071E                     	;# 
   957  071F                     	;# 
   958  078E                     	;# 
   959  078F                     	;# 
   960  0790                     	;# 
   961  0791                     	;# 
   962  0792                     	;# 
   963  0793                     	;# 
   964  0794                     	;# 
   965  0795                     	;# 
   966  0796                     	;# 
   967  0797                     	;# 
   968  0798                     	;# 
   969  0799                     	;# 
   970  079A                     	;# 
   971  079B                     	;# 
   972  079C                     	;# 
   973  079D                     	;# 
   974  079E                     	;# 
   975  079F                     	;# 
   976  080D                     	;# 
   977  080E                     	;# 
   978  080F                     	;# 
   979  0810                     	;# 
   980  0811                     	;# 
   981  0812                     	;# 
   982  0813                     	;# 
   983  0814                     	;# 
   984  0815                     	;# 
   985  0816                     	;# 
   986  0817                     	;# 
   987  0818                     	;# 
   988  0819                     	;# 
   989  081A                     	;# 
   990  081B                     	;# 
   991  081C                     	;# 
   992  081D                     	;# 
   993  081E                     	;# 
   994  081F                     	;# 
   995  090C                     	;# 
   996  090D                     	;# 
   997  090E                     	;# 
   998  090F                     	;# 
   999  0910                     	;# 
  1000  0911                     	;# 
  1001  0912                     	;# 
  1002  0913                     	;# 
  1003  0914                     	;# 
  1004  0915                     	;# 
  1005  0916                     	;# 
  1006  0917                     	;# 
  1007  0D8E                     	;# 
  1008  0D8F                     	;# 
  1009  0D90                     	;# 
  1010  0D91                     	;# 
  1011  0D91                     	;# 
  1012  0D92                     	;# 
  1013  0D93                     	;# 
  1014  0D93                     	;# 
  1015  0D94                     	;# 
  1016  0D95                     	;# 
  1017  0D95                     	;# 
  1018  0D96                     	;# 
  1019  0D97                     	;# 
  1020  0D97                     	;# 
  1021  0D98                     	;# 
  1022  0D99                     	;# 
  1023  0D99                     	;# 
  1024  0D9A                     	;# 
  1025  0D9B                     	;# 
  1026  0D9C                     	;# 
  1027  0D9C                     	;# 
  1028  0D9D                     	;# 
  1029  0D9D                     	;# 
  1030  0D9E                     	;# 
  1031  0D9F                     	;# 
  1032  0DA0                     	;# 
  1033  0DA1                     	;# 
  1034  0DA1                     	;# 
  1035  0DA2                     	;# 
  1036  0DA3                     	;# 
  1037  0DA3                     	;# 
  1038  0DA4                     	;# 
  1039  0DA5                     	;# 
  1040  0DA5                     	;# 
  1041  0DA6                     	;# 
  1042  0DA7                     	;# 
  1043  0DA7                     	;# 
  1044  0DA8                     	;# 
  1045  0DA9                     	;# 
  1046  0DA9                     	;# 
  1047  0DAA                     	;# 
  1048  0DAB                     	;# 
  1049  0DAC                     	;# 
  1050  0DAC                     	;# 
  1051  0DAD                     	;# 
  1052  0DAD                     	;# 
  1053  0DAE                     	;# 
  1054  0DAF                     	;# 
  1055  0DB0                     	;# 
  1056  0DB1                     	;# 
  1057  0DB1                     	;# 
  1058  0DB2                     	;# 
  1059  0DB3                     	;# 
  1060  0DB3                     	;# 
  1061  0DB4                     	;# 
  1062  0DB5                     	;# 
  1063  0DB5                     	;# 
  1064  0DB6                     	;# 
  1065  0DB7                     	;# 
  1066  0DB7                     	;# 
  1067  0DB8                     	;# 
  1068  0DB9                     	;# 
  1069  0DB9                     	;# 
  1070  0DBA                     	;# 
  1071  0DBB                     	;# 
  1072  0DBC                     	;# 
  1073  0DBC                     	;# 
  1074  0DBD                     	;# 
  1075  0DBD                     	;# 
  1076  0DBE                     	;# 
  1077  0DBF                     	;# 
  1078  0DC0                     	;# 
  1079  0E0C                     	;# 
  1080  0E0D                     	;# 
  1081  0E0E                     	;# 
  1082  0E0F                     	;# 
  1083  0E10                     	;# 
  1084  0E11                     	;# 
  1085  0E12                     	;# 
  1086  0E13                     	;# 
  1087  0E14                     	;# 
  1088  0E15                     	;# 
  1089  0E15                     	;# 
  1090  0E15                     	;# 
  1091  0E16                     	;# 
  1092  0E16                     	;# 
  1093  0E16                     	;# 
  1094  0E17                     	;# 
  1095  0E17                     	;# 
  1096  0E17                     	;# 
  1097  0E18                     	;# 
  1098  0E18                     	;# 
  1099  0E18                     	;# 
  1100  0E19                     	;# 
  1101  0E1A                     	;# 
  1102  0E1B                     	;# 
  1103  0E1D                     	;# 
  1104  0E1E                     	;# 
  1105  0E1F                     	;# 
  1106  0E21                     	;# 
  1107  0E22                     	;# 
  1108  0E23                     	;# 
  1109  0E24                     	;# 
  1110  0E25                     	;# 
  1111  0E26                     	;# 
  1112  0E27                     	;# 
  1113  0E28                     	;# 
  1114  0E29                     	;# 
  1115  0E2D                     	;# 
  1116  0E2E                     	;# 
  1117  0E2F                     	;# 
  1118  0E30                     	;# 
  1119  0E31                     	;# 
  1120  0E32                     	;# 
  1121  0E35                     	;# 
  1122  0E36                     	;# 
  1123  0E37                     	;# 
  1124  0E38                     	;# 
  1125  0E39                     	;# 
  1126  0E3A                     	;# 
  1127  0E3B                     	;# 
  1128  0E3C                     	;# 
  1129  0E3D                     	;# 
  1130  0E3E                     	;# 
  1131  0E90                     	;# 
  1132  0E91                     	;# 
  1133  0E92                     	;# 
  1134  0E93                     	;# 
  1135  0E94                     	;# 
  1136  0E95                     	;# 
  1137  0E96                     	;# 
  1138  0E97                     	;# 
  1139  0E98                     	;# 
  1140  0E99                     	;# 
  1141  0E9A                     	;# 
  1142  0E9B                     	;# 
  1143  0E9C                     	;# 
  1144  0E9D                     	;# 
  1145  0E9E                     	;# 
  1146  0E9F                     	;# 
  1147  0EA0                     	;# 
  1148  0EA1                     	;# 
  1149  0EA2                     	;# 
  1150  0EA3                     	;# 
  1151  0EA4                     	;# 
  1152  0EA5                     	;# 
  1153  0EA6                     	;# 
  1154  0EA7                     	;# 
  1155  0F0F                     	;# 
  1156  0F10                     	;# 
  1157  0F11                     	;# 
  1158  0F12                     	;# 
  1159  0F13                     	;# 
  1160  0F14                     	;# 
  1161  0F15                     	;# 
  1162  0F16                     	;# 
  1163  0F17                     	;# 
  1164  0F18                     	;# 
  1165  0F19                     	;# 
  1166  0F1A                     	;# 
  1167  0F1B                     	;# 
  1168  0F1C                     	;# 
  1169  0F1D                     	;# 
  1170  0F1E                     	;# 
  1171  0F1F                     	;# 
  1172  0F20                     	;# 
  1173  0F21                     	;# 
  1174  0F22                     	;# 
  1175  0F23                     	;# 
  1176  0F24                     	;# 
  1177  0F25                     	;# 
  1178  0F26                     	;# 
  1179  0F27                     	;# 
  1180  0F28                     	;# 
  1181  0F29                     	;# 
  1182  0F2A                     	;# 
  1183  0F2B                     	;# 
  1184  0F2C                     	;# 
  1185  0F2D                     	;# 
  1186  0F2E                     	;# 
  1187  0F2F                     	;# 
  1188  0F30                     	;# 
  1189  0F31                     	;# 
  1190  0F32                     	;# 
  1191  0F33                     	;# 
  1192  0F34                     	;# 
  1193  0F35                     	;# 
  1194  0F36                     	;# 
  1195  0F37                     	;# 
  1196  0FE4                     	;# 
  1197  0FE5                     	;# 
  1198  0FE6                     	;# 
  1199  0FE7                     	;# 
  1200  0FE8                     	;# 
  1201  0FE9                     	;# 
  1202  0FEA                     	;# 
  1203  0FEB                     	;# 
  1204  0FED                     	;# 
  1205  0FEE                     	;# 
  1206  0FEF                     	;# 
  1207  0000                     	;# 
  1208  0001                     	;# 
  1209  0002                     	;# 
  1210  0003                     	;# 
  1211  0004                     	;# 
  1212  0005                     	;# 
  1213  0006                     	;# 
  1214  0007                     	;# 
  1215  0008                     	;# 
  1216  0009                     	;# 
  1217  000A                     	;# 
  1218  000B                     	;# 
  1219  000C                     	;# 
  1220  000D                     	;# 
  1221  000E                     	;# 
  1222  0010                     	;# 
  1223  0011                     	;# 
  1224  0012                     	;# 
  1225  0013                     	;# 
  1226  0014                     	;# 
  1227  0015                     	;# 
  1228  0016                     	;# 
  1229  0017                     	;# 
  1230  0018                     	;# 
  1231  0018                     	;# 
  1232  0019                     	;# 
  1233  001A                     	;# 
  1234  001B                     	;# 
  1235  001C                     	;# 
  1236  001C                     	;# 
  1237  001D                     	;# 
  1238  001E                     	;# 
  1239  001F                     	;# 
  1240  008C                     	;# 
  1241  008D                     	;# 
  1242  008E                     	;# 
  1243  0090                     	;# 
  1244  0091                     	;# 
  1245  0092                     	;# 
  1246  0093                     	;# 
  1247  0094                     	;# 
  1248  0095                     	;# 
  1249  0096                     	;# 
  1250  0097                     	;# 
  1251  0098                     	;# 
  1252  0099                     	;# 
  1253  009A                     	;# 
  1254  009B                     	;# 
  1255  009C                     	;# 
  1256  009D                     	;# 
  1257  009E                     	;# 
  1258  009F                     	;# 
  1259  010C                     	;# 
  1260  010D                     	;# 
  1261  010E                     	;# 
  1262  0111                     	;# 
  1263  0112                     	;# 
  1264  0113                     	;# 
  1265  0114                     	;# 
  1266  0115                     	;# 
  1267  0116                     	;# 
  1268  0117                     	;# 
  1269  0118                     	;# 
  1270  0119                     	;# 
  1271  011A                     	;# 
  1272  011B                     	;# 
  1273  011C                     	;# 
  1274  011D                     	;# 
  1275  018C                     	;# 
  1276  018D                     	;# 
  1277  018E                     	;# 
  1278  0191                     	;# 
  1279  0191                     	;# 
  1280  0192                     	;# 
  1281  0193                     	;# 
  1282  0193                     	;# 
  1283  0194                     	;# 
  1284  0195                     	;# 
  1285  0196                     	;# 
  1286  0197                     	;# 
  1287  0199                     	;# 
  1288  0199                     	;# 
  1289  0199                     	;# 
  1290  019A                     	;# 
  1291  019A                     	;# 
  1292  019A                     	;# 
  1293  019B                     	;# 
  1294  019B                     	;# 
  1295  019B                     	;# 
  1296  019B                     	;# 
  1297  019B                     	;# 
  1298  019C                     	;# 
  1299  019C                     	;# 
  1300  019C                     	;# 
  1301  019D                     	;# 
  1302  019D                     	;# 
  1303  019D                     	;# 
  1304  019E                     	;# 
  1305  019E                     	;# 
  1306  019E                     	;# 
  1307  019F                     	;# 
  1308  019F                     	;# 
  1309  019F                     	;# 
  1310  019F                     	;# 
  1311  019F                     	;# 
  1312  020C                     	;# 
  1313  020D                     	;# 
  1314  020E                     	;# 
  1315  0210                     	;# 
  1316  0211                     	;# 
  1317  0211                     	;# 
  1318  0212                     	;# 
  1319  0212                     	;# 
  1320  0213                     	;# 
  1321  0213                     	;# 
  1322  0214                     	;# 
  1323  0214                     	;# 
  1324  0215                     	;# 
  1325  0215                     	;# 
  1326  0215                     	;# 
  1327  0215                     	;# 
  1328  0216                     	;# 
  1329  0216                     	;# 
  1330  0217                     	;# 
  1331  0217                     	;# 
  1332  021B                     	;# 
  1333  021C                     	;# 
  1334  021D                     	;# 
  1335  021E                     	;# 
  1336  021F                     	;# 
  1337  028C                     	;# 
  1338  028D                     	;# 
  1339  028E                     	;# 
  1340  0291                     	;# 
  1341  0291                     	;# 
  1342  0292                     	;# 
  1343  0293                     	;# 
  1344  0294                     	;# 
  1345  0295                     	;# 
  1346  0295                     	;# 
  1347  0296                     	;# 
  1348  0297                     	;# 
  1349  0298                     	;# 
  1350  0299                     	;# 
  1351  0299                     	;# 
  1352  029A                     	;# 
  1353  029B                     	;# 
  1354  029C                     	;# 
  1355  029E                     	;# 
  1356  029F                     	;# 
  1357  030C                     	;# 
  1358  030D                     	;# 
  1359  030E                     	;# 
  1360  0315                     	;# 
  1361  0316                     	;# 
  1362  0317                     	;# 
  1363  0318                     	;# 
  1364  0319                     	;# 
  1365  031B                     	;# 
  1366  031C                     	;# 
  1367  031D                     	;# 
  1368  031E                     	;# 
  1369  031F                     	;# 
  1370  038C                     	;# 
  1371  038D                     	;# 
  1372  038E                     	;# 
  1373  0390                     	;# 
  1374  0391                     	;# 
  1375  0392                     	;# 
  1376  0393                     	;# 
  1377  0394                     	;# 
  1378  0395                     	;# 
  1379  0396                     	;# 
  1380  0397                     	;# 
  1381  0398                     	;# 
  1382  0399                     	;# 
  1383  039D                     	;# 
  1384  039E                     	;# 
  1385  039F                     	;# 
  1386  040D                     	;# 
  1387  040F                     	;# 
  1388  040F                     	;# 
  1389  0410                     	;# 
  1390  0411                     	;# 
  1391  0412                     	;# 
  1392  0413                     	;# 
  1393  0413                     	;# 
  1394  0414                     	;# 
  1395  0414                     	;# 
  1396  0415                     	;# 
  1397  0416                     	;# 
  1398  0417                     	;# 
  1399  0418                     	;# 
  1400  041A                     	;# 
  1401  041A                     	;# 
  1402  041B                     	;# 
  1403  041B                     	;# 
  1404  041C                     	;# 
  1405  041D                     	;# 
  1406  041E                     	;# 
  1407  041F                     	;# 
  1408  048E                     	;# 
  1409  048E                     	;# 
  1410  048F                     	;# 
  1411  0490                     	;# 
  1412  0491                     	;# 
  1413  0492                     	;# 
  1414  0493                     	;# 
  1415  0493                     	;# 
  1416  0494                     	;# 
  1417  0494                     	;# 
  1418  0495                     	;# 
  1419  0496                     	;# 
  1420  0497                     	;# 
  1421  0498                     	;# 
  1422  049A                     	;# 
  1423  049A                     	;# 
  1424  049B                     	;# 
  1425  049B                     	;# 
  1426  049C                     	;# 
  1427  049D                     	;# 
  1428  049E                     	;# 
  1429  049F                     	;# 
  1430  050F                     	;# 
  1431  0510                     	;# 
  1432  0511                     	;# 
  1433  0512                     	;# 
  1434  0513                     	;# 
  1435  0514                     	;# 
  1436  0515                     	;# 
  1437  0516                     	;# 
  1438  0517                     	;# 
  1439  0518                     	;# 
  1440  0519                     	;# 
  1441  051A                     	;# 
  1442  058D                     	;# 
  1443  058E                     	;# 
  1444  058F                     	;# 
  1445  058F                     	;# 
  1446  058F                     	;# 
  1447  0590                     	;# 
  1448  0590                     	;# 
  1449  0591                     	;# 
  1450  0592                     	;# 
  1451  0592                     	;# 
  1452  0592                     	;# 
  1453  0593                     	;# 
  1454  0593                     	;# 
  1455  0594                     	;# 
  1456  0595                     	;# 
  1457  0595                     	;# 
  1458  0596                     	;# 
  1459  0597                     	;# 
  1460  0597                     	;# 
  1461  0598                     	;# 
  1462  0599                     	;# 
  1463  0599                     	;# 
  1464  0599                     	;# 
  1465  059A                     	;# 
  1466  059A                     	;# 
  1467  059E                     	;# 
  1468  059F                     	;# 
  1469  059F                     	;# 
  1470  0614                     	;# 
  1471  0614                     	;# 
  1472  0615                     	;# 
  1473  0616                     	;# 
  1474  0617                     	;# 
  1475  0617                     	;# 
  1476  0618                     	;# 
  1477  0619                     	;# 
  1478  061A                     	;# 
  1479  061A                     	;# 
  1480  061B                     	;# 
  1481  061C                     	;# 
  1482  068D                     	;# 
  1483  068E                     	;# 
  1484  068F                     	;# 
  1485  0690                     	;# 
  1486  0691                     	;# 
  1487  0692                     	;# 
  1488  0693                     	;# 
  1489  0694                     	;# 
  1490  0695                     	;# 
  1491  0696                     	;# 
  1492  0697                     	;# 
  1493  0698                     	;# 
  1494  0699                     	;# 
  1495  069A                     	;# 
  1496  069B                     	;# 
  1497  069C                     	;# 
  1498  069D                     	;# 
  1499  069E                     	;# 
  1500  069F                     	;# 
  1501  070D                     	;# 
  1502  070E                     	;# 
  1503  070F                     	;# 
  1504  0710                     	;# 
  1505  0711                     	;# 
  1506  0712                     	;# 
  1507  0713                     	;# 
  1508  0714                     	;# 
  1509  0715                     	;# 
  1510  0716                     	;# 
  1511  0717                     	;# 
  1512  0718                     	;# 
  1513  0719                     	;# 
  1514  071A                     	;# 
  1515  071B                     	;# 
  1516  071C                     	;# 
  1517  071D                     	;# 
  1518  071E                     	;# 
  1519  071F                     	;# 
  1520  078E                     	;# 
  1521  078F                     	;# 
  1522  0790                     	;# 
  1523  0791                     	;# 
  1524  0792                     	;# 
  1525  0793                     	;# 
  1526  0794                     	;# 
  1527  0795                     	;# 
  1528  0796                     	;# 
  1529  0797                     	;# 
  1530  0798                     	;# 
  1531  0799                     	;# 
  1532  079A                     	;# 
  1533  079B                     	;# 
  1534  079C                     	;# 
  1535  079D                     	;# 
  1536  079E                     	;# 
  1537  079F                     	;# 
  1538  080D                     	;# 
  1539  080E                     	;# 
  1540  080F                     	;# 
  1541  0810                     	;# 
  1542  0811                     	;# 
  1543  0812                     	;# 
  1544  0813                     	;# 
  1545  0814                     	;# 
  1546  0815                     	;# 
  1547  0816                     	;# 
  1548  0817                     	;# 
  1549  0818                     	;# 
  1550  0819                     	;# 
  1551  081A                     	;# 
  1552  081B                     	;# 
  1553  081C                     	;# 
  1554  081D                     	;# 
  1555  081E                     	;# 
  1556  081F                     	;# 
  1557  090C                     	;# 
  1558  090D                     	;# 
  1559  090E                     	;# 
  1560  090F                     	;# 
  1561  0910                     	;# 
  1562  0911                     	;# 
  1563  0912                     	;# 
  1564  0913                     	;# 
  1565  0914                     	;# 
  1566  0915                     	;# 
  1567  0916                     	;# 
  1568  0917                     	;# 
  1569  0D8E                     	;# 
  1570  0D8F                     	;# 
  1571  0D90                     	;# 
  1572  0D91                     	;# 
  1573  0D91                     	;# 
  1574  0D92                     	;# 
  1575  0D93                     	;# 
  1576  0D93                     	;# 
  1577  0D94                     	;# 
  1578  0D95                     	;# 
  1579  0D95                     	;# 
  1580  0D96                     	;# 
  1581  0D97                     	;# 
  1582  0D97                     	;# 
  1583  0D98                     	;# 
  1584  0D99                     	;# 
  1585  0D99                     	;# 
  1586  0D9A                     	;# 
  1587  0D9B                     	;# 
  1588  0D9C                     	;# 
  1589  0D9C                     	;# 
  1590  0D9D                     	;# 
  1591  0D9D                     	;# 
  1592  0D9E                     	;# 
  1593  0D9F                     	;# 
  1594  0DA0                     	;# 
  1595  0DA1                     	;# 
  1596  0DA1                     	;# 
  1597  0DA2                     	;# 
  1598  0DA3                     	;# 
  1599  0DA3                     	;# 
  1600  0DA4                     	;# 
  1601  0DA5                     	;# 
  1602  0DA5                     	;# 
  1603  0DA6                     	;# 
  1604  0DA7                     	;# 
  1605  0DA7                     	;# 
  1606  0DA8                     	;# 
  1607  0DA9                     	;# 
  1608  0DA9                     	;# 
  1609  0DAA                     	;# 
  1610  0DAB                     	;# 
  1611  0DAC                     	;# 
  1612  0DAC                     	;# 
  1613  0DAD                     	;# 
  1614  0DAD                     	;# 
  1615  0DAE                     	;# 
  1616  0DAF                     	;# 
  1617  0DB0                     	;# 
  1618  0DB1                     	;# 
  1619  0DB1                     	;# 
  1620  0DB2                     	;# 
  1621  0DB3                     	;# 
  1622  0DB3                     	;# 
  1623  0DB4                     	;# 
  1624  0DB5                     	;# 
  1625  0DB5                     	;# 
  1626  0DB6                     	;# 
  1627  0DB7                     	;# 
  1628  0DB7                     	;# 
  1629  0DB8                     	;# 
  1630  0DB9                     	;# 
  1631  0DB9                     	;# 
  1632  0DBA                     	;# 
  1633  0DBB                     	;# 
  1634  0DBC                     	;# 
  1635  0DBC                     	;# 
  1636  0DBD                     	;# 
  1637  0DBD                     	;# 
  1638  0DBE                     	;# 
  1639  0DBF                     	;# 
  1640  0DC0                     	;# 
  1641  0E0C                     	;# 
  1642  0E0D                     	;# 
  1643  0E0E                     	;# 
  1644  0E0F                     	;# 
  1645  0E10                     	;# 
  1646  0E11                     	;# 
  1647  0E12                     	;# 
  1648  0E13                     	;# 
  1649  0E14                     	;# 
  1650  0E15                     	;# 
  1651  0E15                     	;# 
  1652  0E15                     	;# 
  1653  0E16                     	;# 
  1654  0E16                     	;# 
  1655  0E16                     	;# 
  1656  0E17                     	;# 
  1657  0E17                     	;# 
  1658  0E17                     	;# 
  1659  0E18                     	;# 
  1660  0E18                     	;# 
  1661  0E18                     	;# 
  1662  0E19                     	;# 
  1663  0E1A                     	;# 
  1664  0E1B                     	;# 
  1665  0E1D                     	;# 
  1666  0E1E                     	;# 
  1667  0E1F                     	;# 
  1668  0E21                     	;# 
  1669  0E22                     	;# 
  1670  0E23                     	;# 
  1671  0E24                     	;# 
  1672  0E25                     	;# 
  1673  0E26                     	;# 
  1674  0E27                     	;# 
  1675  0E28                     	;# 
  1676  0E29                     	;# 
  1677  0E2D                     	;# 
  1678  0E2E                     	;# 
  1679  0E2F                     	;# 
  1680  0E30                     	;# 
  1681  0E31                     	;# 
  1682  0E32                     	;# 
  1683  0E35                     	;# 
  1684  0E36                     	;# 
  1685  0E37                     	;# 
  1686  0E38                     	;# 
  1687  0E39                     	;# 
  1688  0E3A                     	;# 
  1689  0E3B                     	;# 
  1690  0E3C                     	;# 
  1691  0E3D                     	;# 
  1692  0E3E                     	;# 
  1693  0E90                     	;# 
  1694  0E91                     	;# 
  1695  0E92                     	;# 
  1696  0E93                     	;# 
  1697  0E94                     	;# 
  1698  0E95                     	;# 
  1699  0E96                     	;# 
  1700  0E97                     	;# 
  1701  0E98                     	;# 
  1702  0E99                     	;# 
  1703  0E9A                     	;# 
  1704  0E9B                     	;# 
  1705  0E9C                     	;# 
  1706  0E9D                     	;# 
  1707  0E9E                     	;# 
  1708  0E9F                     	;# 
  1709  0EA0                     	;# 
  1710  0EA1                     	;# 
  1711  0EA2                     	;# 
  1712  0EA3                     	;# 
  1713  0EA4                     	;# 
  1714  0EA5                     	;# 
  1715  0EA6                     	;# 
  1716  0EA7                     	;# 
  1717  0F0F                     	;# 
  1718  0F10                     	;# 
  1719  0F11                     	;# 
  1720  0F12                     	;# 
  1721  0F13                     	;# 
  1722  0F14                     	;# 
  1723  0F15                     	;# 
  1724  0F16                     	;# 
  1725  0F17                     	;# 
  1726  0F18                     	;# 
  1727  0F19                     	;# 
  1728  0F1A                     	;# 
  1729  0F1B                     	;# 
  1730  0F1C                     	;# 
  1731  0F1D                     	;# 
  1732  0F1E                     	;# 
  1733  0F1F                     	;# 
  1734  0F20                     	;# 
  1735  0F21                     	;# 
  1736  0F22                     	;# 
  1737  0F23                     	;# 
  1738  0F24                     	;# 
  1739  0F25                     	;# 
  1740  0F26                     	;# 
  1741  0F27                     	;# 
  1742  0F28                     	;# 
  1743  0F29                     	;# 
  1744  0F2A                     	;# 
  1745  0F2B                     	;# 
  1746  0F2C                     	;# 
  1747  0F2D                     	;# 
  1748  0F2E                     	;# 
  1749  0F2F                     	;# 
  1750  0F30                     	;# 
  1751  0F31                     	;# 
  1752  0F32                     	;# 
  1753  0F33                     	;# 
  1754  0F34                     	;# 
  1755  0F35                     	;# 
  1756  0F36                     	;# 
  1757  0F37                     	;# 
  1758  0FE4                     	;# 
  1759  0FE5                     	;# 
  1760  0FE6                     	;# 
  1761  0FE7                     	;# 
  1762  0FE8                     	;# 
  1763  0FE9                     	;# 
  1764  0FEA                     	;# 
  1765  0FEB                     	;# 
  1766  0FED                     	;# 
  1767  0FEE                     	;# 
  1768  0FEF                     	;# 
  1769  0000                     	;# 
  1770  0001                     	;# 
  1771  0002                     	;# 
  1772  0003                     	;# 
  1773  0004                     	;# 
  1774  0005                     	;# 
  1775  0006                     	;# 
  1776  0007                     	;# 
  1777  0008                     	;# 
  1778  0009                     	;# 
  1779  000A                     	;# 
  1780  000B                     	;# 
  1781  000C                     	;# 
  1782  000D                     	;# 
  1783  000E                     	;# 
  1784  0010                     	;# 
  1785  0011                     	;# 
  1786  0012                     	;# 
  1787  0013                     	;# 
  1788  0014                     	;# 
  1789  0015                     	;# 
  1790  0016                     	;# 
  1791  0017                     	;# 
  1792  0018                     	;# 
  1793  0018                     	;# 
  1794  0019                     	;# 
  1795  001A                     	;# 
  1796  001B                     	;# 
  1797  001C                     	;# 
  1798  001C                     	;# 
  1799  001D                     	;# 
  1800  001E                     	;# 
  1801  001F                     	;# 
  1802  008C                     	;# 
  1803  008D                     	;# 
  1804  008E                     	;# 
  1805  0090                     	;# 
  1806  0091                     	;# 
  1807  0092                     	;# 
  1808  0093                     	;# 
  1809  0094                     	;# 
  1810  0095                     	;# 
  1811  0096                     	;# 
  1812  0097                     	;# 
  1813  0098                     	;# 
  1814  0099                     	;# 
  1815  009A                     	;# 
  1816  009B                     	;# 
  1817  009C                     	;# 
  1818  009D                     	;# 
  1819  009E                     	;# 
  1820  009F                     	;# 
  1821  010C                     	;# 
  1822  010D                     	;# 
  1823  010E                     	;# 
  1824  0111                     	;# 
  1825  0112                     	;# 
  1826  0113                     	;# 
  1827  0114                     	;# 
  1828  0115                     	;# 
  1829  0116                     	;# 
  1830  0117                     	;# 
  1831  0118                     	;# 
  1832  0119                     	;# 
  1833  011A                     	;# 
  1834  011B                     	;# 
  1835  011C                     	;# 
  1836  011D                     	;# 
  1837  018C                     	;# 
  1838  018D                     	;# 
  1839  018E                     	;# 
  1840  0191                     	;# 
  1841  0191                     	;# 
  1842  0192                     	;# 
  1843  0193                     	;# 
  1844  0193                     	;# 
  1845  0194                     	;# 
  1846  0195                     	;# 
  1847  0196                     	;# 
  1848  0197                     	;# 
  1849  0199                     	;# 
  1850  0199                     	;# 
  1851  0199                     	;# 
  1852  019A                     	;# 
  1853  019A                     	;# 
  1854  019A                     	;# 
  1855  019B                     	;# 
  1856  019B                     	;# 
  1857  019B                     	;# 
  1858  019B                     	;# 
  1859  019B                     	;# 
  1860  019C                     	;# 
  1861  019C                     	;# 
  1862  019C                     	;# 
  1863  019D                     	;# 
  1864  019D                     	;# 
  1865  019D                     	;# 
  1866  019E                     	;# 
  1867  019E                     	;# 
  1868  019E                     	;# 
  1869  019F                     	;# 
  1870  019F                     	;# 
  1871  019F                     	;# 
  1872  019F                     	;# 
  1873  019F                     	;# 
  1874  020C                     	;# 
  1875  020D                     	;# 
  1876  020E                     	;# 
  1877  0210                     	;# 
  1878  0211                     	;# 
  1879  0211                     	;# 
  1880  0212                     	;# 
  1881  0212                     	;# 
  1882  0213                     	;# 
  1883  0213                     	;# 
  1884  0214                     	;# 
  1885  0214                     	;# 
  1886  0215                     	;# 
  1887  0215                     	;# 
  1888  0215                     	;# 
  1889  0215                     	;# 
  1890  0216                     	;# 
  1891  0216                     	;# 
  1892  0217                     	;# 
  1893  0217                     	;# 
  1894  021B                     	;# 
  1895  021C                     	;# 
  1896  021D                     	;# 
  1897  021E                     	;# 
  1898  021F                     	;# 
  1899  028C                     	;# 
  1900  028D                     	;# 
  1901  028E                     	;# 
  1902  0291                     	;# 
  1903  0291                     	;# 
  1904  0292                     	;# 
  1905  0293                     	;# 
  1906  0294                     	;# 
  1907  0295                     	;# 
  1908  0295                     	;# 
  1909  0296                     	;# 
  1910  0297                     	;# 
  1911  0298                     	;# 
  1912  0299                     	;# 
  1913  0299                     	;# 
  1914  029A                     	;# 
  1915  029B                     	;# 
  1916  029C                     	;# 
  1917  029E                     	;# 
  1918  029F                     	;# 
  1919  030C                     	;# 
  1920  030D                     	;# 
  1921  030E                     	;# 
  1922  0315                     	;# 
  1923  0316                     	;# 
  1924  0317                     	;# 
  1925  0318                     	;# 
  1926  0319                     	;# 
  1927  031B                     	;# 
  1928  031C                     	;# 
  1929  031D                     	;# 
  1930  031E                     	;# 
  1931  031F                     	;# 
  1932  038C                     	;# 
  1933  038D                     	;# 
  1934  038E                     	;# 
  1935  0390                     	;# 
  1936  0391                     	;# 
  1937  0392                     	;# 
  1938  0393                     	;# 
  1939  0394                     	;# 
  1940  0395                     	;# 
  1941  0396                     	;# 
  1942  0397                     	;# 
  1943  0398                     	;# 
  1944  0399                     	;# 
  1945  039D                     	;# 
  1946  039E                     	;# 
  1947  039F                     	;# 
  1948  040D                     	;# 
  1949  040F                     	;# 
  1950  040F                     	;# 
  1951  0410                     	;# 
  1952  0411                     	;# 
  1953  0412                     	;# 
  1954  0413                     	;# 
  1955  0413                     	;# 
  1956  0414                     	;# 
  1957  0414                     	;# 
  1958  0415                     	;# 
  1959  0416                     	;# 
  1960  0417                     	;# 
  1961  0418                     	;# 
  1962  041A                     	;# 
  1963  041A                     	;# 
  1964  041B                     	;# 
  1965  041B                     	;# 
  1966  041C                     	;# 
  1967  041D                     	;# 
  1968  041E                     	;# 
  1969  041F                     	;# 
  1970  048E                     	;# 
  1971  048E                     	;# 
  1972  048F                     	;# 
  1973  0490                     	;# 
  1974  0491                     	;# 
  1975  0492                     	;# 
  1976  0493                     	;# 
  1977  0493                     	;# 
  1978  0494                     	;# 
  1979  0494                     	;# 
  1980  0495                     	;# 
  1981  0496                     	;# 
  1982  0497                     	;# 
  1983  0498                     	;# 
  1984  049A                     	;# 
  1985  049A                     	;# 
  1986  049B                     	;# 
  1987  049B                     	;# 
  1988  049C                     	;# 
  1989  049D                     	;# 
  1990  049E                     	;# 
  1991  049F                     	;# 
  1992  050F                     	;# 
  1993  0510                     	;# 
  1994  0511                     	;# 
  1995  0512                     	;# 
  1996  0513                     	;# 
  1997  0514                     	;# 
  1998  0515                     	;# 
  1999  0516                     	;# 
  2000  0517                     	;# 
  2001  0518                     	;# 
  2002  0519                     	;# 
  2003  051A                     	;# 
  2004  058D                     	;# 
  2005  058E                     	;# 
  2006  058F                     	;# 
  2007  058F                     	;# 
  2008  058F                     	;# 
  2009  0590                     	;# 
  2010  0590                     	;# 
  2011  0591                     	;# 
  2012  0592                     	;# 
  2013  0592                     	;# 
  2014  0592                     	;# 
  2015  0593                     	;# 
  2016  0593                     	;# 
  2017  0594                     	;# 
  2018  0595                     	;# 
  2019  0595                     	;# 
  2020  0596                     	;# 
  2021  0597                     	;# 
  2022  0597                     	;# 
  2023  0598                     	;# 
  2024  0599                     	;# 
  2025  0599                     	;# 
  2026  0599                     	;# 
  2027  059A                     	;# 
  2028  059A                     	;# 
  2029  059E                     	;# 
  2030  059F                     	;# 
  2031  059F                     	;# 
  2032  0614                     	;# 
  2033  0614                     	;# 
  2034  0615                     	;# 
  2035  0616                     	;# 
  2036  0617                     	;# 
  2037  0617                     	;# 
  2038  0618                     	;# 
  2039  0619                     	;# 
  2040  061A                     	;# 
  2041  061A                     	;# 
  2042  061B                     	;# 
  2043  061C                     	;# 
  2044  068D                     	;# 
  2045  068E                     	;# 
  2046  068F                     	;# 
  2047  0690                     	;# 
  2048  0691                     	;# 
  2049  0692                     	;# 
  2050  0693                     	;# 
  2051  0694                     	;# 
  2052  0695                     	;# 
  2053  0696                     	;# 
  2054  0697                     	;# 
  2055  0698                     	;# 
  2056  0699                     	;# 
  2057  069A                     	;# 
  2058  069B                     	;# 
  2059  069C                     	;# 
  2060  069D                     	;# 
  2061  069E                     	;# 
  2062  069F                     	;# 
  2063  070D                     	;# 
  2064  070E                     	;# 
  2065  070F                     	;# 
  2066  0710                     	;# 
  2067  0711                     	;# 
  2068  0712                     	;# 
  2069  0713                     	;# 
  2070  0714                     	;# 
  2071  0715                     	;# 
  2072  0716                     	;# 
  2073  0717                     	;# 
  2074  0718                     	;# 
  2075  0719                     	;# 
  2076  071A                     	;# 
  2077  071B                     	;# 
  2078  071C                     	;# 
  2079  071D                     	;# 
  2080  071E                     	;# 
  2081  071F                     	;# 
  2082  078E                     	;# 
  2083  078F                     	;# 
  2084  0790                     	;# 
  2085  0791                     	;# 
  2086  0792                     	;# 
  2087  0793                     	;# 
  2088  0794                     	;# 
  2089  0795                     	;# 
  2090  0796                     	;# 
  2091  0797                     	;# 
  2092  0798                     	;# 
  2093  0799                     	;# 
  2094  079A                     	;# 
  2095  079B                     	;# 
  2096  079C                     	;# 
  2097  079D                     	;# 
  2098  079E                     	;# 
  2099  079F                     	;# 
  2100  080D                     	;# 
  2101  080E                     	;# 
  2102  080F                     	;# 
  2103  0810                     	;# 
  2104  0811                     	;# 
  2105  0812                     	;# 
  2106  0813                     	;# 
  2107  0814                     	;# 
  2108  0815                     	;# 
  2109  0816                     	;# 
  2110  0817                     	;# 
  2111  0818                     	;# 
  2112  0819                     	;# 
  2113  081A                     	;# 
  2114  081B                     	;# 
  2115  081C                     	;# 
  2116  081D                     	;# 
  2117  081E                     	;# 
  2118  081F                     	;# 
  2119  090C                     	;# 
  2120  090D                     	;# 
  2121  090E                     	;# 
  2122  090F                     	;# 
  2123  0910                     	;# 
  2124  0911                     	;# 
  2125  0912                     	;# 
  2126  0913                     	;# 
  2127  0914                     	;# 
  2128  0915                     	;# 
  2129  0916                     	;# 
  2130  0917                     	;# 
  2131  0D8E                     	;# 
  2132  0D8F                     	;# 
  2133  0D90                     	;# 
  2134  0D91                     	;# 
  2135  0D91                     	;# 
  2136  0D92                     	;# 
  2137  0D93                     	;# 
  2138  0D93                     	;# 
  2139  0D94                     	;# 
  2140  0D95                     	;# 
  2141  0D95                     	;# 
  2142  0D96                     	;# 
  2143  0D97                     	;# 
  2144  0D97                     	;# 
  2145  0D98                     	;# 
  2146  0D99                     	;# 
  2147  0D99                     	;# 
  2148  0D9A                     	;# 
  2149  0D9B                     	;# 
  2150  0D9C                     	;# 
  2151  0D9C                     	;# 
  2152  0D9D                     	;# 
  2153  0D9D                     	;# 
  2154  0D9E                     	;# 
  2155  0D9F                     	;# 
  2156  0DA0                     	;# 
  2157  0DA1                     	;# 
  2158  0DA1                     	;# 
  2159  0DA2                     	;# 
  2160  0DA3                     	;# 
  2161  0DA3                     	;# 
  2162  0DA4                     	;# 
  2163  0DA5                     	;# 
  2164  0DA5                     	;# 
  2165  0DA6                     	;# 
  2166  0DA7                     	;# 
  2167  0DA7                     	;# 
  2168  0DA8                     	;# 
  2169  0DA9                     	;# 
  2170  0DA9                     	;# 
  2171  0DAA                     	;# 
  2172  0DAB                     	;# 
  2173  0DAC                     	;# 
  2174  0DAC                     	;# 
  2175  0DAD                     	;# 
  2176  0DAD                     	;# 
  2177  0DAE                     	;# 
  2178  0DAF                     	;# 
  2179  0DB0                     	;# 
  2180  0DB1                     	;# 
  2181  0DB1                     	;# 
  2182  0DB2                     	;# 
  2183  0DB3                     	;# 
  2184  0DB3                     	;# 
  2185  0DB4                     	;# 
  2186  0DB5                     	;# 
  2187  0DB5                     	;# 
  2188  0DB6                     	;# 
  2189  0DB7                     	;# 
  2190  0DB7                     	;# 
  2191  0DB8                     	;# 
  2192  0DB9                     	;# 
  2193  0DB9                     	;# 
  2194  0DBA                     	;# 
  2195  0DBB                     	;# 
  2196  0DBC                     	;# 
  2197  0DBC                     	;# 
  2198  0DBD                     	;# 
  2199  0DBD                     	;# 
  2200  0DBE                     	;# 
  2201  0DBF                     	;# 
  2202  0DC0                     	;# 
  2203  0E0C                     	;# 
  2204  0E0D                     	;# 
  2205  0E0E                     	;# 
  2206  0E0F                     	;# 
  2207  0E10                     	;# 
  2208  0E11                     	;# 
  2209  0E12                     	;# 
  2210  0E13                     	;# 
  2211  0E14                     	;# 
  2212  0E15                     	;# 
  2213  0E15                     	;# 
  2214  0E15                     	;# 
  2215  0E16                     	;# 
  2216  0E16                     	;# 
  2217  0E16                     	;# 
  2218  0E17                     	;# 
  2219  0E17                     	;# 
  2220  0E17                     	;# 
  2221  0E18                     	;# 
  2222  0E18                     	;# 
  2223  0E18                     	;# 
  2224  0E19                     	;# 
  2225  0E1A                     	;# 
  2226  0E1B                     	;# 
  2227  0E1D                     	;# 
  2228  0E1E                     	;# 
  2229  0E1F                     	;# 
  2230  0E21                     	;# 
  2231  0E22                     	;# 
  2232  0E23                     	;# 
  2233  0E24                     	;# 
  2234  0E25                     	;# 
  2235  0E26                     	;# 
  2236  0E27                     	;# 
  2237  0E28                     	;# 
  2238  0E29                     	;# 
  2239  0E2D                     	;# 
  2240  0E2E                     	;# 
  2241  0E2F                     	;# 
  2242  0E30                     	;# 
  2243  0E31                     	;# 
  2244  0E32                     	;# 
  2245  0E35                     	;# 
  2246  0E36                     	;# 
  2247  0E37                     	;# 
  2248  0E38                     	;# 
  2249  0E39                     	;# 
  2250  0E3A                     	;# 
  2251  0E3B                     	;# 
  2252  0E3C                     	;# 
  2253  0E3D                     	;# 
  2254  0E3E                     	;# 
  2255  0E90                     	;# 
  2256  0E91                     	;# 
  2257  0E92                     	;# 
  2258  0E93                     	;# 
  2259  0E94                     	;# 
  2260  0E95                     	;# 
  2261  0E96                     	;# 
  2262  0E97                     	;# 
  2263  0E98                     	;# 
  2264  0E99                     	;# 
  2265  0E9A                     	;# 
  2266  0E9B                     	;# 
  2267  0E9C                     	;# 
  2268  0E9D                     	;# 
  2269  0E9E                     	;# 
  2270  0E9F                     	;# 
  2271  0EA0                     	;# 
  2272  0EA1                     	;# 
  2273  0EA2                     	;# 
  2274  0EA3                     	;# 
  2275  0EA4                     	;# 
  2276  0EA5                     	;# 
  2277  0EA6                     	;# 
  2278  0EA7                     	;# 
  2279  0F0F                     	;# 
  2280  0F10                     	;# 
  2281  0F11                     	;# 
  2282  0F12                     	;# 
  2283  0F13                     	;# 
  2284  0F14                     	;# 
  2285  0F15                     	;# 
  2286  0F16                     	;# 
  2287  0F17                     	;# 
  2288  0F18                     	;# 
  2289  0F19                     	;# 
  2290  0F1A                     	;# 
  2291  0F1B                     	;# 
  2292  0F1C                     	;# 
  2293  0F1D                     	;# 
  2294  0F1E                     	;# 
  2295  0F1F                     	;# 
  2296  0F20                     	;# 
  2297  0F21                     	;# 
  2298  0F22                     	;# 
  2299  0F23                     	;# 
  2300  0F24                     	;# 
  2301  0F25                     	;# 
  2302  0F26                     	;# 
  2303  0F27                     	;# 
  2304  0F28                     	;# 
  2305  0F29                     	;# 
  2306  0F2A                     	;# 
  2307  0F2B                     	;# 
  2308  0F2C                     	;# 
  2309  0F2D                     	;# 
  2310  0F2E                     	;# 
  2311  0F2F                     	;# 
  2312  0F30                     	;# 
  2313  0F31                     	;# 
  2314  0F32                     	;# 
  2315  0F33                     	;# 
  2316  0F34                     	;# 
  2317  0F35                     	;# 
  2318  0F36                     	;# 
  2319  0F37                     	;# 
  2320  0FE4                     	;# 
  2321  0FE5                     	;# 
  2322  0FE6                     	;# 
  2323  0FE7                     	;# 
  2324  0FE8                     	;# 
  2325  0FE9                     	;# 
  2326  0FEA                     	;# 
  2327  0FEB                     	;# 
  2328  0FED                     	;# 
  2329  0FEE                     	;# 
  2330  0FEF                     	;# 
  2331  0000                     	;# 
  2332  0001                     	;# 
  2333  0002                     	;# 
  2334  0003                     	;# 
  2335  0004                     	;# 
  2336  0005                     	;# 
  2337  0006                     	;# 
  2338  0007                     	;# 
  2339  0008                     	;# 
  2340  0009                     	;# 
  2341  000A                     	;# 
  2342  000B                     	;# 
  2343  000C                     	;# 
  2344  000D                     	;# 
  2345  000E                     	;# 
  2346  0010                     	;# 
  2347  0011                     	;# 
  2348  0012                     	;# 
  2349  0013                     	;# 
  2350  0014                     	;# 
  2351  0015                     	;# 
  2352  0016                     	;# 
  2353  0017                     	;# 
  2354  0018                     	;# 
  2355  0018                     	;# 
  2356  0019                     	;# 
  2357  001A                     	;# 
  2358  001B                     	;# 
  2359  001C                     	;# 
  2360  001C                     	;# 
  2361  001D                     	;# 
  2362  001E                     	;# 
  2363  001F                     	;# 
  2364  008C                     	;# 
  2365  008D                     	;# 
  2366  008E                     	;# 
  2367  0090                     	;# 
  2368  0091                     	;# 
  2369  0092                     	;# 
  2370  0093                     	;# 
  2371  0094                     	;# 
  2372  0095                     	;# 
  2373  0096                     	;# 
  2374  0097                     	;# 
  2375  0098                     	;# 
  2376  0099                     	;# 
  2377  009A                     	;# 
  2378  009B                     	;# 
  2379  009C                     	;# 
  2380  009D                     	;# 
  2381  009E                     	;# 
  2382  009F                     	;# 
  2383  010C                     	;# 
  2384  010D                     	;# 
  2385  010E                     	;# 
  2386  0111                     	;# 
  2387  0112                     	;# 
  2388  0113                     	;# 
  2389  0114                     	;# 
  2390  0115                     	;# 
  2391  0116                     	;# 
  2392  0117                     	;# 
  2393  0118                     	;# 
  2394  0119                     	;# 
  2395  011A                     	;# 
  2396  011B                     	;# 
  2397  011C                     	;# 
  2398  011D                     	;# 
  2399  018C                     	;# 
  2400  018D                     	;# 
  2401  018E                     	;# 
  2402  0191                     	;# 
  2403  0191                     	;# 
  2404  0192                     	;# 
  2405  0193                     	;# 
  2406  0193                     	;# 
  2407  0194                     	;# 
  2408  0195                     	;# 
  2409  0196                     	;# 
  2410  0197                     	;# 
  2411  0199                     	;# 
  2412  0199                     	;# 
  2413  0199                     	;# 
  2414  019A                     	;# 
  2415  019A                     	;# 
  2416  019A                     	;# 
  2417  019B                     	;# 
  2418  019B                     	;# 
  2419  019B                     	;# 
  2420  019B                     	;# 
  2421  019B                     	;# 
  2422  019C                     	;# 
  2423  019C                     	;# 
  2424  019C                     	;# 
  2425  019D                     	;# 
  2426  019D                     	;# 
  2427  019D                     	;# 
  2428  019E                     	;# 
  2429  019E                     	;# 
  2430  019E                     	;# 
  2431  019F                     	;# 
  2432  019F                     	;# 
  2433  019F                     	;# 
  2434  019F                     	;# 
  2435  019F                     	;# 
  2436  020C                     	;# 
  2437  020D                     	;# 
  2438  020E                     	;# 
  2439  0210                     	;# 
  2440  0211                     	;# 
  2441  0211                     	;# 
  2442  0212                     	;# 
  2443  0212                     	;# 
  2444  0213                     	;# 
  2445  0213                     	;# 
  2446  0214                     	;# 
  2447  0214                     	;# 
  2448  0215                     	;# 
  2449  0215                     	;# 
  2450  0215                     	;# 
  2451  0215                     	;# 
  2452  0216                     	;# 
  2453  0216                     	;# 
  2454  0217                     	;# 
  2455  0217                     	;# 
  2456  021B                     	;# 
  2457  021C                     	;# 
  2458  021D                     	;# 
  2459  021E                     	;# 
  2460  021F                     	;# 
  2461  028C                     	;# 
  2462  028D                     	;# 
  2463  028E                     	;# 
  2464  0291                     	;# 
  2465  0291                     	;# 
  2466  0292                     	;# 
  2467  0293                     	;# 
  2468  0294                     	;# 
  2469  0295                     	;# 
  2470  0295                     	;# 
  2471  0296                     	;# 
  2472  0297                     	;# 
  2473  0298                     	;# 
  2474  0299                     	;# 
  2475  0299                     	;# 
  2476  029A                     	;# 
  2477  029B                     	;# 
  2478  029C                     	;# 
  2479  029E                     	;# 
  2480  029F                     	;# 
  2481  030C                     	;# 
  2482  030D                     	;# 
  2483  030E                     	;# 
  2484  0315                     	;# 
  2485  0316                     	;# 
  2486  0317                     	;# 
  2487  0318                     	;# 
  2488  0319                     	;# 
  2489  031B                     	;# 
  2490  031C                     	;# 
  2491  031D                     	;# 
  2492  031E                     	;# 
  2493  031F                     	;# 
  2494  038C                     	;# 
  2495  038D                     	;# 
  2496  038E                     	;# 
  2497  0390                     	;# 
  2498  0391                     	;# 
  2499  0392                     	;# 
  2500  0393                     	;# 
  2501  0394                     	;# 
  2502  0395                     	;# 
  2503  0396                     	;# 
  2504  0397                     	;# 
  2505  0398                     	;# 
  2506  0399                     	;# 
  2507  039D                     	;# 
  2508  039E                     	;# 
  2509  039F                     	;# 
  2510  040D                     	;# 
  2511  040F                     	;# 
  2512  040F                     	;# 
  2513  0410                     	;# 
  2514  0411                     	;# 
  2515  0412                     	;# 
  2516  0413                     	;# 
  2517  0413                     	;# 
  2518  0414                     	;# 
  2519  0414                     	;# 
  2520  0415                     	;# 
  2521  0416                     	;# 
  2522  0417                     	;# 
  2523  0418                     	;# 
  2524  041A                     	;# 
  2525  041A                     	;# 
  2526  041B                     	;# 
  2527  041B                     	;# 
  2528  041C                     	;# 
  2529  041D                     	;# 
  2530  041E                     	;# 
  2531  041F                     	;# 
  2532  048E                     	;# 
  2533  048E                     	;# 
  2534  048F                     	;# 
  2535  0490                     	;# 
  2536  0491                     	;# 
  2537  0492                     	;# 
  2538  0493                     	;# 
  2539  0493                     	;# 
  2540  0494                     	;# 
  2541  0494                     	;# 
  2542  0495                     	;# 
  2543  0496                     	;# 
  2544  0497                     	;# 
  2545  0498                     	;# 
  2546  049A                     	;# 
  2547  049A                     	;# 
  2548  049B                     	;# 
  2549  049B                     	;# 
  2550  049C                     	;# 
  2551  049D                     	;# 
  2552  049E                     	;# 
  2553  049F                     	;# 
  2554  050F                     	;# 
  2555  0510                     	;# 
  2556  0511                     	;# 
  2557  0512                     	;# 
  2558  0513                     	;# 
  2559  0514                     	;# 
  2560  0515                     	;# 
  2561  0516                     	;# 
  2562  0517                     	;# 
  2563  0518                     	;# 
  2564  0519                     	;# 
  2565  051A                     	;# 
  2566  058D                     	;# 
  2567  058E                     	;# 
  2568  058F                     	;# 
  2569  058F                     	;# 
  2570  058F                     	;# 
  2571  0590                     	;# 
  2572  0590                     	;# 
  2573  0591                     	;# 
  2574  0592                     	;# 
  2575  0592                     	;# 
  2576  0592                     	;# 
  2577  0593                     	;# 
  2578  0593                     	;# 
  2579  0594                     	;# 
  2580  0595                     	;# 
  2581  0595                     	;# 
  2582  0596                     	;# 
  2583  0597                     	;# 
  2584  0597                     	;# 
  2585  0598                     	;# 
  2586  0599                     	;# 
  2587  0599                     	;# 
  2588  0599                     	;# 
  2589  059A                     	;# 
  2590  059A                     	;# 
  2591  059E                     	;# 
  2592  059F                     	;# 
  2593  059F                     	;# 
  2594  0614                     	;# 
  2595  0614                     	;# 
  2596  0615                     	;# 
  2597  0616                     	;# 
  2598  0617                     	;# 
  2599  0617                     	;# 
  2600  0618                     	;# 
  2601  0619                     	;# 
  2602  061A                     	;# 
  2603  061A                     	;# 
  2604  061B                     	;# 
  2605  061C                     	;# 
  2606  068D                     	;# 
  2607  068E                     	;# 
  2608  068F                     	;# 
  2609  0690                     	;# 
  2610  0691                     	;# 
  2611  0692                     	;# 
  2612  0693                     	;# 
  2613  0694                     	;# 
  2614  0695                     	;# 
  2615  0696                     	;# 
  2616  0697                     	;# 
  2617  0698                     	;# 
  2618  0699                     	;# 
  2619  069A                     	;# 
  2620  069B                     	;# 
  2621  069C                     	;# 
  2622  069D                     	;# 
  2623  069E                     	;# 
  2624  069F                     	;# 
  2625  070D                     	;# 
  2626  070E                     	;# 
  2627  070F                     	;# 
  2628  0710                     	;# 
  2629  0711                     	;# 
  2630  0712                     	;# 
  2631  0713                     	;# 
  2632  0714                     	;# 
  2633  0715                     	;# 
  2634  0716                     	;# 
  2635  0717                     	;# 
  2636  0718                     	;# 
  2637  0719                     	;# 
  2638  071A                     	;# 
  2639  071B                     	;# 
  2640  071C                     	;# 
  2641  071D                     	;# 
  2642  071E                     	;# 
  2643  071F                     	;# 
  2644  078E                     	;# 
  2645  078F                     	;# 
  2646  0790                     	;# 
  2647  0791                     	;# 
  2648  0792                     	;# 
  2649  0793                     	;# 
  2650  0794                     	;# 
  2651  0795                     	;# 
  2652  0796                     	;# 
  2653  0797                     	;# 
  2654  0798                     	;# 
  2655  0799                     	;# 
  2656  079A                     	;# 
  2657  079B                     	;# 
  2658  079C                     	;# 
  2659  079D                     	;# 
  2660  079E                     	;# 
  2661  079F                     	;# 
  2662  080D                     	;# 
  2663  080E                     	;# 
  2664  080F                     	;# 
  2665  0810                     	;# 
  2666  0811                     	;# 
  2667  0812                     	;# 
  2668  0813                     	;# 
  2669  0814                     	;# 
  2670  0815                     	;# 
  2671  0816                     	;# 
  2672  0817                     	;# 
  2673  0818                     	;# 
  2674  0819                     	;# 
  2675  081A                     	;# 
  2676  081B                     	;# 
  2677  081C                     	;# 
  2678  081D                     	;# 
  2679  081E                     	;# 
  2680  081F                     	;# 
  2681  090C                     	;# 
  2682  090D                     	;# 
  2683  090E                     	;# 
  2684  090F                     	;# 
  2685  0910                     	;# 
  2686  0911                     	;# 
  2687  0912                     	;# 
  2688  0913                     	;# 
  2689  0914                     	;# 
  2690  0915                     	;# 
  2691  0916                     	;# 
  2692  0917                     	;# 
  2693  0D8E                     	;# 
  2694  0D8F                     	;# 
  2695  0D90                     	;# 
  2696  0D91                     	;# 
  2697  0D91                     	;# 
  2698  0D92                     	;# 
  2699  0D93                     	;# 
  2700  0D93                     	;# 
  2701  0D94                     	;# 
  2702  0D95                     	;# 
  2703  0D95                     	;# 
  2704  0D96                     	;# 
  2705  0D97                     	;# 
  2706  0D97                     	;# 
  2707  0D98                     	;# 
  2708  0D99                     	;# 
  2709  0D99                     	;# 
  2710  0D9A                     	;# 
  2711  0D9B                     	;# 
  2712  0D9C                     	;# 
  2713  0D9C                     	;# 
  2714  0D9D                     	;# 
  2715  0D9D                     	;# 
  2716  0D9E                     	;# 
  2717  0D9F                     	;# 
  2718  0DA0                     	;# 
  2719  0DA1                     	;# 
  2720  0DA1                     	;# 
  2721  0DA2                     	;# 
  2722  0DA3                     	;# 
  2723  0DA3                     	;# 
  2724  0DA4                     	;# 
  2725  0DA5                     	;# 
  2726  0DA5                     	;# 
  2727  0DA6                     	;# 
  2728  0DA7                     	;# 
  2729  0DA7                     	;# 
  2730  0DA8                     	;# 
  2731  0DA9                     	;# 
  2732  0DA9                     	;# 
  2733  0DAA                     	;# 
  2734  0DAB                     	;# 
  2735  0DAC                     	;# 
  2736  0DAC                     	;# 
  2737  0DAD                     	;# 
  2738  0DAD                     	;# 
  2739  0DAE                     	;# 
  2740  0DAF                     	;# 
  2741  0DB0                     	;# 
  2742  0DB1                     	;# 
  2743  0DB1                     	;# 
  2744  0DB2                     	;# 
  2745  0DB3                     	;# 
  2746  0DB3                     	;# 
  2747  0DB4                     	;# 
  2748  0DB5                     	;# 
  2749  0DB5                     	;# 
  2750  0DB6                     	;# 
  2751  0DB7                     	;# 
  2752  0DB7                     	;# 
  2753  0DB8                     	;# 
  2754  0DB9                     	;# 
  2755  0DB9                     	;# 
  2756  0DBA                     	;# 
  2757  0DBB                     	;# 
  2758  0DBC                     	;# 
  2759  0DBC                     	;# 
  2760  0DBD                     	;# 
  2761  0DBD                     	;# 
  2762  0DBE                     	;# 
  2763  0DBF                     	;# 
  2764  0DC0                     	;# 
  2765  0E0C                     	;# 
  2766  0E0D                     	;# 
  2767  0E0E                     	;# 
  2768  0E0F                     	;# 
  2769  0E10                     	;# 
  2770  0E11                     	;# 
  2771  0E12                     	;# 
  2772  0E13                     	;# 
  2773  0E14                     	;# 
  2774  0E15                     	;# 
  2775  0E15                     	;# 
  2776  0E15                     	;# 
  2777  0E16                     	;# 
  2778  0E16                     	;# 
  2779  0E16                     	;# 
  2780  0E17                     	;# 
  2781  0E17                     	;# 
  2782  0E17                     	;# 
  2783  0E18                     	;# 
  2784  0E18                     	;# 
  2785  0E18                     	;# 
  2786  0E19                     	;# 
  2787  0E1A                     	;# 
  2788  0E1B                     	;# 
  2789  0E1D                     	;# 
  2790  0E1E                     	;# 
  2791  0E1F                     	;# 
  2792  0E21                     	;# 
  2793  0E22                     	;# 
  2794  0E23                     	;# 
  2795  0E24                     	;# 
  2796  0E25                     	;# 
  2797  0E26                     	;# 
  2798  0E27                     	;# 
  2799  0E28                     	;# 
  2800  0E29                     	;# 
  2801  0E2D                     	;# 
  2802  0E2E                     	;# 
  2803  0E2F                     	;# 
  2804  0E30                     	;# 
  2805  0E31                     	;# 
  2806  0E32                     	;# 
  2807  0E35                     	;# 
  2808  0E36                     	;# 
  2809  0E37                     	;# 
  2810  0E38                     	;# 
  2811  0E39                     	;# 
  2812  0E3A                     	;# 
  2813  0E3B                     	;# 
  2814  0E3C                     	;# 
  2815  0E3D                     	;# 
  2816  0E3E                     	;# 
  2817  0E90                     	;# 
  2818  0E91                     	;# 
  2819  0E92                     	;# 
  2820  0E93                     	;# 
  2821  0E94                     	;# 
  2822  0E95                     	;# 
  2823  0E96                     	;# 
  2824  0E97                     	;# 
  2825  0E98                     	;# 
  2826  0E99                     	;# 
  2827  0E9A                     	;# 
  2828  0E9B                     	;# 
  2829  0E9C                     	;# 
  2830  0E9D                     	;# 
  2831  0E9E                     	;# 
  2832  0E9F                     	;# 
  2833  0EA0                     	;# 
  2834  0EA1                     	;# 
  2835  0EA2                     	;# 
  2836  0EA3                     	;# 
  2837  0EA4                     	;# 
  2838  0EA5                     	;# 
  2839  0EA6                     	;# 
  2840  0EA7                     	;# 
  2841  0F0F                     	;# 
  2842  0F10                     	;# 
  2843  0F11                     	;# 
  2844  0F12                     	;# 
  2845  0F13                     	;# 
  2846  0F14                     	;# 
  2847  0F15                     	;# 
  2848  0F16                     	;# 
  2849  0F17                     	;# 
  2850  0F18                     	;# 
  2851  0F19                     	;# 
  2852  0F1A                     	;# 
  2853  0F1B                     	;# 
  2854  0F1C                     	;# 
  2855  0F1D                     	;# 
  2856  0F1E                     	;# 
  2857  0F1F                     	;# 
  2858  0F20                     	;# 
  2859  0F21                     	;# 
  2860  0F22                     	;# 
  2861  0F23                     	;# 
  2862  0F24                     	;# 
  2863  0F25                     	;# 
  2864  0F26                     	;# 
  2865  0F27                     	;# 
  2866  0F28                     	;# 
  2867  0F29                     	;# 
  2868  0F2A                     	;# 
  2869  0F2B                     	;# 
  2870  0F2C                     	;# 
  2871  0F2D                     	;# 
  2872  0F2E                     	;# 
  2873  0F2F                     	;# 
  2874  0F30                     	;# 
  2875  0F31                     	;# 
  2876  0F32                     	;# 
  2877  0F33                     	;# 
  2878  0F34                     	;# 
  2879  0F35                     	;# 
  2880  0F36                     	;# 
  2881  0F37                     	;# 
  2882  0FE4                     	;# 
  2883  0FE5                     	;# 
  2884  0FE6                     	;# 
  2885  0FE7                     	;# 
  2886  0FE8                     	;# 
  2887  0FE9                     	;# 
  2888  0FEA                     	;# 
  2889  0FEB                     	;# 
  2890  0FED                     	;# 
  2891  0FEE                     	;# 
  2892  0FEF                     	;# 
  2893  0000                     	;# 
  2894  0001                     	;# 
  2895  0002                     	;# 
  2896  0003                     	;# 
  2897  0004                     	;# 
  2898  0005                     	;# 
  2899  0006                     	;# 
  2900  0007                     	;# 
  2901  0008                     	;# 
  2902  0009                     	;# 
  2903  000A                     	;# 
  2904  000B                     	;# 
  2905  000C                     	;# 
  2906  000D                     	;# 
  2907  000E                     	;# 
  2908  0010                     	;# 
  2909  0011                     	;# 
  2910  0012                     	;# 
  2911  0013                     	;# 
  2912  0014                     	;# 
  2913  0015                     	;# 
  2914  0016                     	;# 
  2915  0017                     	;# 
  2916  0018                     	;# 
  2917  0018                     	;# 
  2918  0019                     	;# 
  2919  001A                     	;# 
  2920  001B                     	;# 
  2921  001C                     	;# 
  2922  001C                     	;# 
  2923  001D                     	;# 
  2924  001E                     	;# 
  2925  001F                     	;# 
  2926  008C                     	;# 
  2927  008D                     	;# 
  2928  008E                     	;# 
  2929  0090                     	;# 
  2930  0091                     	;# 
  2931  0092                     	;# 
  2932  0093                     	;# 
  2933  0094                     	;# 
  2934  0095                     	;# 
  2935  0096                     	;# 
  2936  0097                     	;# 
  2937  0098                     	;# 
  2938  0099                     	;# 
  2939  009A                     	;# 
  2940  009B                     	;# 
  2941  009C                     	;# 
  2942  009D                     	;# 
  2943  009E                     	;# 
  2944  009F                     	;# 
  2945  010C                     	;# 
  2946  010D                     	;# 
  2947  010E                     	;# 
  2948  0111                     	;# 
  2949  0112                     	;# 
  2950  0113                     	;# 
  2951  0114                     	;# 
  2952  0115                     	;# 
  2953  0116                     	;# 
  2954  0117                     	;# 
  2955  0118                     	;# 
  2956  0119                     	;# 
  2957  011A                     	;# 
  2958  011B                     	;# 
  2959  011C                     	;# 
  2960  011D                     	;# 
  2961  018C                     	;# 
  2962  018D                     	;# 
  2963  018E                     	;# 
  2964  0191                     	;# 
  2965  0191                     	;# 
  2966  0192                     	;# 
  2967  0193                     	;# 
  2968  0193                     	;# 
  2969  0194                     	;# 
  2970  0195                     	;# 
  2971  0196                     	;# 
  2972  0197                     	;# 
  2973  0199                     	;# 
  2974  0199                     	;# 
  2975  0199                     	;# 
  2976  019A                     	;# 
  2977  019A                     	;# 
  2978  019A                     	;# 
  2979  019B                     	;# 
  2980  019B                     	;# 
  2981  019B                     	;# 
  2982  019B                     	;# 
  2983  019B                     	;# 
  2984  019C                     	;# 
  2985  019C                     	;# 
  2986  019C                     	;# 
  2987  019D                     	;# 
  2988  019D                     	;# 
  2989  019D                     	;# 
  2990  019E                     	;# 
  2991  019E                     	;# 
  2992  019E                     	;# 
  2993  019F                     	;# 
  2994  019F                     	;# 
  2995  019F                     	;# 
  2996  019F                     	;# 
  2997  019F                     	;# 
  2998  020C                     	;# 
  2999  020D                     	;# 
  3000  020E                     	;# 
  3001  0210                     	;# 
  3002  0211                     	;# 
  3003  0211                     	;# 
  3004  0212                     	;# 
  3005  0212                     	;# 
  3006  0213                     	;# 
  3007  0213                     	;# 
  3008  0214                     	;# 
  3009  0214                     	;# 
  3010  0215                     	;# 
  3011  0215                     	;# 
  3012  0215                     	;# 
  3013  0215                     	;# 
  3014  0216                     	;# 
  3015  0216                     	;# 
  3016  0217                     	;# 
  3017  0217                     	;# 
  3018  021B                     	;# 
  3019  021C                     	;# 
  3020  021D                     	;# 
  3021  021E                     	;# 
  3022  021F                     	;# 
  3023  028C                     	;# 
  3024  028D                     	;# 
  3025  028E                     	;# 
  3026  0291                     	;# 
  3027  0291                     	;# 
  3028  0292                     	;# 
  3029  0293                     	;# 
  3030  0294                     	;# 
  3031  0295                     	;# 
  3032  0295                     	;# 
  3033  0296                     	;# 
  3034  0297                     	;# 
  3035  0298                     	;# 
  3036  0299                     	;# 
  3037  0299                     	;# 
  3038  029A                     	;# 
  3039  029B                     	;# 
  3040  029C                     	;# 
  3041  029E                     	;# 
  3042  029F                     	;# 
  3043  030C                     	;# 
  3044  030D                     	;# 
  3045  030E                     	;# 
  3046  0315                     	;# 
  3047  0316                     	;# 
  3048  0317                     	;# 
  3049  0318                     	;# 
  3050  0319                     	;# 
  3051  031B                     	;# 
  3052  031C                     	;# 
  3053  031D                     	;# 
  3054  031E                     	;# 
  3055  031F                     	;# 
  3056  038C                     	;# 
  3057  038D                     	;# 
  3058  038E                     	;# 
  3059  0390                     	;# 
  3060  0391                     	;# 
  3061  0392                     	;# 
  3062  0393                     	;# 
  3063  0394                     	;# 
  3064  0395                     	;# 
  3065  0396                     	;# 
  3066  0397                     	;# 
  3067  0398                     	;# 
  3068  0399                     	;# 
  3069  039D                     	;# 
  3070  039E                     	;# 
  3071  039F                     	;# 
  3072  040D                     	;# 
  3073  040F                     	;# 
  3074  040F                     	;# 
  3075  0410                     	;# 
  3076  0411                     	;# 
  3077  0412                     	;# 
  3078  0413                     	;# 
  3079  0413                     	;# 
  3080  0414                     	;# 
  3081  0414                     	;# 
  3082  0415                     	;# 
  3083  0416                     	;# 
  3084  0417                     	;# 
  3085  0418                     	;# 
  3086  041A                     	;# 
  3087  041A                     	;# 
  3088  041B                     	;# 
  3089  041B                     	;# 
  3090  041C                     	;# 
  3091  041D                     	;# 
  3092  041E                     	;# 
  3093  041F                     	;# 
  3094  048E                     	;# 
  3095  048E                     	;# 
  3096  048F                     	;# 
  3097  0490                     	;# 
  3098  0491                     	;# 
  3099  0492                     	;# 
  3100  0493                     	;# 
  3101  0493                     	;# 
  3102  0494                     	;# 
  3103  0494                     	;# 
  3104  0495                     	;# 
  3105  0496                     	;# 
  3106  0497                     	;# 
  3107  0498                     	;# 
  3108  049A                     	;# 
  3109  049A                     	;# 
  3110  049B                     	;# 
  3111  049B                     	;# 
  3112  049C                     	;# 
  3113  049D                     	;# 
  3114  049E                     	;# 
  3115  049F                     	;# 
  3116  050F                     	;# 
  3117  0510                     	;# 
  3118  0511                     	;# 
  3119  0512                     	;# 
  3120  0513                     	;# 
  3121  0514                     	;# 
  3122  0515                     	;# 
  3123  0516                     	;# 
  3124  0517                     	;# 
  3125  0518                     	;# 
  3126  0519                     	;# 
  3127  051A                     	;# 
  3128  058D                     	;# 
  3129  058E                     	;# 
  3130  058F                     	;# 
  3131  058F                     	;# 
  3132  058F                     	;# 
  3133  0590                     	;# 
  3134  0590                     	;# 
  3135  0591                     	;# 
  3136  0592                     	;# 
  3137  0592                     	;# 
  3138  0592                     	;# 
  3139  0593                     	;# 
  3140  0593                     	;# 
  3141  0594                     	;# 
  3142  0595                     	;# 
  3143  0595                     	;# 
  3144  0596                     	;# 
  3145  0597                     	;# 
  3146  0597                     	;# 
  3147  0598                     	;# 
  3148  0599                     	;# 
  3149  0599                     	;# 
  3150  0599                     	;# 
  3151  059A                     	;# 
  3152  059A                     	;# 
  3153  059E                     	;# 
  3154  059F                     	;# 
  3155  059F                     	;# 
  3156  0614                     	;# 
  3157  0614                     	;# 
  3158  0615                     	;# 
  3159  0616                     	;# 
  3160  0617                     	;# 
  3161  0617                     	;# 
  3162  0618                     	;# 
  3163  0619                     	;# 
  3164  061A                     	;# 
  3165  061A                     	;# 
  3166  061B                     	;# 
  3167  061C                     	;# 
  3168  068D                     	;# 
  3169  068E                     	;# 
  3170  068F                     	;# 
  3171  0690                     	;# 
  3172  0691                     	;# 
  3173  0692                     	;# 
  3174  0693                     	;# 
  3175  0694                     	;# 
  3176  0695                     	;# 
  3177  0696                     	;# 
  3178  0697                     	;# 
  3179  0698                     	;# 
  3180  0699                     	;# 
  3181  069A                     	;# 
  3182  069B                     	;# 
  3183  069C                     	;# 
  3184  069D                     	;# 
  3185  069E                     	;# 
  3186  069F                     	;# 
  3187  070D                     	;# 
  3188  070E                     	;# 
  3189  070F                     	;# 
  3190  0710                     	;# 
  3191  0711                     	;# 
  3192  0712                     	;# 
  3193  0713                     	;# 
  3194  0714                     	;# 
  3195  0715                     	;# 
  3196  0716                     	;# 
  3197  0717                     	;# 
  3198  0718                     	;# 
  3199  0719                     	;# 
  3200  071A                     	;# 
  3201  071B                     	;# 
  3202  071C                     	;# 
  3203  071D                     	;# 
  3204  071E                     	;# 
  3205  071F                     	;# 
  3206  078E                     	;# 
  3207  078F                     	;# 
  3208  0790                     	;# 
  3209  0791                     	;# 
  3210  0792                     	;# 
  3211  0793                     	;# 
  3212  0794                     	;# 
  3213  0795                     	;# 
  3214  0796                     	;# 
  3215  0797                     	;# 
  3216  0798                     	;# 
  3217  0799                     	;# 
  3218  079A                     	;# 
  3219  079B                     	;# 
  3220  079C                     	;# 
  3221  079D                     	;# 
  3222  079E                     	;# 
  3223  079F                     	;# 
  3224  080D                     	;# 
  3225  080E                     	;# 
  3226  080F                     	;# 
  3227  0810                     	;# 
  3228  0811                     	;# 
  3229  0812                     	;# 
  3230  0813                     	;# 
  3231  0814                     	;# 
  3232  0815                     	;# 
  3233  0816                     	;# 
  3234  0817                     	;# 
  3235  0818                     	;# 
  3236  0819                     	;# 
  3237  081A                     	;# 
  3238  081B                     	;# 
  3239  081C                     	;# 
  3240  081D                     	;# 
  3241  081E                     	;# 
  3242  081F                     	;# 
  3243  090C                     	;# 
  3244  090D                     	;# 
  3245  090E                     	;# 
  3246  090F                     	;# 
  3247  0910                     	;# 
  3248  0911                     	;# 
  3249  0912                     	;# 
  3250  0913                     	;# 
  3251  0914                     	;# 
  3252  0915                     	;# 
  3253  0916                     	;# 
  3254  0917                     	;# 
  3255  0D8E                     	;# 
  3256  0D8F                     	;# 
  3257  0D90                     	;# 
  3258  0D91                     	;# 
  3259  0D91                     	;# 
  3260  0D92                     	;# 
  3261  0D93                     	;# 
  3262  0D93                     	;# 
  3263  0D94                     	;# 
  3264  0D95                     	;# 
  3265  0D95                     	;# 
  3266  0D96                     	;# 
  3267  0D97                     	;# 
  3268  0D97                     	;# 
  3269  0D98                     	;# 
  3270  0D99                     	;# 
  3271  0D99                     	;# 
  3272  0D9A                     	;# 
  3273  0D9B                     	;# 
  3274  0D9C                     	;# 
  3275  0D9C                     	;# 
  3276  0D9D                     	;# 
  3277  0D9D                     	;# 
  3278  0D9E                     	;# 
  3279  0D9F                     	;# 
  3280  0DA0                     	;# 
  3281  0DA1                     	;# 
  3282  0DA1                     	;# 
  3283  0DA2                     	;# 
  3284  0DA3                     	;# 
  3285  0DA3                     	;# 
  3286  0DA4                     	;# 
  3287  0DA5                     	;# 
  3288  0DA5                     	;# 
  3289  0DA6                     	;# 
  3290  0DA7                     	;# 
  3291  0DA7                     	;# 
  3292  0DA8                     	;# 
  3293  0DA9                     	;# 
  3294  0DA9                     	;# 
  3295  0DAA                     	;# 
  3296  0DAB                     	;# 
  3297  0DAC                     	;# 
  3298  0DAC                     	;# 
  3299  0DAD                     	;# 
  3300  0DAD                     	;# 
  3301  0DAE                     	;# 
  3302  0DAF                     	;# 
  3303  0DB0                     	;# 
  3304  0DB1                     	;# 
  3305  0DB1                     	;# 
  3306  0DB2                     	;# 
  3307  0DB3                     	;# 
  3308  0DB3                     	;# 
  3309  0DB4                     	;# 
  3310  0DB5                     	;# 
  3311  0DB5                     	;# 
  3312  0DB6                     	;# 
  3313  0DB7                     	;# 
  3314  0DB7                     	;# 
  3315  0DB8                     	;# 
  3316  0DB9                     	;# 
  3317  0DB9                     	;# 
  3318  0DBA                     	;# 
  3319  0DBB                     	;# 
  3320  0DBC                     	;# 
  3321  0DBC                     	;# 
  3322  0DBD                     	;# 
  3323  0DBD                     	;# 
  3324  0DBE                     	;# 
  3325  0DBF                     	;# 
  3326  0DC0                     	;# 
  3327  0E0C                     	;# 
  3328  0E0D                     	;# 
  3329  0E0E                     	;# 
  3330  0E0F                     	;# 
  3331  0E10                     	;# 
  3332  0E11                     	;# 
  3333  0E12                     	;# 
  3334  0E13                     	;# 
  3335  0E14                     	;# 
  3336  0E15                     	;# 
  3337  0E15                     	;# 
  3338  0E15                     	;# 
  3339  0E16                     	;# 
  3340  0E16                     	;# 
  3341  0E16                     	;# 
  3342  0E17                     	;# 
  3343  0E17                     	;# 
  3344  0E17                     	;# 
  3345  0E18                     	;# 
  3346  0E18                     	;# 
  3347  0E18                     	;# 
  3348  0E19                     	;# 
  3349  0E1A                     	;# 
  3350  0E1B                     	;# 
  3351  0E1D                     	;# 
  3352  0E1E                     	;# 
  3353  0E1F                     	;# 
  3354  0E21                     	;# 
  3355  0E22                     	;# 
  3356  0E23                     	;# 
  3357  0E24                     	;# 
  3358  0E25                     	;# 
  3359  0E26                     	;# 
  3360  0E27                     	;# 
  3361  0E28                     	;# 
  3362  0E29                     	;# 
  3363  0E2D                     	;# 
  3364  0E2E                     	;# 
  3365  0E2F                     	;# 
  3366  0E30                     	;# 
  3367  0E31                     	;# 
  3368  0E32                     	;# 
  3369  0E35                     	;# 
  3370  0E36                     	;# 
  3371  0E37                     	;# 
  3372  0E38                     	;# 
  3373  0E39                     	;# 
  3374  0E3A                     	;# 
  3375  0E3B                     	;# 
  3376  0E3C                     	;# 
  3377  0E3D                     	;# 
  3378  0E3E                     	;# 
  3379  0E90                     	;# 
  3380  0E91                     	;# 
  3381  0E92                     	;# 
  3382  0E93                     	;# 
  3383  0E94                     	;# 
  3384  0E95                     	;# 
  3385  0E96                     	;# 
  3386  0E97                     	;# 
  3387  0E98                     	;# 
  3388  0E99                     	;# 
  3389  0E9A                     	;# 
  3390  0E9B                     	;# 
  3391  0E9C                     	;# 
  3392  0E9D                     	;# 
  3393  0E9E                     	;# 
  3394  0E9F                     	;# 
  3395  0EA0                     	;# 
  3396  0EA1                     	;# 
  3397  0EA2                     	;# 
  3398  0EA3                     	;# 
  3399  0EA4                     	;# 
  3400  0EA5                     	;# 
  3401  0EA6                     	;# 
  3402  0EA7                     	;# 
  3403  0F0F                     	;# 
  3404  0F10                     	;# 
  3405  0F11                     	;# 
  3406  0F12                     	;# 
  3407  0F13                     	;# 
  3408  0F14                     	;# 
  3409  0F15                     	;# 
  3410  0F16                     	;# 
  3411  0F17                     	;# 
  3412  0F18                     	;# 
  3413  0F19                     	;# 
  3414  0F1A                     	;# 
  3415  0F1B                     	;# 
  3416  0F1C                     	;# 
  3417  0F1D                     	;# 
  3418  0F1E                     	;# 
  3419  0F1F                     	;# 
  3420  0F20                     	;# 
  3421  0F21                     	;# 
  3422  0F22                     	;# 
  3423  0F23                     	;# 
  3424  0F24                     	;# 
  3425  0F25                     	;# 
  3426  0F26                     	;# 
  3427  0F27                     	;# 
  3428  0F28                     	;# 
  3429  0F29                     	;# 
  3430  0F2A                     	;# 
  3431  0F2B                     	;# 
  3432  0F2C                     	;# 
  3433  0F2D                     	;# 
  3434  0F2E                     	;# 
  3435  0F2F                     	;# 
  3436  0F30                     	;# 
  3437  0F31                     	;# 
  3438  0F32                     	;# 
  3439  0F33                     	;# 
  3440  0F34                     	;# 
  3441  0F35                     	;# 
  3442  0F36                     	;# 
  3443  0F37                     	;# 
  3444  0FE4                     	;# 
  3445  0FE5                     	;# 
  3446  0FE6                     	;# 
  3447  0FE7                     	;# 
  3448  0FE8                     	;# 
  3449  0FE9                     	;# 
  3450  0FEA                     	;# 
  3451  0FEB                     	;# 
  3452  0FED                     	;# 
  3453  0FEE                     	;# 
  3454  0FEF                     	;# 
  3455                           
  3456                           	psect	idataCOMMON
  3457  04ED                     __pidataCOMMON:	
  3458                           
  3459                           ;initializer for _pps_pwm_vals
  3460  04ED  3419               	retlw	25
  3461  04EE  341A               	retlw	26
  3462  04EF  341B               	retlw	27
  3463  04F0  341D               	retlw	29
  3464                           
  3465                           	psect	idataBANK0
  3466  04C3                     __pidataBANK0:	
  3467                           
  3468                           ;initializer for _writeable_reg
  3469  04C3  34FF               	retlw	255
  3470  04C4  34FF               	retlw	255
  3471  04C5  34FF               	retlw	255
  3472  04C6  34FF               	retlw	255
  3473  04C7  34FF               	retlw	255
  3474  04C8  34FF               	retlw	255
  3475  04C9  34FF               	retlw	255
  3476  04CA  34FF               	retlw	255
  3477  04CB  34FF               	retlw	255
  3478  04CC  34FF               	retlw	255
  3479                           
  3480                           	psect	stringtext1
  3481  04FB                     __pstringtext1:	
  3482  04FB                     _int_time_delay:	
  3483  04FB  34E8               	retlw	232
  3484  04FC  3403               	retlw	3
  3485  04FD                     __end_of_int_time_delay:	
  3486                           
  3487                           	psect	stringtext2
  3488  04FD                     __pstringtext2:	
  3489  04FD                     _i2c_slave_addr:	
  3490  04FD  3429               	retlw	41
  3491  04FE                     __end_of_i2c_slave_addr:	
  3492  000D                     _PORTBbits	set	13
  3493  001E                     _T3CONbits	set	30
  3494  001C                     _TMR3L	set	28
  3495  001D                     _TMR3H	set	29
  3496  001E                     _T3CON	set	30
  3497  000B                     _INTCON	set	11
  3498  0011                     _PIR1bits	set	17
  3499  0097                     _OPTION_REG	set	151
  3500  009B                     _OSCCON	set	155
  3501  008D                     _TRISB	set	141
  3502  008C                     _TRISA	set	140
  3503  0091                     _PIE1bits	set	145
  3504  008E                     _TRISC	set	142
  3505  010D                     _LATB	set	269
  3506  010C                     _LATA	set	268
  3507  010E                     _LATC	set	270
  3508  018D                     _ANSELB	set	397
  3509  018C                     _ANSELA	set	396
  3510  018E                     _ANSELC	set	398
  3511  0210                     _WPUE	set	528
  3512  020D                     _WPUB	set	525
  3513  020C                     _WPUA	set	524
  3514  0211                     _SSP1BUF	set	529
  3515  0215                     _SSP1CONbits	set	533
  3516  0214                     _SSP1STATbits	set	532
  3517  0217                     _SSP1CON3	set	535
  3518  0216                     _SSP1CON2	set	534
  3519  0215                     _SSP1CON1	set	533
  3520  0212                     _SSP1ADD	set	530
  3521  020E                     _WPUC	set	526
  3522  0495                     _T2CON	set	1173
  3523  0494                     _T2PR	set	1172
  3524  0497                     _T2CLKCON	set	1175
  3525  061C                     _PWM9CON	set	1564
  3526  0619                     _PWM4CON	set	1561
  3527  0616                     _PWM3CON	set	1558
  3528  061A                     _PWM9DCL	set	1562
  3529  061B                     _PWM9DCH	set	1563
  3530  0617                     _PWM4DCL	set	1559
  3531  0618                     _PWM4DCH	set	1560
  3532  0614                     _PWM3DCL	set	1556
  3533  0615                     _PWM3DCH	set	1557
  3534  0D9B                     _PWM5CON	set	3483
  3535  0D91                     _PWM5PHL	set	3473
  3536  0D92                     _PWM5PHH	set	3474
  3537  0D95                     _PWM5PRL	set	3477
  3538  0D96                     _PWM5PRH	set	3478
  3539  0D9F                     _PWM5LDCON	set	3487
  3540  0D9E                     _PWM5CLKCON	set	3486
  3541  0D9F                     _PWM5LDCONbits	set	3487
  3542  0D93                     _PWM5DCL	set	3475
  3543  0D94                     _PWM5DCH	set	3476
  3544  0E3B                     _SSPDATPPS	set	3643
  3545  0E3A                     _SSPCLKPPS	set	3642
  3546  0E96                     _RA6PPS	set	3734
  3547  0E97                     _RA7PPS	set	3735
  3548  0E95                     _RA5PPS	set	3733
  3549  0E94                     _RA4PPS	set	3732
  3550  0E93                     _RA3PPS	set	3731
  3551  0E92                     _RA2PPS	set	3730
  3552  0E91                     _RA1PPS	set	3729
  3553  0E90                     _RA0PPS	set	3728
  3554  0EA3                     _RC3PPS	set	3747
  3555  0EA2                     _RC2PPS	set	3746
  3556                           
  3557                           ; #config settings
  3558  0000                     
  3559                           	psect	cinit
  3560  0013                     start_initialization:	
  3561  0013                     __initialization:	
  3562                           
  3563                           ; Initialize objects allocated to COMMON
  3564  0013  30ED               	movlw	low __pidataCOMMON
  3565  0014  0084               	movwf	4
  3566  0015  3084               	movlw	(high __pidataCOMMON)| (0+128)
  3567  0016  0085               	movwf	5
  3568  0017  3076               	movlw	low __pdataCOMMON
  3569  0018  0086               	movwf	6
  3570  0019  3000               	movlw	high __pdataCOMMON
  3571  001A  0087               	movwf	7
  3572  001B  3004               	movlw	4
  3573  001C  3184  24D6  3180   	fcall	init_ram
  3574                           
  3575                           ; Initialize objects allocated to BANK0
  3576  001F  30C3               	movlw	low __pidataBANK0
  3577  0020  0084               	movwf	4
  3578  0021  3084               	movlw	(high __pidataBANK0)| (0+128)
  3579  0022  0085               	movwf	5
  3580  0023  304B               	movlw	low __pdataBANK0
  3581  0024  0086               	movwf	6
  3582  0025  3000               	movlw	high __pdataBANK0
  3583  0026  0087               	movwf	7
  3584  0027  300A               	movlw	10
  3585  0028  3184  24D6  3180   	fcall	init_ram
  3586                           
  3587                           ; Clear objects allocated to BANK0
  3588  002B  303E               	movlw	low __pbssBANK0
  3589  002C  0084               	movwf	4
  3590  002D  3000               	movlw	high __pbssBANK0
  3591  002E  0085               	movwf	5
  3592  002F  300D               	movlw	13
  3593  0030  3184  24DC  3180   	fcall	clear_ram0
  3594  0033                     end_of_initialization:	
  3595                           ;End of C runtime variable initialization code
  3596                           
  3597  0033                     __end_of__initialization:	
  3598  0033  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3599  0034  0020               	movlb	0
  3600  0035  3183  2BB6         	ljmp	_main	;jump to C main() function
  3601                           
  3602                           	psect	dataCOMMON
  3603  0076                     __pdataCOMMON:	
  3604  0076                     _pps_pwm_vals:	
  3605  0076                     	ds	4
  3606                           
  3607                           	psect	bssBANK0
  3608  003E                     __pbssBANK0:	
  3609  003E                     _i2c_registers:	
  3610  003E                     	ds	10
  3611  0048                     _prev_steps:	
  3612  0048                     	ds	1
  3613  0049                     _first_write:	
  3614  0049                     	ds	1
  3615  004A                     _current_reg:	
  3616  004A                     	ds	1
  3617                           
  3618                           	psect	dataBANK0
  3619  004B                     __pdataBANK0:	
  3620  004B                     _writeable_reg:	
  3621  004B                     	ds	10
  3622                           
  3623                           	psect	inittext
  3624  04D6                     init_ram:	
  3625  04D6  00FE               	movwf	btemp
  3626  04D7                     initloop:	
  3627  04D7  0012               	moviw fsr0++
  3628  04D8  001E               	movwi fsr1++
  3629  04D9  0BFE               	decfsz	btemp,f
  3630  04DA  2CD7               	goto	initloop
  3631  04DB  3400               	retlw	0
  3632                           
  3633                           	psect	clrtext
  3634  04DC                     clear_ram0:	
  3635                           ;	Called with FSR0 containing the base address, and
  3636                           ;	WREG with the size to clear
  3637                           
  3638  04DC  0064               	clrwdt	;clear the watchdog before getting into this loop
  3639  04DD                     clrloop0:	
  3640  04DD  0180               	clrf	0	;clear RAM location pointed to by FSR
  3641  04DE  3101               	addfsr 0,1
  3642  04DF  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3643  04E0  2CDD               	goto	clrloop0	;have we reached the end yet?
  3644  04E1  3400               	retlw	0	;all done for this memory range, return
  3645                           
  3646                           	psect	cstackCOMMON
  3647  0070                     __pcstackCOMMON:	
  3648  0070                     ?_handle_read:	
  3649  0070                     ?_handle_write:	
  3650                           ; 1 bytes @ 0x0
  3651                           
  3652  0070                     ?_read_register:	
  3653                           ; 1 bytes @ 0x0
  3654                           
  3655  0070                     ?_config_pwm:	
  3656                           ; 1 bytes @ 0x0
  3657                           
  3658  0070                     ?_config_rev:	
  3659                           ; 1 bytes @ 0x0
  3660                           
  3661  0070                     ?_update_motors:	
  3662                           ; 1 bytes @ 0x0
  3663                           
  3664  0070                     ?_update_rev:	
  3665                           ; 1 bytes @ 0x0
  3666                           
  3667  0070                     ?_config_i2c:	
  3668                           ; 1 bytes @ 0x0
  3669                           
  3670  0070                     ?_i2c_isr:	
  3671                           ; 1 bytes @ 0x0
  3672                           
  3673  0070                     ?_config_io:	
  3674                           ; 1 bytes @ 0x0
  3675                           
  3676  0070                     ?_isr:	
  3677                           ; 1 bytes @ 0x0
  3678                           
  3679  0070                     ?_config_cpu:	
  3680                           ; 1 bytes @ 0x0
  3681                           
  3682  0070                     ?_update_ctl:	
  3683                           ; 1 bytes @ 0x0
  3684                           
  3685  0070                     ?_get_a_val:	
  3686                           ; 1 bytes @ 0x0
  3687                           
  3688  0070                     ?_get_b_val:	
  3689                           ; 1 bytes @ 0x0
  3690                           
  3691  0070                     ?_reset_timer:	
  3692                           ; 1 bytes @ 0x0
  3693                           
  3694  0070                     ?_stop_timer:	
  3695                           ; 1 bytes @ 0x0
  3696                           
  3697  0070                     ?_start_timer:	
  3698                           ; 1 bytes @ 0x0
  3699                           
  3700  0070                     ?i1_i2c_isr:	
  3701                           ; 1 bytes @ 0x0
  3702                           
  3703  0070                     ?i1_handle_read:	
  3704                           ; 1 bytes @ 0x0
  3705                           
  3706  0070                     ?i1_handle_write:	
  3707                           ; 1 bytes @ 0x0
  3708                           
  3709  0070                     ?i1_write_register:	
  3710                           ; 1 bytes @ 0x0
  3711                           
  3712  0070                     ?i1_read_register:	
  3713                           ; 1 bytes @ 0x0
  3714                           
  3715  0070                     ??i1_read_register:	
  3716                           ; 1 bytes @ 0x0
  3717                           
  3718  0070                     ?_main:	
  3719                           ; 1 bytes @ 0x0
  3720                           
  3721  0070                     i1write_register@val:	
  3722                           ; 2 bytes @ 0x0
  3723                           
  3724  0070                     i1read_register@reg:	
  3725                           ; 1 bytes @ 0x0
  3726                           
  3727                           
  3728                           ; 1 bytes @ 0x0
  3729  0070                     	ds	1
  3730  0071                     ??i1_handle_read:	
  3731  0071                     ??i1_write_register:	
  3732                           ; 1 bytes @ 0x1
  3733                           
  3734                           
  3735                           ; 1 bytes @ 0x1
  3736  0071                     	ds	1
  3737  0072                     i1write_register@msk:	
  3738                           
  3739                           ; 1 bytes @ 0x2
  3740  0072                     	ds	1
  3741  0073                     i1handle_read@buf:	
  3742  0073                     i1write_register@reg:	
  3743                           ; 1 bytes @ 0x3
  3744                           
  3745                           
  3746                           ; 1 bytes @ 0x3
  3747  0073                     	ds	1
  3748  0074                     ??i1_handle_write:	
  3749                           
  3750                           ; 1 bytes @ 0x4
  3751  0074                     	ds	1
  3752  0075                     i1handle_write@buf:	
  3753                           
  3754                           ; 1 bytes @ 0x5
  3755  0075                     	ds	1
  3756  0076                     ??_isr:	
  3757  0076                     ??i1_i2c_isr:	
  3758                           ; 1 bytes @ 0x6
  3759                           
  3760                           
  3761                           	psect	cstackBANK0
  3762  0020                     __pcstackBANK0:	
  3763                           ; 1 bytes @ 0x6
  3764                           
  3765  0020                     ??_read_register:	
  3766  0020                     ?_write_register:	
  3767                           ; 1 bytes @ 0x0
  3768                           
  3769  0020                     ??_config_rev:	
  3770                           ; 1 bytes @ 0x0
  3771                           
  3772  0020                     ?_set_pwm:	
  3773                           ; 1 bytes @ 0x0
  3774                           
  3775  0020                     ?_set_motor_pps:	
  3776                           ; 1 bytes @ 0x0
  3777                           
  3778  0020                     ??_config_i2c:	
  3779                           ; 1 bytes @ 0x0
  3780                           
  3781  0020                     ??_config_io:	
  3782                           ; 1 bytes @ 0x0
  3783                           
  3784  0020                     ??_config_cpu:	
  3785                           ; 1 bytes @ 0x0
  3786                           
  3787  0020                     ?_set_pwms_dc:	
  3788                           ; 1 bytes @ 0x0
  3789                           
  3790  0020                     ??_get_a_val:	
  3791                           ; 1 bytes @ 0x0
  3792                           
  3793  0020                     ??_get_b_val:	
  3794                           ; 1 bytes @ 0x0
  3795                           
  3796  0020                     ??_reset_timer:	
  3797                           ; 1 bytes @ 0x0
  3798                           
  3799  0020                     ??_stop_timer:	
  3800                           ; 1 bytes @ 0x0
  3801                           
  3802  0020                     ??_start_timer:	
  3803                           ; 1 bytes @ 0x0
  3804                           
  3805  0020                     ?_get_timer:	
  3806                           ; 1 bytes @ 0x0
  3807                           
  3808  0020                     write_register@val:	
  3809                           ; 2 bytes @ 0x0
  3810                           
  3811  0020                     read_register@reg:	
  3812                           ; 1 bytes @ 0x0
  3813                           
  3814  0020                     set_pwms_dc@m4:	
  3815                           ; 1 bytes @ 0x0
  3816                           
  3817  0020                     set_motor_pps@a_mode:	
  3818                           ; 1 bytes @ 0x0
  3819                           
  3820  0020                     set_pwm@pwm:	
  3821                           ; 1 bytes @ 0x0
  3822                           
  3823                           
  3824                           ; 1 bytes @ 0x0
  3825  0020                     	ds	1
  3826  0021                     ??_handle_read:	
  3827  0021                     ??_write_register:	
  3828                           ; 1 bytes @ 0x1
  3829                           
  3830  0021                     ??_set_pwm:	
  3831                           ; 1 bytes @ 0x1
  3832                           
  3833  0021                     set_pwms_dc@m9:	
  3834                           ; 1 bytes @ 0x1
  3835                           
  3836  0021                     set_motor_pps@b_mode:	
  3837                           ; 1 bytes @ 0x1
  3838                           
  3839                           
  3840                           ; 1 bytes @ 0x1
  3841  0021                     	ds	1
  3842  0022                     ??_set_motor_pps:	
  3843  0022                     ??_get_timer:	
  3844                           ; 1 bytes @ 0x2
  3845                           
  3846  0022                     write_register@msk:	
  3847                           ; 1 bytes @ 0x2
  3848                           
  3849  0022                     set_pwms_dc@m5:	
  3850                           ; 1 bytes @ 0x2
  3851                           
  3852  0022                     get_a_val@mode:	
  3853                           ; 1 bytes @ 0x2
  3854                           
  3855  0022                     get_b_val@mode:	
  3856                           ; 1 bytes @ 0x2
  3857                           
  3858                           
  3859                           ; 1 bytes @ 0x2
  3860  0022                     	ds	1
  3861  0023                     ??_set_pwms_dc:	
  3862  0023                     handle_read@buf:	
  3863                           ; 1 bytes @ 0x3
  3864                           
  3865  0023                     write_register@reg:	
  3866                           ; 1 bytes @ 0x3
  3867                           
  3868  0023                     set_pwm@motor:	
  3869                           ; 1 bytes @ 0x3
  3870                           
  3871                           
  3872                           ; 1 bytes @ 0x3
  3873  0023                     	ds	1
  3874  0024                     ??_handle_write:	
  3875  0024                     set_pwms_dc@m3:	
  3876                           ; 1 bytes @ 0x4
  3877                           
  3878                           
  3879                           ; 1 bytes @ 0x4
  3880  0024                     	ds	1
  3881  0025                     handle_write@buf:	
  3882  0025                     _set_motor_pps$388:	
  3883                           ; 1 bytes @ 0x5
  3884                           
  3885                           
  3886                           ; 2 bytes @ 0x5
  3887  0025                     	ds	1
  3888  0026                     ??_i2c_isr:	
  3889                           
  3890                           ; 1 bytes @ 0x6
  3891  0026                     	ds	1
  3892  0027                     get_timer@l:	
  3893  0027                     _set_motor_pps$390:	
  3894                           ; 1 bytes @ 0x7
  3895                           
  3896                           
  3897                           ; 2 bytes @ 0x7
  3898  0027                     	ds	1
  3899  0028                     get_timer@h:	
  3900                           
  3901                           ; 1 bytes @ 0x8
  3902  0028                     	ds	1
  3903  0029                     ??_update_rev:	
  3904  0029                     set_motor_pps@motor:	
  3905                           ; 1 bytes @ 0x9
  3906                           
  3907                           
  3908                           ; 1 bytes @ 0x9
  3909  0029                     	ds	1
  3910  002A                     set_motor_pps@pps_a:	
  3911  002A                     update_rev@t:	
  3912                           ; 1 bytes @ 0xA
  3913                           
  3914                           
  3915                           ; 2 bytes @ 0xA
  3916  002A                     	ds	1
  3917  002B                     set_motor_pps@pps_b:	
  3918                           
  3919                           ; 1 bytes @ 0xB
  3920  002B                     	ds	1
  3921  002C                     set_motor_pps@lat_a:	
  3922  002C                     update_rev@steps_buf:	
  3923                           ; 1 bytes @ 0xC
  3924                           
  3925                           
  3926                           ; 1 bytes @ 0xC
  3927  002C                     	ds	1
  3928  002D                     set_motor_pps@lat_b:	
  3929                           
  3930                           ; 1 bytes @ 0xD
  3931  002D                     	ds	1
  3932  002E                     set_motor_pps@x:	
  3933                           
  3934                           ; 1 bytes @ 0xE
  3935  002E                     	ds	1
  3936  002F                     ??_config_pwm:	
  3937  002F                     ?_set_pwm_mode:	
  3938                           ; 1 bytes @ 0xF
  3939                           
  3940  002F                     set_pwm_mode@mode:	
  3941                           ; 1 bytes @ 0xF
  3942                           
  3943                           
  3944                           ; 1 bytes @ 0xF
  3945  002F                     	ds	1
  3946  0030                     ??_set_pwm_mode:	
  3947                           
  3948                           ; 1 bytes @ 0x10
  3949  0030                     	ds	2
  3950  0032                     set_pwm_mode@motor:	
  3951                           
  3952                           ; 1 bytes @ 0x12
  3953  0032                     	ds	1
  3954  0033                     set_pwm_mode@a:	
  3955                           
  3956                           ; 1 bytes @ 0x13
  3957  0033                     	ds	1
  3958  0034                     set_pwm_mode@b:	
  3959                           
  3960                           ; 1 bytes @ 0x14
  3961  0034                     	ds	1
  3962  0035                     ?_set_motor:	
  3963  0035                     set_motor@dir:	
  3964                           ; 1 bytes @ 0x15
  3965                           
  3966                           
  3967                           ; 1 bytes @ 0x15
  3968  0035                     	ds	1
  3969  0036                     set_motor@pwm:	
  3970                           
  3971                           ; 1 bytes @ 0x16
  3972  0036                     	ds	1
  3973  0037                     ??_set_motor:	
  3974                           
  3975                           ; 1 bytes @ 0x17
  3976  0037                     	ds	2
  3977  0039                     set_motor@motor:	
  3978                           
  3979                           ; 1 bytes @ 0x19
  3980  0039                     	ds	1
  3981  003A                     ??_update_ctl:	
  3982                           
  3983                           ; 1 bytes @ 0x1A
  3984  003A                     	ds	2
  3985  003C                     update_ctl@c:	
  3986                           
  3987                           ; 1 bytes @ 0x1C
  3988  003C                     	ds	1
  3989  003D                     update_ctl@i:	
  3990                           
  3991                           ; 1 bytes @ 0x1D
  3992  003D                     	ds	1
  3993  003E                     ??_update_motors:	
  3994  003E                     ??_main:	
  3995                           ; 1 bytes @ 0x1E
  3996                           
  3997                           
  3998                           	psect	maintext
  3999  03B6                     __pmaintext:	
  4000                           ; 1 bytes @ 0x1E
  4001 ;;
  4002 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  4003 ;;
  4004 ;; *************** function _main *****************
  4005 ;; Defined at:
  4006 ;;		line 25 in file "code/main.c"
  4007 ;; Parameters:    Size  Location     Type
  4008 ;;		None
  4009 ;; Auto vars:     Size  Location     Type
  4010 ;;		None
  4011 ;; Return value:  Size  Location     Type
  4012 ;;                  2  135[None  ] int 
  4013 ;; Registers used:
  4014 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4015 ;; Tracked objects:
  4016 ;;		On entry : B1F/0
  4017 ;;		On exit  : 0/0
  4018 ;;		Unchanged: 0/0
  4019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4020 ;;      Params:         0       0       0       0       0       0       0       0
  4021 ;;      Locals:         0       0       0       0       0       0       0       0
  4022 ;;      Temps:          0       0       0       0       0       0       0       0
  4023 ;;      Totals:         0       0       0       0       0       0       0       0
  4024 ;;Total ram usage:        0 bytes
  4025 ;; Hardware stack levels required when called:    9
  4026 ;; This function calls:
  4027 ;;		_config_cpu
  4028 ;;		_config_i2c
  4029 ;;		_config_io
  4030 ;;		_config_pwm
  4031 ;;		_config_rev
  4032 ;;		_i2c_isr
  4033 ;;		_update_motors
  4034 ;;		_update_rev
  4035 ;; This function is called by:
  4036 ;;		Startup code after reset
  4037 ;; This function uses a non-reentrant model
  4038 ;;
  4039                           
  4040                           
  4041                           ;psect for function _main
  4042  03B6                     _main:	
  4043  03B6                     l2265:	
  4044                           ;incstack = 0
  4045                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4046                           
  4047                           
  4048                           ;code/main.c: 27:      config_cpu();
  4049  03B6  3184  24E2  3183   	fcall	_config_cpu
  4050                           
  4051                           ;code/main.c: 28:      config_io();
  4052  03B9  3184  2487  3183   	fcall	_config_io
  4053  03BC                     l2267:	
  4054                           
  4055                           ;code/main.c: 29:      config_pwm();
  4056  03BC  3182  2272  3183   	fcall	_config_pwm
  4057  03BF                     l2269:	
  4058                           
  4059                           ;code/main.c: 30:      config_i2c();
  4060  03BF  3183  236A  3183   	fcall	_config_i2c
  4061  03C2                     l2271:	
  4062                           
  4063                           ;code/main.c: 31:      config_rev();
  4064  03C2  3184  24CD  3183   	fcall	_config_rev
  4065  03C5                     l2273:	
  4066                           
  4067                           ;code/main.c: 34:           update_motors();
  4068  03C5  3184  24F1  3183   	fcall	_update_motors
  4069  03C8                     l2275:	
  4070                           
  4071                           ;code/main.c: 35:           if(PIR1bits.SSP1IF){
  4072  03C8  0020               	movlb	0	; select bank0
  4073  03C9  1D91               	btfss	17,3	;volatile
  4074  03CA  2BCC               	goto	u1321
  4075  03CB  2BCD               	goto	u1320
  4076  03CC                     u1321:	
  4077  03CC  2BD1               	goto	l2281
  4078  03CD                     u1320:	
  4079  03CD                     l2277:	
  4080                           
  4081                           ;code/main.c: 36:                PIR1bits.SSP1IF = 0;
  4082  03CD  1191               	bcf	17,3	;volatile
  4083  03CE                     l2279:	
  4084                           
  4085                           ;code/main.c: 37:                i2c_isr();
  4086  03CE  3184  2455  3183   	fcall	_i2c_isr
  4087  03D1                     l2281:	
  4088                           
  4089                           ;code/main.c: 39:           update_rev();
  4090  03D1  3181  21DF  3183   	fcall	_update_rev
  4091  03D4  2BC5               	goto	l2273
  4092  03D5  3180  2811         	ljmp	start
  4093  03D7                     __end_of_main:	
  4094                           
  4095                           	psect	text1
  4096  01DF                     __ptext1:	
  4097 ;; *************** function _update_rev *****************
  4098 ;; Defined at:
  4099 ;;		line 39 in file "code/rev.c"
  4100 ;; Parameters:    Size  Location     Type
  4101 ;;		None
  4102 ;; Auto vars:     Size  Location     Type
  4103 ;;  t               2   10[BANK0 ] short 
  4104 ;;  steps_buf       1   12[BANK0 ] unsigned char 
  4105 ;; Return value:  Size  Location     Type
  4106 ;;                  1    wreg      void 
  4107 ;; Registers used:
  4108 ;;		wreg, status,2, status,0, pclath, cstack
  4109 ;; Tracked objects:
  4110 ;;		On entry : 0/0
  4111 ;;		On exit  : 0/0
  4112 ;;		Unchanged: 0/0
  4113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4114 ;;      Params:         0       0       0       0       0       0       0       0
  4115 ;;      Locals:         0       3       0       0       0       0       0       0
  4116 ;;      Temps:          0       1       0       0       0       0       0       0
  4117 ;;      Totals:         0       4       0       0       0       0       0       0
  4118 ;;Total ram usage:        4 bytes
  4119 ;; Hardware stack levels used:    1
  4120 ;; Hardware stack levels required when called:    5
  4121 ;; This function calls:
  4122 ;;		_get_timer
  4123 ;;		_reset_timer
  4124 ;;		_start_timer
  4125 ;;		_stop_timer
  4126 ;; This function is called by:
  4127 ;;		_main
  4128 ;; This function uses a non-reentrant model
  4129 ;;
  4130                           
  4131                           
  4132                           ;psect for function _update_rev
  4133  01DF                     _update_rev:	
  4134  01DF                     l2237:	
  4135                           ;incstack = 0
  4136                           ; Regs used in _update_rev: [wreg+status,2+status,0+pclath+cstack]
  4137                           
  4138                           
  4139                           ;code/rev.c: 40:      u8 steps_buf = i2c_registers[9];
  4140  01DF  0020               	movlb	0	; select bank0
  4141  01E0  0847               	movf	_i2c_registers+9,w
  4142  01E1  00A9               	movwf	??_update_rev
  4143  01E2  0829               	movf	??_update_rev,w
  4144  01E3  00AC               	movwf	update_rev@steps_buf
  4145  01E4                     l2239:	
  4146                           
  4147                           ;code/rev.c: 42:      if(PORTBbits.RB3){
  4148  01E4  1D8D               	btfss	13,3	;volatile
  4149  01E5  29E7               	goto	u1261
  4150  01E6  29E8               	goto	u1260
  4151  01E7                     u1261:	
  4152  01E7  2A08               	goto	l2251
  4153  01E8                     u1260:	
  4154  01E8                     l2241:	
  4155                           
  4156                           ;code/rev.c: 43:           short t = get_timer();
  4157  01E8  3184  2417  3181   	fcall	_get_timer
  4158  01EB  0020               	movlb	0	; select bank0
  4159  01EC  0821               	movf	?_get_timer+1,w
  4160  01ED  00AB               	movwf	update_rev@t+1
  4161  01EE  0820               	movf	?_get_timer,w
  4162  01EF  00AA               	movwf	update_rev@t
  4163  01F0                     l2243:	
  4164                           
  4165                           ;code/rev.c: 44:           if(t >= int_time_delay){
  4166  01F0  082B               	movf	update_rev@t+1,w
  4167  01F1  3A80               	xorlw	128
  4168  01F2  00A9               	movwf	??_update_rev
  4169  01F3  3083               	movlw	131
  4170  01F4  0229               	subwf	??_update_rev,w
  4171  01F5  1D03               	skipz
  4172  01F6  29F9               	goto	u1275
  4173  01F7  30E8               	movlw	232
  4174  01F8  022A               	subwf	update_rev@t,w
  4175  01F9                     u1275:	
  4176  01F9  1C03               	skipc
  4177  01FA  29FC               	goto	u1271
  4178  01FB  29FD               	goto	u1270
  4179  01FC                     u1271:	
  4180  01FC  2A05               	goto	l2249
  4181  01FD                     u1270:	
  4182  01FD                     l2245:	
  4183                           
  4184                           ;code/rev.c: 45:                if(i2c_registers[9])i2c_registers[9] -= 1;
  4185  01FD  0020               	movlb	0	; select bank0
  4186  01FE  0847               	movf	_i2c_registers+9,w
  4187  01FF  1903               	btfsc	3,2
  4188  0200  2A02               	goto	u1281
  4189  0201  2A03               	goto	u1280
  4190  0202                     u1281:	
  4191  0202  2A05               	goto	l2249
  4192  0203                     u1280:	
  4193  0203                     l2247:	
  4194  0203  3001               	movlw	1
  4195  0204  02C7               	subwf	_i2c_registers+9,f
  4196  0205                     l2249:	
  4197                           
  4198                           ;code/rev.c: 47:           reset_timer();
  4199  0205  3184  24E8  3181   	fcall	_reset_timer
  4200  0208                     l2251:	
  4201                           
  4202                           ;code/rev.c: 51:      if(!steps_buf && prev_steps){
  4203  0208  0020               	movlb	0	; select bank0
  4204  0209  082C               	movf	update_rev@steps_buf,w
  4205  020A  1D03               	btfss	3,2
  4206  020B  2A0D               	goto	u1291
  4207  020C  2A0E               	goto	u1290
  4208  020D                     u1291:	
  4209  020D  2A18               	goto	l2259
  4210  020E                     u1290:	
  4211  020E                     l2253:	
  4212  020E  0848               	movf	_prev_steps,w
  4213  020F  1903               	btfsc	3,2
  4214  0210  2A12               	goto	u1301
  4215  0211  2A13               	goto	u1300
  4216  0212                     u1301:	
  4217  0212  2A18               	goto	l2259
  4218  0213                     u1300:	
  4219  0213                     l2255:	
  4220                           
  4221                           ;code/rev.c: 52:           i2c_registers[8] = 0;
  4222  0213  01C6               	clrf	_i2c_registers+8
  4223  0214                     l2257:	
  4224                           
  4225                           ;code/rev.c: 53:           stop_timer();
  4226  0214  3184  24F5  3181   	fcall	_stop_timer
  4227                           
  4228                           ;code/rev.c: 54:      }
  4229  0217  2A24               	goto	l2263
  4230  0218                     l2259:	
  4231  0218  082C               	movf	update_rev@steps_buf,w
  4232  0219  0248               	subwf	_prev_steps,w
  4233  021A  1803               	skipnc
  4234  021B  2A1D               	goto	u1311
  4235  021C  2A1E               	goto	u1310
  4236  021D                     u1311:	
  4237  021D  2A24               	goto	l2263
  4238  021E                     u1310:	
  4239  021E                     l2261:	
  4240                           
  4241                           ;code/rev.c: 56:           start_timer();
  4242  021E  3184  24F8  3181   	fcall	_start_timer
  4243                           
  4244                           ;code/rev.c: 57:           reset_timer();
  4245  0221  3184  24E8  3181   	fcall	_reset_timer
  4246  0224                     l2263:	
  4247                           
  4248                           ;code/rev.c: 59:      prev_steps = steps_buf;
  4249  0224  0020               	movlb	0	; select bank0
  4250  0225  082C               	movf	update_rev@steps_buf,w
  4251  0226  00A9               	movwf	??_update_rev
  4252  0227  0829               	movf	??_update_rev,w
  4253  0228  00C8               	movwf	_prev_steps
  4254  0229                     l335:	
  4255  0229  0008               	return
  4256  022A                     __end_of_update_rev:	
  4257                           
  4258                           	psect	text2
  4259  04F5                     __ptext2:	
  4260 ;; *************** function _stop_timer *****************
  4261 ;; Defined at:
  4262 ;;		line 30 in file "code/rev.c"
  4263 ;; Parameters:    Size  Location     Type
  4264 ;;		None
  4265 ;; Auto vars:     Size  Location     Type
  4266 ;;		None
  4267 ;; Return value:  Size  Location     Type
  4268 ;;                  1    wreg      void 
  4269 ;; Registers used:
  4270 ;;		None
  4271 ;; Tracked objects:
  4272 ;;		On entry : 0/0
  4273 ;;		On exit  : 0/0
  4274 ;;		Unchanged: 0/0
  4275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4276 ;;      Params:         0       0       0       0       0       0       0       0
  4277 ;;      Locals:         0       0       0       0       0       0       0       0
  4278 ;;      Temps:          0       0       0       0       0       0       0       0
  4279 ;;      Totals:         0       0       0       0       0       0       0       0
  4280 ;;Total ram usage:        0 bytes
  4281 ;; Hardware stack levels used:    1
  4282 ;; Hardware stack levels required when called:    4
  4283 ;; This function calls:
  4284 ;;		Nothing
  4285 ;; This function is called by:
  4286 ;;		_update_rev
  4287 ;; This function uses a non-reentrant model
  4288 ;;
  4289                           
  4290                           
  4291                           ;psect for function _stop_timer
  4292  04F5                     _stop_timer:	
  4293  04F5                     l2159:	
  4294                           ;incstack = 0
  4295                           ; Regs used in _stop_timer: []
  4296                           
  4297                           
  4298                           ;code/rev.c: 31:      T3CONbits.ON = 0;
  4299  04F5  0020               	movlb	0	; select bank0
  4300  04F6  101E               	bcf	30,0	;volatile
  4301  04F7                     l321:	
  4302  04F7  0008               	return
  4303  04F8                     __end_of_stop_timer:	
  4304                           
  4305                           	psect	text3
  4306  04F8                     __ptext3:	
  4307 ;; *************** function _start_timer *****************
  4308 ;; Defined at:
  4309 ;;		line 34 in file "code/rev.c"
  4310 ;; Parameters:    Size  Location     Type
  4311 ;;		None
  4312 ;; Auto vars:     Size  Location     Type
  4313 ;;		None
  4314 ;; Return value:  Size  Location     Type
  4315 ;;                  1    wreg      void 
  4316 ;; Registers used:
  4317 ;;		None
  4318 ;; Tracked objects:
  4319 ;;		On entry : 0/0
  4320 ;;		On exit  : 0/0
  4321 ;;		Unchanged: 0/0
  4322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4323 ;;      Params:         0       0       0       0       0       0       0       0
  4324 ;;      Locals:         0       0       0       0       0       0       0       0
  4325 ;;      Temps:          0       0       0       0       0       0       0       0
  4326 ;;      Totals:         0       0       0       0       0       0       0       0
  4327 ;;Total ram usage:        0 bytes
  4328 ;; Hardware stack levels used:    1
  4329 ;; Hardware stack levels required when called:    4
  4330 ;; This function calls:
  4331 ;;		Nothing
  4332 ;; This function is called by:
  4333 ;;		_update_rev
  4334 ;; This function uses a non-reentrant model
  4335 ;;
  4336                           
  4337                           
  4338                           ;psect for function _start_timer
  4339  04F8                     _start_timer:	
  4340  04F8                     l2161:	
  4341                           ;incstack = 0
  4342                           ; Regs used in _start_timer: []
  4343                           
  4344                           
  4345                           ;code/rev.c: 35:      T3CONbits.ON = 1;
  4346  04F8  0020               	movlb	0	; select bank0
  4347  04F9  141E               	bsf	30,0	;volatile
  4348  04FA                     l324:	
  4349  04FA  0008               	return
  4350  04FB                     __end_of_start_timer:	
  4351                           
  4352                           	psect	text4
  4353  04E8                     __ptext4:	
  4354 ;; *************** function _reset_timer *****************
  4355 ;; Defined at:
  4356 ;;		line 24 in file "code/rev.c"
  4357 ;; Parameters:    Size  Location     Type
  4358 ;;		None
  4359 ;; Auto vars:     Size  Location     Type
  4360 ;;		None
  4361 ;; Return value:  Size  Location     Type
  4362 ;;                  1    wreg      void 
  4363 ;; Registers used:
  4364 ;;		status,2
  4365 ;; Tracked objects:
  4366 ;;		On entry : 0/0
  4367 ;;		On exit  : 0/0
  4368 ;;		Unchanged: 0/0
  4369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4370 ;;      Params:         0       0       0       0       0       0       0       0
  4371 ;;      Locals:         0       0       0       0       0       0       0       0
  4372 ;;      Temps:          0       0       0       0       0       0       0       0
  4373 ;;      Totals:         0       0       0       0       0       0       0       0
  4374 ;;Total ram usage:        0 bytes
  4375 ;; Hardware stack levels used:    1
  4376 ;; Hardware stack levels required when called:    4
  4377 ;; This function calls:
  4378 ;;		Nothing
  4379 ;; This function is called by:
  4380 ;;		_update_rev
  4381 ;; This function uses a non-reentrant model
  4382 ;;
  4383                           
  4384                           
  4385                           ;psect for function _reset_timer
  4386  04E8                     _reset_timer:	
  4387  04E8                     l2157:	
  4388                           ;incstack = 0
  4389                           ; Regs used in _reset_timer: [status,2]
  4390                           
  4391                           
  4392                           ;code/rev.c: 25:      TMR3L = 0;
  4393  04E8  0020               	movlb	0	; select bank0
  4394  04E9  019C               	clrf	28	;volatile
  4395                           
  4396                           ;code/rev.c: 26:      TMR3H = 0;
  4397  04EA  019D               	clrf	29	;volatile
  4398                           
  4399                           ;code/rev.c: 27:      TMR3L = 0;
  4400  04EB  019C               	clrf	28	;volatile
  4401  04EC                     l318:	
  4402  04EC  0008               	return
  4403  04ED                     __end_of_reset_timer:	
  4404                           
  4405                           	psect	text5
  4406  0417                     __ptext5:	
  4407 ;; *************** function _get_timer *****************
  4408 ;; Defined at:
  4409 ;;		line 15 in file "code/rev.c"
  4410 ;; Parameters:    Size  Location     Type
  4411 ;;		None
  4412 ;; Auto vars:     Size  Location     Type
  4413 ;;  h               1    8[BANK0 ] unsigned char 
  4414 ;;  l               1    7[BANK0 ] unsigned char 
  4415 ;; Return value:  Size  Location     Type
  4416 ;;                  2    0[BANK0 ] short 
  4417 ;; Registers used:
  4418 ;;		wreg, status,2, status,0
  4419 ;; Tracked objects:
  4420 ;;		On entry : 0/0
  4421 ;;		On exit  : 0/0
  4422 ;;		Unchanged: 0/0
  4423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4424 ;;      Params:         0       2       0       0       0       0       0       0
  4425 ;;      Locals:         0       2       0       0       0       0       0       0
  4426 ;;      Temps:          0       5       0       0       0       0       0       0
  4427 ;;      Totals:         0       9       0       0       0       0       0       0
  4428 ;;Total ram usage:        9 bytes
  4429 ;; Hardware stack levels used:    1
  4430 ;; Hardware stack levels required when called:    4
  4431 ;; This function calls:
  4432 ;;		Nothing
  4433 ;; This function is called by:
  4434 ;;		_update_rev
  4435 ;; This function uses a non-reentrant model
  4436 ;;
  4437                           
  4438                           
  4439                           ;psect for function _get_timer
  4440  0417                     _get_timer:	
  4441  0417                     l313:	
  4442                           ;incstack = 0
  4443                           ; Regs used in _get_timer: [wreg+status,2+status,0]
  4444                           ;code/rev.c: 16:      u8 h,l;;code/rev.c: 17:      do{
  4445                           
  4446  0417                     l2151:	
  4447                           
  4448                           ;code/rev.c: 18:           h = TMR3H;
  4449  0417  0020               	movlb	0	; select bank0
  4450  0418  081D               	movf	29,w	;volatile
  4451  0419  00A2               	movwf	??_get_timer
  4452  041A  0822               	movf	??_get_timer,w
  4453  041B  00A8               	movwf	get_timer@h
  4454                           
  4455                           ;code/rev.c: 19:           l = TMR3L;
  4456  041C  081C               	movf	28,w	;volatile
  4457  041D  00A2               	movwf	??_get_timer
  4458  041E  0822               	movf	??_get_timer,w
  4459  041F  00A7               	movwf	get_timer@l
  4460                           
  4461                           ;code/rev.c: 20:      }while(h != TMR3H);
  4462  0420  0828               	movf	get_timer@h,w
  4463  0421  061D               	xorwf	29,w	;volatile
  4464  0422  1D03               	skipz
  4465  0423  2C25               	goto	u1241
  4466  0424  2C26               	goto	u1240
  4467  0425                     u1241:	
  4468  0425  2C17               	goto	l313
  4469  0426                     u1240:	
  4470  0426                     l2153:	
  4471                           
  4472                           ;code/rev.c: 21:      return (h<<8) + l;
  4473  0426  0827               	movf	get_timer@l,w
  4474  0427  00A2               	movwf	??_get_timer
  4475  0428  01A3               	clrf	??_get_timer+1
  4476  0429  0828               	movf	get_timer@h,w
  4477  042A  00A4               	movwf	??_get_timer+2
  4478  042B  01A5               	clrf	??_get_timer+3
  4479  042C  0824               	movf	??_get_timer+2,w
  4480  042D  00A5               	movwf	??_get_timer+3
  4481  042E  01A4               	clrf	??_get_timer+2
  4482  042F  0822               	movf	??_get_timer,w
  4483  0430  0724               	addwf	??_get_timer+2,w
  4484  0431  00A0               	movwf	?_get_timer
  4485  0432  0823               	movf	??_get_timer+1,w
  4486  0433  3D25               	addwfc	??_get_timer+3,w
  4487  0434  00A1               	movwf	?_get_timer+1
  4488  0435                     l315:	
  4489  0435  0008               	return
  4490  0436                     __end_of_get_timer:	
  4491                           
  4492                           	psect	text6
  4493  04F1                     __ptext6:	
  4494 ;; *************** function _update_motors *****************
  4495 ;; Defined at:
  4496 ;;		line 42 in file "code/motors.c"
  4497 ;; Parameters:    Size  Location     Type
  4498 ;;		None
  4499 ;; Auto vars:     Size  Location     Type
  4500 ;;		None
  4501 ;; Return value:  Size  Location     Type
  4502 ;;                  1    wreg      void 
  4503 ;; Registers used:
  4504 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4505 ;; Tracked objects:
  4506 ;;		On entry : 0/0
  4507 ;;		On exit  : 0/0
  4508 ;;		Unchanged: 0/0
  4509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4510 ;;      Params:         0       0       0       0       0       0       0       0
  4511 ;;      Locals:         0       0       0       0       0       0       0       0
  4512 ;;      Temps:          0       0       0       0       0       0       0       0
  4513 ;;      Totals:         0       0       0       0       0       0       0       0
  4514 ;;Total ram usage:        0 bytes
  4515 ;; Hardware stack levels used:    1
  4516 ;; Hardware stack levels required when called:    8
  4517 ;; This function calls:
  4518 ;;		_update_ctl
  4519 ;; This function is called by:
  4520 ;;		_main
  4521 ;; This function uses a non-reentrant model
  4522 ;;
  4523                           
  4524                           
  4525                           ;psect for function _update_motors
  4526  04F1                     _update_motors:	
  4527  04F1                     l2235:	
  4528                           ;incstack = 0
  4529                           ; Regs used in _update_motors: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4530                           
  4531                           
  4532                           ;code/motors.c: 44:      update_ctl();
  4533  04F1  3182  22B6  3184   	fcall	_update_ctl
  4534  04F4                     l166:	
  4535  04F4  0008               	return
  4536  04F5                     __end_of_update_motors:	
  4537                           
  4538                           	psect	text7
  4539  02B6                     __ptext7:	
  4540 ;; *************** function _update_ctl *****************
  4541 ;; Defined at:
  4542 ;;		line 30 in file "code/motors.c"
  4543 ;; Parameters:    Size  Location     Type
  4544 ;;		None
  4545 ;; Auto vars:     Size  Location     Type
  4546 ;;  i               1   29[BANK0 ] unsigned char 
  4547 ;;  c               1   28[BANK0 ] unsigned char 
  4548 ;; Return value:  Size  Location     Type
  4549 ;;                  1    wreg      void 
  4550 ;; Registers used:
  4551 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4552 ;; Tracked objects:
  4553 ;;		On entry : 0/0
  4554 ;;		On exit  : 0/0
  4555 ;;		Unchanged: 0/0
  4556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4557 ;;      Params:         0       0       0       0       0       0       0       0
  4558 ;;      Locals:         0       2       0       0       0       0       0       0
  4559 ;;      Temps:          0       2       0       0       0       0       0       0
  4560 ;;      Totals:         0       4       0       0       0       0       0       0
  4561 ;;Total ram usage:        4 bytes
  4562 ;; Hardware stack levels used:    1
  4563 ;; Hardware stack levels required when called:    7
  4564 ;; This function calls:
  4565 ;;		_set_motor
  4566 ;;		_set_pwm_mode
  4567 ;; This function is called by:
  4568 ;;		_update_motors
  4569 ;; This function uses a non-reentrant model
  4570 ;;
  4571                           
  4572                           
  4573                           ;psect for function _update_ctl
  4574  02B6                     _update_ctl:	
  4575  02B6                     l2127:	
  4576                           ;incstack = 0
  4577                           ; Regs used in _update_ctl: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4578                           
  4579                           
  4580                           ;code/motors.c: 32:      u8 c = i2c_registers[0];
  4581  02B6  0020               	movlb	0	; select bank0
  4582  02B7  083E               	movf	_i2c_registers,w
  4583  02B8  00BA               	movwf	??_update_ctl
  4584  02B9  083A               	movf	??_update_ctl,w
  4585  02BA  00BC               	movwf	update_ctl@c
  4586  02BB                     l2129:	
  4587                           
  4588                           ;code/motors.c: 33:      for(u8 i=1;i<=4;++i){
  4589  02BB  01BD               	clrf	update_ctl@i
  4590  02BC  0ABD               	incf	update_ctl@i,f
  4591  02BD                     l2133:	
  4592                           
  4593                           ;code/motors.c: 34:    if(c & (0b1000<<i)){
  4594  02BD  3008               	movlw	8
  4595  02BE  00BA               	movwf	??_update_ctl
  4596  02BF  0A3D               	incf	update_ctl@i,w
  4597  02C0  2AC2               	goto	u1154
  4598  02C1                     u1155:	
  4599  02C1  35BA               	lslf	??_update_ctl,f
  4600  02C2                     u1154:	
  4601  02C2  0B89               	decfsz	9,f
  4602  02C3  2AC1               	goto	u1155
  4603  02C4  083A               	movf	??_update_ctl,w
  4604  02C5  053C               	andwf	update_ctl@c,w
  4605  02C6  1903               	btfsc	3,2
  4606  02C7  2AC9               	goto	u1161
  4607  02C8  2ACA               	goto	u1160
  4608  02C9                     u1161:	
  4609  02C9  2ADF               	goto	l2137
  4610  02CA                     u1160:	
  4611  02CA                     l2135:	
  4612                           
  4613                           ;code/motors.c: 35:         set_motor(i,i2c_registers[(i<<1)-1],i2c_registers[(i<<1)]);
  4614  02CA  353D               	lslf	update_ctl@i,w
  4615  02CB  3E3D               	addlw	(low ((_i2c_registers| 0+255)))& (0+255)
  4616  02CC  0086               	movwf	6
  4617  02CD  0187               	clrf	7
  4618  02CE  0801               	movf	1,w
  4619  02CF  00BA               	movwf	??_update_ctl
  4620  02D0  083A               	movf	??_update_ctl,w
  4621  02D1  00B5               	movwf	set_motor@dir
  4622  02D2  353D               	lslf	update_ctl@i,w
  4623  02D3  3E3E               	addlw	(low (_i2c_registers| 0))& (0+255)
  4624  02D4  0086               	movwf	6
  4625  02D5  0187               	clrf	7
  4626  02D6  0801               	movf	1,w
  4627  02D7  00BB               	movwf	??_update_ctl+1
  4628  02D8  083B               	movf	??_update_ctl+1,w
  4629  02D9  00B6               	movwf	set_motor@pwm
  4630  02DA  083D               	movf	update_ctl@i,w
  4631  02DB  3181  2183  3182   	fcall	_set_motor
  4632                           
  4633                           ;code/motors.c: 36:    }else{
  4634  02DE  2AE7               	goto	l2139
  4635  02DF                     l2137:	
  4636                           
  4637                           ;code/motors.c: 37:         set_pwm_mode(i,'O');
  4638  02DF  304F               	movlw	79
  4639  02E0  00BA               	movwf	??_update_ctl
  4640  02E1  083A               	movf	??_update_ctl,w
  4641  02E2  00AF               	movwf	set_pwm_mode@mode
  4642  02E3  083D               	movf	update_ctl@i,w
  4643  02E4  3184  2436  3182   	fcall	_set_pwm_mode
  4644  02E7                     l2139:	
  4645                           
  4646                           ;code/motors.c: 39:      }
  4647  02E7  3001               	movlw	1
  4648  02E8  0020               	movlb	0	; select bank0
  4649  02E9  00BA               	movwf	??_update_ctl
  4650  02EA  083A               	movf	??_update_ctl,w
  4651  02EB  07BD               	addwf	update_ctl@i,f
  4652  02EC                     l2141:	
  4653  02EC  3005               	movlw	5
  4654  02ED  023D               	subwf	update_ctl@i,w
  4655  02EE  1C03               	skipc
  4656  02EF  2AF1               	goto	u1171
  4657  02F0  2AF2               	goto	u1170
  4658  02F1                     u1171:	
  4659  02F1  2ABD               	goto	l2133
  4660  02F2                     u1170:	
  4661  02F2                     l163:	
  4662  02F2  0008               	return
  4663  02F3                     __end_of_update_ctl:	
  4664                           
  4665                           	psect	text8
  4666  0183                     __ptext8:	
  4667 ;; *************** function _set_motor *****************
  4668 ;; Defined at:
  4669 ;;		line 6 in file "code/motors.c"
  4670 ;; Parameters:    Size  Location     Type
  4671 ;;  motor           1    wreg     unsigned char 
  4672 ;;  dir             1   21[BANK0 ] unsigned char 
  4673 ;;  pwm             1   22[BANK0 ] unsigned char 
  4674 ;; Auto vars:     Size  Location     Type
  4675 ;;  motor           1   25[BANK0 ] unsigned char 
  4676 ;; Return value:  Size  Location     Type
  4677 ;;                  1    wreg      void 
  4678 ;; Registers used:
  4679 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4680 ;; Tracked objects:
  4681 ;;		On entry : 0/0
  4682 ;;		On exit  : 0/0
  4683 ;;		Unchanged: 0/0
  4684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4685 ;;      Params:         0       2       0       0       0       0       0       0
  4686 ;;      Locals:         0       1       0       0       0       0       0       0
  4687 ;;      Temps:          0       2       0       0       0       0       0       0
  4688 ;;      Totals:         0       5       0       0       0       0       0       0
  4689 ;;Total ram usage:        5 bytes
  4690 ;; Hardware stack levels used:    1
  4691 ;; Hardware stack levels required when called:    6
  4692 ;; This function calls:
  4693 ;;		_set_pwm
  4694 ;;		_set_pwm_mode
  4695 ;; This function is called by:
  4696 ;;		_update_ctl
  4697 ;; This function uses a non-reentrant model
  4698 ;;
  4699                           
  4700                           
  4701                           ;psect for function _set_motor
  4702  0183                     _set_motor:	
  4703                           
  4704                           ;incstack = 0
  4705                           ; Regs used in _set_motor: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4706                           ;set_motor@motor stored from wreg
  4707  0183  0020               	movlb	0	; select bank0
  4708  0184  00B9               	movwf	set_motor@motor
  4709  0185                     l2077:	
  4710                           
  4711                           ;code/motors.c: 6: void set_motor(u8 motor,u8 dir,u8 pwm);code/motors.c: 7: {;code/motor
      +                          s.c: 8:      switch(dir){
  4712  0185  29C8               	goto	l2097
  4713  0186                     l2079:	
  4714                           
  4715                           ;code/motors.c: 10:    set_pwm_mode(motor,'S');
  4716  0186  3053               	movlw	83
  4717  0187  00B7               	movwf	??_set_motor
  4718  0188  0837               	movf	??_set_motor,w
  4719  0189  00AF               	movwf	set_pwm_mode@mode
  4720  018A  0839               	movf	set_motor@motor,w
  4721  018B  3184  2436  3181   	fcall	_set_pwm_mode
  4722  018E                     l2081:	
  4723                           
  4724                           ;code/motors.c: 11:    set_pwm(motor,0);
  4725  018E  0020               	movlb	0	; select bank0
  4726  018F  01A0               	clrf	set_pwm@pwm
  4727  0190  0839               	movf	set_motor@motor,w
  4728  0191  3181  2124  3181   	fcall	_set_pwm
  4729                           
  4730                           ;code/motors.c: 12:    break;
  4731  0194  29DE               	goto	l156
  4732  0195                     l2083:	
  4733                           
  4734                           ;code/motors.c: 14:    set_pwm_mode(motor,'C');
  4735  0195  3043               	movlw	67
  4736  0196  00B7               	movwf	??_set_motor
  4737  0197  0837               	movf	??_set_motor,w
  4738  0198  00AF               	movwf	set_pwm_mode@mode
  4739  0199  0839               	movf	set_motor@motor,w
  4740  019A  3184  2436  3181   	fcall	_set_pwm_mode
  4741  019D                     l2085:	
  4742                           
  4743                           ;code/motors.c: 15:    set_pwm(motor,pwm);
  4744  019D  0020               	movlb	0	; select bank0
  4745  019E  0836               	movf	set_motor@pwm,w
  4746  019F  00B7               	movwf	??_set_motor
  4747  01A0  0837               	movf	??_set_motor,w
  4748  01A1  00A0               	movwf	set_pwm@pwm
  4749  01A2  0839               	movf	set_motor@motor,w
  4750  01A3  3181  2124  3181   	fcall	_set_pwm
  4751                           
  4752                           ;code/motors.c: 16:    break;
  4753  01A6  29DE               	goto	l156
  4754  01A7                     l2087:	
  4755                           
  4756                           ;code/motors.c: 18:    set_pwm_mode(motor,'A');
  4757  01A7  3041               	movlw	65
  4758  01A8  00B7               	movwf	??_set_motor
  4759  01A9  0837               	movf	??_set_motor,w
  4760  01AA  00AF               	movwf	set_pwm_mode@mode
  4761  01AB  0839               	movf	set_motor@motor,w
  4762  01AC  3184  2436  3181   	fcall	_set_pwm_mode
  4763  01AF                     l2089:	
  4764                           
  4765                           ;code/motors.c: 19:    set_pwm(motor,pwm);
  4766  01AF  0020               	movlb	0	; select bank0
  4767  01B0  0836               	movf	set_motor@pwm,w
  4768  01B1  00B7               	movwf	??_set_motor
  4769  01B2  0837               	movf	??_set_motor,w
  4770  01B3  00A0               	movwf	set_pwm@pwm
  4771  01B4  0839               	movf	set_motor@motor,w
  4772  01B5  3181  2124  3181   	fcall	_set_pwm
  4773                           
  4774                           ;code/motors.c: 20:    break;
  4775  01B8  29DE               	goto	l156
  4776  01B9                     l2091:	
  4777                           
  4778                           ;code/motors.c: 22:    set_pwm_mode(motor,'O');
  4779  01B9  304F               	movlw	79
  4780  01BA  00B7               	movwf	??_set_motor
  4781  01BB  0837               	movf	??_set_motor,w
  4782  01BC  00AF               	movwf	set_pwm_mode@mode
  4783  01BD  0839               	movf	set_motor@motor,w
  4784  01BE  3184  2436  3181   	fcall	_set_pwm_mode
  4785  01C1                     l2093:	
  4786                           
  4787                           ;code/motors.c: 23:    set_pwm(motor,0);
  4788  01C1  0020               	movlb	0	; select bank0
  4789  01C2  01A0               	clrf	set_pwm@pwm
  4790  01C3  0839               	movf	set_motor@motor,w
  4791  01C4  3181  2124  3181   	fcall	_set_pwm
  4792                           
  4793                           ;code/motors.c: 24:    break;
  4794  01C7  29DE               	goto	l156
  4795  01C8                     l2097:	
  4796  01C8  0835               	movf	set_motor@dir,w
  4797  01C9  00B7               	movwf	??_set_motor
  4798  01CA  01B8               	clrf	??_set_motor+1
  4799                           
  4800                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4801                           ; Switch size 1, requested type "simple"
  4802                           ; Number of cases is 1, Range of values is 0 to 0
  4803                           ; switch strategies available:
  4804                           ; Name         Instructions Cycles
  4805                           ; simple_byte            4     3 (average)
  4806                           ; direct_byte            8     6 (fixed)
  4807                           ; jumptable            260     6 (fixed)
  4808                           ;	Chosen strategy is simple_byte
  4809  01CB  0838               	movf	??_set_motor+1,w
  4810  01CC  3A00               	xorlw	0	; case 0
  4811  01CD  1903               	skipnz
  4812  01CE  29D0               	goto	l2423
  4813  01CF  29DE               	goto	l156
  4814  01D0                     l2423:	
  4815                           
  4816                           ; Switch size 1, requested type "simple"
  4817                           ; Number of cases is 4, Range of values is 0 to 3
  4818                           ; switch strategies available:
  4819                           ; Name         Instructions Cycles
  4820                           ; simple_byte           13     7 (average)
  4821                           ; direct_byte           14     6 (fixed)
  4822                           ; jumptable            260     6 (fixed)
  4823                           ;	Chosen strategy is simple_byte
  4824  01D0  0837               	movf	??_set_motor,w
  4825  01D1  3A00               	xorlw	0	; case 0
  4826  01D2  1903               	skipnz
  4827  01D3  2986               	goto	l2079
  4828  01D4  3A01               	xorlw	1	; case 1
  4829  01D5  1903               	skipnz
  4830  01D6  2995               	goto	l2083
  4831  01D7  3A03               	xorlw	3	; case 2
  4832  01D8  1903               	skipnz
  4833  01D9  29A7               	goto	l2087
  4834  01DA  3A01               	xorlw	1	; case 3
  4835  01DB  1903               	skipnz
  4836  01DC  29B9               	goto	l2091
  4837  01DD  29DE               	goto	l156
  4838  01DE                     l156:	
  4839  01DE  0008               	return
  4840  01DF                     __end_of_set_motor:	
  4841                           
  4842                           	psect	text9
  4843  0436                     __ptext9:	
  4844 ;; *************** function _set_pwm_mode *****************
  4845 ;; Defined at:
  4846 ;;		line 141 in file "code/pwm.c"
  4847 ;; Parameters:    Size  Location     Type
  4848 ;;  motor           1    wreg     unsigned char 
  4849 ;;  mode            1   15[BANK0 ] unsigned char 
  4850 ;; Auto vars:     Size  Location     Type
  4851 ;;  motor           1   18[BANK0 ] unsigned char 
  4852 ;;  b               1   20[BANK0 ] unsigned char 
  4853 ;;  a               1   19[BANK0 ] unsigned char 
  4854 ;; Return value:  Size  Location     Type
  4855 ;;                  1    wreg      void 
  4856 ;; Registers used:
  4857 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4858 ;; Tracked objects:
  4859 ;;		On entry : 0/0
  4860 ;;		On exit  : 0/0
  4861 ;;		Unchanged: 0/0
  4862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4863 ;;      Params:         0       1       0       0       0       0       0       0
  4864 ;;      Locals:         0       3       0       0       0       0       0       0
  4865 ;;      Temps:          0       2       0       0       0       0       0       0
  4866 ;;      Totals:         0       6       0       0       0       0       0       0
  4867 ;;Total ram usage:        6 bytes
  4868 ;; Hardware stack levels used:    1
  4869 ;; Hardware stack levels required when called:    5
  4870 ;; This function calls:
  4871 ;;		_get_a_val
  4872 ;;		_get_b_val
  4873 ;;		_set_motor_pps
  4874 ;; This function is called by:
  4875 ;;		_set_motor
  4876 ;;		_update_ctl
  4877 ;; This function uses a non-reentrant model
  4878 ;;
  4879                           
  4880                           
  4881                           ;psect for function _set_pwm_mode
  4882  0436                     _set_pwm_mode:	
  4883                           
  4884                           ;incstack = 0
  4885                           ; Regs used in _set_pwm_mode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4886                           ;set_pwm_mode@motor stored from wreg
  4887  0436  0020               	movlb	0	; select bank0
  4888  0437  00B2               	movwf	set_pwm_mode@motor
  4889  0438                     l2027:	
  4890                           
  4891                           ;code/pwm.c: 141: void set_pwm_mode(u8 motor,char mode);code/pwm.c: 142: {;code/pwm.c: 1
      +                          43:      u8 a = get_a_val(mode);
  4892  0438  082F               	movf	set_pwm_mode@mode,w
  4893  0439  3183  23F7  3184   	fcall	_get_a_val
  4894  043C  0020               	movlb	0	; select bank0
  4895  043D  00B0               	movwf	??_set_pwm_mode
  4896  043E  0830               	movf	??_set_pwm_mode,w
  4897  043F  00B3               	movwf	set_pwm_mode@a
  4898                           
  4899                           ;code/pwm.c: 144:      u8 b = get_b_val(mode);
  4900  0440  082F               	movf	set_pwm_mode@mode,w
  4901  0441  3183  23D7  3184   	fcall	_get_b_val
  4902  0444  0020               	movlb	0	; select bank0
  4903  0445  00B0               	movwf	??_set_pwm_mode
  4904  0446  0830               	movf	??_set_pwm_mode,w
  4905  0447  00B4               	movwf	set_pwm_mode@b
  4906  0448                     l2029:	
  4907                           
  4908                           ;code/pwm.c: 145:      set_motor_pps(motor,a,b);
  4909  0448  0833               	movf	set_pwm_mode@a,w
  4910  0449  00B0               	movwf	??_set_pwm_mode
  4911  044A  0830               	movf	??_set_pwm_mode,w
  4912  044B  00A0               	movwf	set_motor_pps@a_mode
  4913  044C  0834               	movf	set_pwm_mode@b,w
  4914  044D  00B1               	movwf	??_set_pwm_mode+1
  4915  044E  0831               	movf	??_set_pwm_mode+1,w
  4916  044F  00A1               	movwf	set_motor_pps@b_mode
  4917  0450  0832               	movf	set_pwm_mode@motor,w
  4918  0451  3180  2037  3184   	fcall	_set_motor_pps
  4919  0454                     l280:	
  4920  0454  0008               	return
  4921  0455                     __end_of_set_pwm_mode:	
  4922                           
  4923                           	psect	text10
  4924  03D7                     __ptext10:	
  4925 ;; *************** function _get_b_val *****************
  4926 ;; Defined at:
  4927 ;;		line 81 in file "code/pwm.c"
  4928 ;; Parameters:    Size  Location     Type
  4929 ;;  mode            1    wreg     unsigned char 
  4930 ;; Auto vars:     Size  Location     Type
  4931 ;;  mode            1    2[BANK0 ] unsigned char 
  4932 ;; Return value:  Size  Location     Type
  4933 ;;                  1    wreg      unsigned char 
  4934 ;; Registers used:
  4935 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4936 ;; Tracked objects:
  4937 ;;		On entry : 0/0
  4938 ;;		On exit  : 0/0
  4939 ;;		Unchanged: 0/0
  4940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4941 ;;      Params:         0       0       0       0       0       0       0       0
  4942 ;;      Locals:         0       1       0       0       0       0       0       0
  4943 ;;      Temps:          0       2       0       0       0       0       0       0
  4944 ;;      Totals:         0       3       0       0       0       0       0       0
  4945 ;;Total ram usage:        3 bytes
  4946 ;; Hardware stack levels used:    1
  4947 ;; Hardware stack levels required when called:    4
  4948 ;; This function calls:
  4949 ;;		Nothing
  4950 ;; This function is called by:
  4951 ;;		_set_pwm_mode
  4952 ;; This function uses a non-reentrant model
  4953 ;;
  4954                           
  4955                           
  4956                           ;psect for function _get_b_val
  4957  03D7                     _get_b_val:	
  4958                           
  4959                           ;incstack = 0
  4960                           ; Regs used in _get_b_val: [wreg-fsr0h+status,2+status,0]
  4961                           ;get_b_val@mode stored from wreg
  4962  03D7  0020               	movlb	0	; select bank0
  4963  03D8  00A2               	movwf	get_b_val@mode
  4964  03D9                     l1999:	
  4965                           
  4966                           ;code/pwm.c: 81: static u8 get_b_val(char mode);code/pwm.c: 82: {;code/pwm.c: 83:      s
      +                          witch(mode){
  4967  03D9  2BE0               	goto	l2019
  4968  03DA                     l2001:	
  4969                           
  4970                           ;code/pwm.c: 85:    return 1;
  4971  03DA  3001               	movlw	1
  4972  03DB  2BF6               	goto	l253
  4973  03DC                     l2005:	
  4974                           
  4975                           ;code/pwm.c: 87:    return 2;
  4976  03DC  3002               	movlw	2
  4977  03DD  2BF6               	goto	l253
  4978  03DE                     l2013:	
  4979                           
  4980                           ;code/pwm.c: 92:    return 0;
  4981  03DE  3000               	movlw	0
  4982  03DF  2BF6               	goto	l253
  4983  03E0                     l2019:	
  4984  03E0  0822               	movf	get_b_val@mode,w
  4985  03E1  00A0               	movwf	??_get_b_val
  4986  03E2  01A1               	clrf	??_get_b_val+1
  4987                           
  4988                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4989                           ; Switch size 1, requested type "simple"
  4990                           ; Number of cases is 1, Range of values is 0 to 0
  4991                           ; switch strategies available:
  4992                           ; Name         Instructions Cycles
  4993                           ; simple_byte            4     3 (average)
  4994                           ; direct_byte            8     6 (fixed)
  4995                           ; jumptable            260     6 (fixed)
  4996                           ;	Chosen strategy is simple_byte
  4997  03E3  0821               	movf	??_get_b_val+1,w
  4998  03E4  3A00               	xorlw	0	; case 0
  4999  03E5  1903               	skipnz
  5000  03E6  2BE8               	goto	l2425
  5001  03E7  2BDE               	goto	l2013
  5002  03E8                     l2425:	
  5003                           
  5004                           ; Switch size 1, requested type "simple"
  5005                           ; Number of cases is 4, Range of values is 65 to 83
  5006                           ; switch strategies available:
  5007                           ; Name         Instructions Cycles
  5008                           ; simple_byte           13     7 (average)
  5009                           ; direct_byte           47     9 (fixed)
  5010                           ; jumptable            263     9 (fixed)
  5011                           ;	Chosen strategy is simple_byte
  5012  03E8  0820               	movf	??_get_b_val,w
  5013  03E9  3A41               	xorlw	65	; case 65
  5014  03EA  1903               	skipnz
  5015  03EB  2BDA               	goto	l2001
  5016  03EC  3A02               	xorlw	2	; case 67
  5017  03ED  1903               	skipnz
  5018  03EE  2BDC               	goto	l2005
  5019  03EF  3A0C               	xorlw	12	; case 79
  5020  03F0  1903               	skipnz
  5021  03F1  2BDE               	goto	l2013
  5022  03F2  3A1C               	xorlw	28	; case 83
  5023  03F3  1903               	skipnz
  5024  03F4  2BDA               	goto	l2001
  5025  03F5  2BDE               	goto	l2013
  5026  03F6                     l253:	
  5027  03F6  0008               	return
  5028  03F7                     __end_of_get_b_val:	
  5029                           
  5030                           	psect	text11
  5031  03F7                     __ptext11:	
  5032 ;; *************** function _get_a_val *****************
  5033 ;; Defined at:
  5034 ;;		line 66 in file "code/pwm.c"
  5035 ;; Parameters:    Size  Location     Type
  5036 ;;  mode            1    wreg     unsigned char 
  5037 ;; Auto vars:     Size  Location     Type
  5038 ;;  mode            1    2[BANK0 ] unsigned char 
  5039 ;; Return value:  Size  Location     Type
  5040 ;;                  1    wreg      unsigned char 
  5041 ;; Registers used:
  5042 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5043 ;; Tracked objects:
  5044 ;;		On entry : 0/0
  5045 ;;		On exit  : 0/0
  5046 ;;		Unchanged: 0/0
  5047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5048 ;;      Params:         0       0       0       0       0       0       0       0
  5049 ;;      Locals:         0       1       0       0       0       0       0       0
  5050 ;;      Temps:          0       2       0       0       0       0       0       0
  5051 ;;      Totals:         0       3       0       0       0       0       0       0
  5052 ;;Total ram usage:        3 bytes
  5053 ;; Hardware stack levels used:    1
  5054 ;; Hardware stack levels required when called:    4
  5055 ;; This function calls:
  5056 ;;		Nothing
  5057 ;; This function is called by:
  5058 ;;		_set_pwm_mode
  5059 ;; This function uses a non-reentrant model
  5060 ;;
  5061                           
  5062                           
  5063                           ;psect for function _get_a_val
  5064  03F7                     _get_a_val:	
  5065                           
  5066                           ;incstack = 0
  5067                           ; Regs used in _get_a_val: [wreg-fsr0h+status,2+status,0]
  5068                           ;get_a_val@mode stored from wreg
  5069  03F7  0020               	movlb	0	; select bank0
  5070  03F8  00A2               	movwf	get_a_val@mode
  5071  03F9                     l1971:	
  5072                           
  5073                           ;code/pwm.c: 66: static u8 get_a_val(char mode);code/pwm.c: 67: {;code/pwm.c: 68:      s
      +                          witch(mode){
  5074  03F9  2C00               	goto	l1991
  5075  03FA                     l1973:	
  5076                           
  5077                           ;code/pwm.c: 70:    return 1;
  5078  03FA  3001               	movlw	1
  5079  03FB  2C16               	goto	l243
  5080  03FC                     l1981:	
  5081                           
  5082                           ;code/pwm.c: 74:    return 2;
  5083  03FC  3002               	movlw	2
  5084  03FD  2C16               	goto	l243
  5085  03FE                     l1985:	
  5086                           
  5087                           ;code/pwm.c: 77:    return 0;
  5088  03FE  3000               	movlw	0
  5089  03FF  2C16               	goto	l243
  5090  0400                     l1991:	
  5091  0400  0822               	movf	get_a_val@mode,w
  5092  0401  00A0               	movwf	??_get_a_val
  5093  0402  01A1               	clrf	??_get_a_val+1
  5094                           
  5095                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5096                           ; Switch size 1, requested type "simple"
  5097                           ; Number of cases is 1, Range of values is 0 to 0
  5098                           ; switch strategies available:
  5099                           ; Name         Instructions Cycles
  5100                           ; simple_byte            4     3 (average)
  5101                           ; direct_byte            8     6 (fixed)
  5102                           ; jumptable            260     6 (fixed)
  5103                           ;	Chosen strategy is simple_byte
  5104  0403  0821               	movf	??_get_a_val+1,w
  5105  0404  3A00               	xorlw	0	; case 0
  5106  0405  1903               	skipnz
  5107  0406  2C08               	goto	l2427
  5108  0407  2BFE               	goto	l1985
  5109  0408                     l2427:	
  5110                           
  5111                           ; Switch size 1, requested type "simple"
  5112                           ; Number of cases is 4, Range of values is 65 to 83
  5113                           ; switch strategies available:
  5114                           ; Name         Instructions Cycles
  5115                           ; simple_byte           13     7 (average)
  5116                           ; direct_byte           47     9 (fixed)
  5117                           ; jumptable            263     9 (fixed)
  5118                           ;	Chosen strategy is simple_byte
  5119  0408  0820               	movf	??_get_a_val,w
  5120  0409  3A41               	xorlw	65	; case 65
  5121  040A  1903               	skipnz
  5122  040B  2BFC               	goto	l1981
  5123  040C  3A02               	xorlw	2	; case 67
  5124  040D  1903               	skipnz
  5125  040E  2BFA               	goto	l1973
  5126  040F  3A0C               	xorlw	12	; case 79
  5127  0410  1903               	skipnz
  5128  0411  2BFE               	goto	l1985
  5129  0412  3A1C               	xorlw	28	; case 83
  5130  0413  1903               	skipnz
  5131  0414  2BFA               	goto	l1973
  5132  0415  2BFE               	goto	l1985
  5133  0416                     l243:	
  5134  0416  0008               	return
  5135  0417                     __end_of_get_a_val:	
  5136                           
  5137                           	psect	text12
  5138  0124                     __ptext12:	
  5139 ;; *************** function _set_pwm *****************
  5140 ;; Defined at:
  5141 ;;		line 148 in file "code/pwm.c"
  5142 ;; Parameters:    Size  Location     Type
  5143 ;;  motor           1    wreg     unsigned char 
  5144 ;;  pwm             1    0[BANK0 ] unsigned char 
  5145 ;; Auto vars:     Size  Location     Type
  5146 ;;  motor           1    3[BANK0 ] unsigned char 
  5147 ;; Return value:  Size  Location     Type
  5148 ;;                  1    wreg      void 
  5149 ;; Registers used:
  5150 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5151 ;; Tracked objects:
  5152 ;;		On entry : 0/0
  5153 ;;		On exit  : 0/0
  5154 ;;		Unchanged: 0/0
  5155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5156 ;;      Params:         0       1       0       0       0       0       0       0
  5157 ;;      Locals:         0       1       0       0       0       0       0       0
  5158 ;;      Temps:          0       2       0       0       0       0       0       0
  5159 ;;      Totals:         0       4       0       0       0       0       0       0
  5160 ;;Total ram usage:        4 bytes
  5161 ;; Hardware stack levels used:    1
  5162 ;; Hardware stack levels required when called:    4
  5163 ;; This function calls:
  5164 ;;		Nothing
  5165 ;; This function is called by:
  5166 ;;		_set_motor
  5167 ;; This function uses a non-reentrant model
  5168 ;;
  5169                           
  5170                           
  5171                           ;psect for function _set_pwm
  5172  0124                     _set_pwm:	
  5173                           
  5174                           ;incstack = 0
  5175                           ; Regs used in _set_pwm: [wreg-fsr0h+status,2+status,0]
  5176                           ;set_pwm@motor stored from wreg
  5177  0124  0020               	movlb	0	; select bank0
  5178  0125  00A3               	movwf	set_pwm@motor
  5179  0126                     l2031:	
  5180                           
  5181                           ;code/pwm.c: 148: void set_pwm(u8 motor,u8 pwm);code/pwm.c: 149: {;code/pwm.c: 150:     
      +                           switch(motor){
  5182  0126  296C               	goto	l2047
  5183  0127                     l2033:	
  5184                           
  5185                           ;code/pwm.c: 152:    PWM3DCH = pwm >> 2;
  5186  0127  0820               	movf	set_pwm@pwm,w
  5187  0128  00A1               	movwf	??_set_pwm
  5188  0129  3002               	movlw	2
  5189  012A                     u1055:	
  5190  012A  36A1               	lsrf	??_set_pwm,f
  5191  012B  0B89               	decfsz	9,f
  5192  012C  292A               	goto	u1055
  5193  012D  0821               	movf	??_set_pwm,w
  5194  012E  002C               	movlb	12	; select bank12
  5195  012F  0095               	movwf	21	;volatile
  5196                           
  5197                           ;code/pwm.c: 153:    PWM3DCL = pwm << 6;
  5198  0130  0020               	movlb	0	; select bank0
  5199  0131  0820               	movf	set_pwm@pwm,w
  5200  0132  00A1               	movwf	??_set_pwm
  5201  0133  3005               	movlw	5
  5202  0134                     u1065:	
  5203  0134  35A1               	lslf	??_set_pwm,f
  5204  0135  3EFF               	addlw	-1
  5205  0136  1D03               	skipz
  5206  0137  2934               	goto	u1065
  5207  0138  3521               	lslf	??_set_pwm,w
  5208  0139  002C               	movlb	12	; select bank12
  5209  013A  0094               	movwf	20	;volatile
  5210                           
  5211                           ;code/pwm.c: 154:    break;
  5212  013B  2982               	goto	l289
  5213  013C                     l2035:	
  5214                           
  5215                           ;code/pwm.c: 156:    PWM4DCH = pwm >> 2;
  5216  013C  0820               	movf	set_pwm@pwm,w
  5217  013D  00A1               	movwf	??_set_pwm
  5218  013E  3002               	movlw	2
  5219  013F                     u1075:	
  5220  013F  36A1               	lsrf	??_set_pwm,f
  5221  0140  0B89               	decfsz	9,f
  5222  0141  293F               	goto	u1075
  5223  0142  0821               	movf	??_set_pwm,w
  5224  0143  002C               	movlb	12	; select bank12
  5225  0144  0098               	movwf	24	;volatile
  5226                           
  5227                           ;code/pwm.c: 157:    PWM4DCL = pwm << 6;
  5228  0145  0020               	movlb	0	; select bank0
  5229  0146  0820               	movf	set_pwm@pwm,w
  5230  0147  00A1               	movwf	??_set_pwm
  5231  0148  3005               	movlw	5
  5232  0149                     u1085:	
  5233  0149  35A1               	lslf	??_set_pwm,f
  5234  014A  3EFF               	addlw	-1
  5235  014B  1D03               	skipz
  5236  014C  2949               	goto	u1085
  5237  014D  3521               	lslf	??_set_pwm,w
  5238  014E  002C               	movlb	12	; select bank12
  5239  014F  0097               	movwf	23	;volatile
  5240                           
  5241                           ;code/pwm.c: 158:    break;
  5242  0150  2982               	goto	l289
  5243  0151                     l2037:	
  5244                           
  5245                           ;code/pwm.c: 160:    PWM9DCH = pwm >> 2;
  5246  0151  0820               	movf	set_pwm@pwm,w
  5247  0152  00A1               	movwf	??_set_pwm
  5248  0153  3002               	movlw	2
  5249  0154                     u1095:	
  5250  0154  36A1               	lsrf	??_set_pwm,f
  5251  0155  0B89               	decfsz	9,f
  5252  0156  2954               	goto	u1095
  5253  0157  0821               	movf	??_set_pwm,w
  5254  0158  002C               	movlb	12	; select bank12
  5255  0159  009B               	movwf	27	;volatile
  5256                           
  5257                           ;code/pwm.c: 161:    PWM9DCL = pwm << 6;
  5258  015A  0020               	movlb	0	; select bank0
  5259  015B  0820               	movf	set_pwm@pwm,w
  5260  015C  00A1               	movwf	??_set_pwm
  5261  015D  3005               	movlw	5
  5262  015E                     u1105:	
  5263  015E  35A1               	lslf	??_set_pwm,f
  5264  015F  3EFF               	addlw	-1
  5265  0160  1D03               	skipz
  5266  0161  295E               	goto	u1105
  5267  0162  3521               	lslf	??_set_pwm,w
  5268  0163  002C               	movlb	12	; select bank12
  5269  0164  009A               	movwf	26	;volatile
  5270                           
  5271                           ;code/pwm.c: 162:    break;
  5272  0165  2982               	goto	l289
  5273  0166                     l2039:	
  5274                           
  5275                           ;code/pwm.c: 164:    PWM5DCL = pwm;
  5276  0166  0820               	movf	set_pwm@pwm,w
  5277  0167  003B               	movlb	27	; select bank27
  5278  0168  0093               	movwf	19	;volatile
  5279  0169                     l2041:	
  5280                           
  5281                           ;code/pwm.c: 165:    PWM5DCH = 0;
  5282  0169  0194               	clrf	20	;volatile
  5283  016A                     l2043:	
  5284                           
  5285                           ;code/pwm.c: 166:        PWM5LDCONbits.LDA = 1;
  5286  016A  179F               	bsf	31,7	;volatile
  5287                           
  5288                           ;code/pwm.c: 167:    break;
  5289  016B  2982               	goto	l289
  5290  016C                     l2047:	
  5291  016C  0823               	movf	set_pwm@motor,w
  5292  016D  00A1               	movwf	??_set_pwm
  5293  016E  01A2               	clrf	??_set_pwm+1
  5294                           
  5295                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5296                           ; Switch size 1, requested type "simple"
  5297                           ; Number of cases is 1, Range of values is 0 to 0
  5298                           ; switch strategies available:
  5299                           ; Name         Instructions Cycles
  5300                           ; simple_byte            4     3 (average)
  5301                           ; direct_byte            8     6 (fixed)
  5302                           ; jumptable            260     6 (fixed)
  5303                           ;	Chosen strategy is simple_byte
  5304  016F  0822               	movf	??_set_pwm+1,w
  5305  0170  3A00               	xorlw	0	; case 0
  5306  0171  1903               	skipnz
  5307  0172  2974               	goto	l2429
  5308  0173  2982               	goto	l289
  5309  0174                     l2429:	
  5310                           
  5311                           ; Switch size 1, requested type "simple"
  5312                           ; Number of cases is 4, Range of values is 1 to 4
  5313                           ; switch strategies available:
  5314                           ; Name         Instructions Cycles
  5315                           ; simple_byte           13     7 (average)
  5316                           ; direct_byte           17     9 (fixed)
  5317                           ; jumptable            263     9 (fixed)
  5318                           ;	Chosen strategy is simple_byte
  5319  0174  0821               	movf	??_set_pwm,w
  5320  0175  3A01               	xorlw	1	; case 1
  5321  0176  1903               	skipnz
  5322  0177  2927               	goto	l2033
  5323  0178  3A03               	xorlw	3	; case 2
  5324  0179  1903               	skipnz
  5325  017A  293C               	goto	l2035
  5326  017B  3A01               	xorlw	1	; case 3
  5327  017C  1903               	skipnz
  5328  017D  2951               	goto	l2037
  5329  017E  3A07               	xorlw	7	; case 4
  5330  017F  1903               	skipnz
  5331  0180  2966               	goto	l2039
  5332  0181  2982               	goto	l289
  5333  0182                     l289:	
  5334  0182  0008               	return
  5335  0183                     __end_of_set_pwm:	
  5336                           
  5337                           	psect	text13
  5338  0455                     __ptext13:	
  5339 ;; *************** function _i2c_isr *****************
  5340 ;; Defined at:
  5341 ;;		line 68 in file "code/i2c.c"
  5342 ;; Parameters:    Size  Location     Type
  5343 ;;		None
  5344 ;; Auto vars:     Size  Location     Type
  5345 ;;		None
  5346 ;; Return value:  Size  Location     Type
  5347 ;;                  1    wreg      void 
  5348 ;; Registers used:
  5349 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5350 ;; Tracked objects:
  5351 ;;		On entry : 0/0
  5352 ;;		On exit  : 0/0
  5353 ;;		Unchanged: 0/0
  5354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5355 ;;      Params:         0       0       0       0       0       0       0       0
  5356 ;;      Locals:         0       0       0       0       0       0       0       0
  5357 ;;      Temps:          0       0       0       0       0       0       0       0
  5358 ;;      Totals:         0       0       0       0       0       0       0       0
  5359 ;;Total ram usage:        0 bytes
  5360 ;; Hardware stack levels used:    1
  5361 ;; Hardware stack levels required when called:    6
  5362 ;; This function calls:
  5363 ;;		_handle_read
  5364 ;;		_handle_write
  5365 ;; This function is called by:
  5366 ;;		_main
  5367 ;; This function uses a non-reentrant model
  5368 ;;
  5369                           
  5370                           
  5371                           ;psect for function _i2c_isr
  5372  0455                     _i2c_isr:	
  5373  0455                     l2187:	
  5374                           ;incstack = 0
  5375                           ; Regs used in _i2c_isr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5376                           
  5377                           
  5378                           ;code/i2c.c: 70:      PIR1bits.SSP1IF = 0;
  5379  0455  0020               	movlb	0	; select bank0
  5380  0456  1191               	bcf	17,3	;volatile
  5381                           
  5382                           ;code/i2c.c: 71:      if(SSP1STATbits.R_nW) handle_read();
  5383  0457  0024               	movlb	4	; select bank4
  5384  0458  1D14               	btfss	20,2	;volatile
  5385  0459  2C5B               	goto	u1251
  5386  045A  2C5C               	goto	u1250
  5387  045B                     u1251:	
  5388  045B  2C60               	goto	l2191
  5389  045C                     u1250:	
  5390  045C                     l2189:	
  5391  045C  3184  2497  3184   	fcall	_handle_read
  5392  045F  2C63               	goto	l2193
  5393  0460                     l2191:	
  5394  0460  3182  22F3  3184   	fcall	_handle_write
  5395  0463                     l2193:	
  5396                           
  5397                           ;code/i2c.c: 73:      SSP1CONbits.CKP = 1;
  5398  0463  0024               	movlb	4	; select bank4
  5399  0464  1615               	bsf	21,4	;volatile
  5400  0465                     l60:	
  5401  0465  0008               	return
  5402  0466                     __end_of_i2c_isr:	
  5403                           
  5404                           	psect	text14
  5405  02F3                     __ptext14:	
  5406 ;; *************** function _handle_write *****************
  5407 ;; Defined at:
  5408 ;;		line 84 in file "code/i2c.c"
  5409 ;; Parameters:    Size  Location     Type
  5410 ;;		None
  5411 ;; Auto vars:     Size  Location     Type
  5412 ;;  buf             1    5[BANK0 ] unsigned char 
  5413 ;; Return value:  Size  Location     Type
  5414 ;;                  1    wreg      void 
  5415 ;; Registers used:
  5416 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5417 ;; Tracked objects:
  5418 ;;		On entry : 0/0
  5419 ;;		On exit  : 0/0
  5420 ;;		Unchanged: 0/0
  5421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5422 ;;      Params:         0       0       0       0       0       0       0       0
  5423 ;;      Locals:         0       1       0       0       0       0       0       0
  5424 ;;      Temps:          0       1       0       0       0       0       0       0
  5425 ;;      Totals:         0       2       0       0       0       0       0       0
  5426 ;;Total ram usage:        2 bytes
  5427 ;; Hardware stack levels used:    1
  5428 ;; Hardware stack levels required when called:    5
  5429 ;; This function calls:
  5430 ;;		_write_register
  5431 ;; This function is called by:
  5432 ;;		_i2c_isr
  5433 ;; This function uses a non-reentrant model
  5434 ;;
  5435                           
  5436                           
  5437                           ;psect for function _handle_write
  5438  02F3                     _handle_write:	
  5439  02F3                     l2111:	
  5440                           ;incstack = 0
  5441                           ; Regs used in _handle_write: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5442                           
  5443                           
  5444                           ;code/i2c.c: 86:      u8 buf = SSP1BUF;
  5445  02F3  0024               	movlb	4	; select bank4
  5446  02F4  0811               	movf	17,w	;volatile
  5447  02F5  0020               	movlb	0	; select bank0
  5448  02F6  00A4               	movwf	??_handle_write
  5449  02F7  0824               	movf	??_handle_write,w
  5450  02F8  00A5               	movwf	handle_write@buf
  5451  02F9                     l2113:	
  5452                           
  5453                           ;code/i2c.c: 88:      if(!SSP1STATbits.D_nA){
  5454  02F9  0024               	movlb	4	; select bank4
  5455  02FA  1A94               	btfsc	20,5	;volatile
  5456  02FB  2AFD               	goto	u1131
  5457  02FC  2AFE               	goto	u1130
  5458  02FD                     u1131:	
  5459  02FD  2B02               	goto	l2117
  5460  02FE                     u1130:	
  5461  02FE                     l2115:	
  5462                           
  5463                           ;code/i2c.c: 89:    first_write = 1;
  5464  02FE  0020               	movlb	0	; select bank0
  5465  02FF  01C9               	clrf	_first_write
  5466  0300  0AC9               	incf	_first_write,f
  5467                           
  5468                           ;code/i2c.c: 90:    return;
  5469  0301  2B1B               	goto	l67
  5470  0302                     l2117:	
  5471                           
  5472                           ;code/i2c.c: 92:      if(first_write){
  5473  0302  0020               	movlb	0	; select bank0
  5474  0303  0849               	movf	_first_write,w
  5475  0304  1903               	btfsc	3,2
  5476  0305  2B07               	goto	u1141
  5477  0306  2B08               	goto	u1140
  5478  0307                     u1141:	
  5479  0307  2B0E               	goto	l2123
  5480  0308                     u1140:	
  5481  0308                     l2119:	
  5482                           
  5483                           ;code/i2c.c: 93:    current_reg = buf;
  5484  0308  0825               	movf	handle_write@buf,w
  5485  0309  00A4               	movwf	??_handle_write
  5486  030A  0824               	movf	??_handle_write,w
  5487  030B  00CA               	movwf	_current_reg
  5488  030C                     l2121:	
  5489                           
  5490                           ;code/i2c.c: 94:    first_write = 0;
  5491  030C  01C9               	clrf	_first_write
  5492                           
  5493                           ;code/i2c.c: 95:      }else{
  5494  030D  2B1B               	goto	l67
  5495  030E                     l2123:	
  5496                           
  5497                           ;code/i2c.c: 96:    write_register(current_reg++,buf);
  5498  030E  0825               	movf	handle_write@buf,w
  5499  030F  00A4               	movwf	??_handle_write
  5500  0310  0824               	movf	??_handle_write,w
  5501  0311  00A0               	movwf	write_register@val
  5502  0312  084A               	movf	_current_reg,w
  5503  0313  3183  231C  3182   	fcall	_write_register
  5504  0316                     l2125:	
  5505  0316  3001               	movlw	1
  5506  0317  0020               	movlb	0	; select bank0
  5507  0318  00A4               	movwf	??_handle_write
  5508  0319  0824               	movf	??_handle_write,w
  5509  031A  07CA               	addwf	_current_reg,f
  5510  031B                     l67:	
  5511  031B  0008               	return
  5512  031C                     __end_of_handle_write:	
  5513                           
  5514                           	psect	text15
  5515  031C                     __ptext15:	
  5516 ;; *************** function _write_register *****************
  5517 ;; Defined at:
  5518 ;;		line 100 in file "code/i2c.c"
  5519 ;; Parameters:    Size  Location     Type
  5520 ;;  reg             1    wreg     unsigned char 
  5521 ;;  val             1    0[BANK0 ] unsigned char 
  5522 ;; Auto vars:     Size  Location     Type
  5523 ;;  reg             1    3[BANK0 ] unsigned char 
  5524 ;;  msk             1    2[BANK0 ] unsigned char 
  5525 ;; Return value:  Size  Location     Type
  5526 ;;                  1    wreg      void 
  5527 ;; Registers used:
  5528 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5529 ;; Tracked objects:
  5530 ;;		On entry : 0/0
  5531 ;;		On exit  : 0/0
  5532 ;;		Unchanged: 0/0
  5533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5534 ;;      Params:         0       1       0       0       0       0       0       0
  5535 ;;      Locals:         0       2       0       0       0       0       0       0
  5536 ;;      Temps:          0       1       0       0       0       0       0       0
  5537 ;;      Totals:         0       4       0       0       0       0       0       0
  5538 ;;Total ram usage:        4 bytes
  5539 ;; Hardware stack levels used:    1
  5540 ;; Hardware stack levels required when called:    4
  5541 ;; This function calls:
  5542 ;;		Nothing
  5543 ;; This function is called by:
  5544 ;;		_handle_write
  5545 ;; This function uses a non-reentrant model
  5546 ;;
  5547                           
  5548                           
  5549                           ;psect for function _write_register
  5550  031C                     _write_register:	
  5551                           
  5552                           ;incstack = 0
  5553                           ; Regs used in _write_register: [wreg+fsr1l+fsr1h+status,2+status,0]
  5554                           ;write_register@reg stored from wreg
  5555  031C  0020               	movlb	0	; select bank0
  5556  031D  00A3               	movwf	write_register@reg
  5557  031E                     l2065:	
  5558                           
  5559                           ;code/i2c.c: 100: static void write_register(u8 reg,u8 val);code/i2c.c: 101: {;code/i2c.
      +                          c: 102:      if(reg >= 10) return;
  5560  031E  300A               	movlw	10
  5561  031F  0223               	subwf	write_register@reg,w
  5562  0320  1C03               	skipc
  5563  0321  2B23               	goto	u1121
  5564  0322  2B24               	goto	u1120
  5565  0323                     u1121:	
  5566  0323  2B25               	goto	l2069
  5567  0324                     u1120:	
  5568  0324  2B42               	goto	l73
  5569  0325                     l2069:	
  5570                           
  5571                           ;code/i2c.c: 103:      u8 msk = writeable_reg[reg];
  5572  0325  0823               	movf	write_register@reg,w
  5573  0326  3E4B               	addlw	(low (_writeable_reg| 0))& (0+255)
  5574  0327  0086               	movwf	6
  5575  0328  0187               	clrf	7
  5576  0329  0801               	movf	1,w
  5577  032A  00A1               	movwf	??_write_register
  5578  032B  0821               	movf	??_write_register,w
  5579  032C  00A2               	movwf	write_register@msk
  5580  032D                     l2071:	
  5581                           
  5582                           ;code/i2c.c: 106:      val &= msk;
  5583  032D  0822               	movf	write_register@msk,w
  5584  032E  00A1               	movwf	??_write_register
  5585  032F  0821               	movf	??_write_register,w
  5586  0330  05A0               	andwf	write_register@val,f
  5587  0331                     l2073:	
  5588                           
  5589                           ;code/i2c.c: 107:      val |= (i2c_registers[reg] & ~msk);
  5590  0331  0823               	movf	write_register@reg,w
  5591  0332  3E3E               	addlw	(low (_i2c_registers| 0))& (0+255)
  5592  0333  0086               	movwf	6
  5593  0334  0187               	clrf	7
  5594  0335  0922               	comf	write_register@msk,w
  5595  0336  0501               	andwf	1,w
  5596  0337  00A1               	movwf	??_write_register
  5597  0338  0821               	movf	??_write_register,w
  5598  0339  04A0               	iorwf	write_register@val,f
  5599  033A                     l2075:	
  5600                           
  5601                           ;code/i2c.c: 108:  i2c_registers[reg] = val;
  5602  033A  0820               	movf	write_register@val,w
  5603  033B  00A1               	movwf	??_write_register
  5604  033C  0823               	movf	write_register@reg,w
  5605  033D  3E3E               	addlw	(low (_i2c_registers| 0))& (0+255)
  5606  033E  0086               	movwf	6
  5607  033F  0187               	clrf	7
  5608  0340  0821               	movf	??_write_register,w
  5609  0341  0081               	movwf	1
  5610  0342                     l73:	
  5611  0342  0008               	return
  5612  0343                     __end_of_write_register:	
  5613                           
  5614                           	psect	text16
  5615  0497                     __ptext16:	
  5616 ;; *************** function _handle_read *****************
  5617 ;; Defined at:
  5618 ;;		line 76 in file "code/i2c.c"
  5619 ;; Parameters:    Size  Location     Type
  5620 ;;		None
  5621 ;; Auto vars:     Size  Location     Type
  5622 ;;  buf             1    3[BANK0 ] unsigned char 
  5623 ;;  x               1    0        unsigned char 
  5624 ;; Return value:  Size  Location     Type
  5625 ;;                  1    wreg      void 
  5626 ;; Registers used:
  5627 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5628 ;; Tracked objects:
  5629 ;;		On entry : 0/0
  5630 ;;		On exit  : 0/0
  5631 ;;		Unchanged: 0/0
  5632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5633 ;;      Params:         0       0       0       0       0       0       0       0
  5634 ;;      Locals:         0       2       0       0       0       0       0       0
  5635 ;;      Temps:          0       1       0       0       0       0       0       0
  5636 ;;      Totals:         0       3       0       0       0       0       0       0
  5637 ;;Total ram usage:        3 bytes
  5638 ;; Hardware stack levels used:    1
  5639 ;; Hardware stack levels required when called:    5
  5640 ;; This function calls:
  5641 ;;		_read_register
  5642 ;; This function is called by:
  5643 ;;		_i2c_isr
  5644 ;; This function uses a non-reentrant model
  5645 ;;
  5646                           
  5647                           
  5648                           ;psect for function _handle_read
  5649  0497                     _handle_read:	
  5650  0497                     l2105:	
  5651                           ;incstack = 0
  5652                           ; Regs used in _handle_read: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5653                           
  5654  0497  0024               	movlb	4	; select bank4
  5655  0498  0811               	movf	17,w	;volatile
  5656  0499                     l2107:	
  5657                           
  5658                           ;code/i2c.c: 79:      u8 buf = read_register(current_reg);
  5659  0499  0020               	movlb	0	; select bank0
  5660  049A  084A               	movf	_current_reg,w
  5661  049B  3184  2477  3184   	fcall	_read_register
  5662  049E  0020               	movlb	0	; select bank0
  5663  049F  00A1               	movwf	??_handle_read
  5664  04A0  0821               	movf	??_handle_read,w
  5665  04A1  00A3               	movwf	handle_read@buf
  5666  04A2                     l2109:	
  5667                           
  5668                           ;code/i2c.c: 80:      SSP1BUF = buf;
  5669  04A2  0823               	movf	handle_read@buf,w
  5670  04A3  0024               	movlb	4	; select bank4
  5671  04A4  0091               	movwf	17	;volatile
  5672  04A5                     l63:	
  5673  04A5  0008               	return
  5674  04A6                     __end_of_handle_read:	
  5675                           
  5676                           	psect	text17
  5677  0477                     __ptext17:	
  5678 ;; *************** function _read_register *****************
  5679 ;; Defined at:
  5680 ;;		line 111 in file "code/i2c.c"
  5681 ;; Parameters:    Size  Location     Type
  5682 ;;  reg             1    wreg     unsigned char 
  5683 ;; Auto vars:     Size  Location     Type
  5684 ;;  reg             1    0[BANK0 ] unsigned char 
  5685 ;; Return value:  Size  Location     Type
  5686 ;;                  1    wreg      unsigned char 
  5687 ;; Registers used:
  5688 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5689 ;; Tracked objects:
  5690 ;;		On entry : 0/0
  5691 ;;		On exit  : 0/0
  5692 ;;		Unchanged: 0/0
  5693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5694 ;;      Params:         0       0       0       0       0       0       0       0
  5695 ;;      Locals:         0       1       0       0       0       0       0       0
  5696 ;;      Temps:          0       0       0       0       0       0       0       0
  5697 ;;      Totals:         0       1       0       0       0       0       0       0
  5698 ;;Total ram usage:        1 bytes
  5699 ;; Hardware stack levels used:    1
  5700 ;; Hardware stack levels required when called:    4
  5701 ;; This function calls:
  5702 ;;		Nothing
  5703 ;; This function is called by:
  5704 ;;		_handle_read
  5705 ;; This function uses a non-reentrant model
  5706 ;;
  5707                           
  5708                           
  5709                           ;psect for function _read_register
  5710  0477                     _read_register:	
  5711                           
  5712                           ;incstack = 0
  5713                           ; Regs used in _read_register: [wreg+fsr1l+fsr1h+status,2+status,0]
  5714                           ;read_register@reg stored from wreg
  5715  0477  0020               	movlb	0	; select bank0
  5716  0478  00A0               	movwf	read_register@reg
  5717  0479                     l2055:	
  5718                           
  5719                           ;code/i2c.c: 111: static u8 read_register(u8 reg);code/i2c.c: 112: {;code/i2c.c: 113:   
      +                             if(reg >= 10) return 0;
  5720  0479  300A               	movlw	10
  5721  047A  0220               	subwf	read_register@reg,w
  5722  047B  1C03               	skipc
  5723  047C  2C7E               	goto	u1111
  5724  047D  2C7F               	goto	u1110
  5725  047E                     u1111:	
  5726  047E  2C81               	goto	l2061
  5727  047F                     u1110:	
  5728  047F                     l2057:	
  5729  047F  3000               	movlw	0
  5730  0480  2C86               	goto	l77
  5731  0481                     l2061:	
  5732                           
  5733                           ;code/i2c.c: 114:      return i2c_registers[reg];
  5734  0481  0820               	movf	read_register@reg,w
  5735  0482  3E3E               	addlw	(low (_i2c_registers| 0))& (0+255)
  5736  0483  0086               	movwf	6
  5737  0484  0187               	clrf	7
  5738  0485  0801               	movf	1,w
  5739  0486                     l77:	
  5740  0486  0008               	return
  5741  0487                     __end_of_read_register:	
  5742                           
  5743                           	psect	text18
  5744  04CD                     __ptext18:	
  5745 ;; *************** function _config_rev *****************
  5746 ;; Defined at:
  5747 ;;		line 6 in file "code/rev.c"
  5748 ;; Parameters:    Size  Location     Type
  5749 ;;		None
  5750 ;; Auto vars:     Size  Location     Type
  5751 ;;		None
  5752 ;; Return value:  Size  Location     Type
  5753 ;;                  1    wreg      void 
  5754 ;; Registers used:
  5755 ;;		wreg, status,2
  5756 ;; Tracked objects:
  5757 ;;		On entry : 0/0
  5758 ;;		On exit  : 0/0
  5759 ;;		Unchanged: 0/0
  5760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5761 ;;      Params:         0       0       0       0       0       0       0       0
  5762 ;;      Locals:         0       0       0       0       0       0       0       0
  5763 ;;      Temps:          0       0       0       0       0       0       0       0
  5764 ;;      Totals:         0       0       0       0       0       0       0       0
  5765 ;;Total ram usage:        0 bytes
  5766 ;; Hardware stack levels used:    1
  5767 ;; Hardware stack levels required when called:    4
  5768 ;; This function calls:
  5769 ;;		Nothing
  5770 ;; This function is called by:
  5771 ;;		_main
  5772 ;; This function uses a non-reentrant model
  5773 ;;
  5774                           
  5775                           
  5776                           ;psect for function _config_rev
  5777  04CD                     _config_rev:	
  5778  04CD                     l2229:	
  5779                           ;incstack = 0
  5780                           ; Regs used in _config_rev: [wreg+status,2]
  5781                           
  5782                           
  5783                           ;code/rev.c: 8:      LATB = 0;
  5784  04CD  0022               	movlb	2	; select bank2
  5785  04CE  018D               	clrf	13	;volatile
  5786  04CF                     l2231:	
  5787                           
  5788                           ;code/rev.c: 9:      TRISB = 0b11001000;
  5789  04CF  30C8               	movlw	200
  5790  04D0  0021               	movlb	1	; select bank1
  5791  04D1  008D               	movwf	13	;volatile
  5792  04D2                     l2233:	
  5793                           
  5794                           ;code/rev.c: 12:      T3CON = 0b11110000;
  5795  04D2  30F0               	movlw	240
  5796  04D3  0020               	movlb	0	; select bank0
  5797  04D4  009E               	movwf	30	;volatile
  5798  04D5                     l310:	
  5799  04D5  0008               	return
  5800  04D6                     __end_of_config_rev:	
  5801                           
  5802                           	psect	text19
  5803  0272                     __ptext19:	
  5804 ;; *************** function _config_pwm *****************
  5805 ;; Defined at:
  5806 ;;		line 28 in file "code/pwm.c"
  5807 ;; Parameters:    Size  Location     Type
  5808 ;;		None
  5809 ;; Auto vars:     Size  Location     Type
  5810 ;;		None
  5811 ;; Return value:  Size  Location     Type
  5812 ;;                  1    wreg      void 
  5813 ;; Registers used:
  5814 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5815 ;; Tracked objects:
  5816 ;;		On entry : 0/0
  5817 ;;		On exit  : 0/0
  5818 ;;		Unchanged: 0/0
  5819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5820 ;;      Params:         0       0       0       0       0       0       0       0
  5821 ;;      Locals:         0       0       0       0       0       0       0       0
  5822 ;;      Temps:          0       1       0       0       0       0       0       0
  5823 ;;      Totals:         0       1       0       0       0       0       0       0
  5824 ;;Total ram usage:        1 bytes
  5825 ;; Hardware stack levels used:    1
  5826 ;; Hardware stack levels required when called:    5
  5827 ;; This function calls:
  5828 ;;		_set_motor_pps
  5829 ;;		_set_pwms_dc
  5830 ;; This function is called by:
  5831 ;;		_main
  5832 ;; This function uses a non-reentrant model
  5833 ;;
  5834                           
  5835                           
  5836                           ;psect for function _config_pwm
  5837  0272                     _config_pwm:	
  5838  0272                     l2207:	
  5839                           ;incstack = 0
  5840                           ; Regs used in _config_pwm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5841                           
  5842                           
  5843                           ;code/pwm.c: 31:      T2CLKCON = 0b0001;
  5844  0272  3001               	movlw	1
  5845  0273  0029               	movlb	9	; select bank9
  5846  0274  0097               	movwf	23	;volatile
  5847                           
  5848                           ;code/pwm.c: 32:      T2PR = 0x3F;
  5849  0275  303F               	movlw	63
  5850  0276  0094               	movwf	20	;volatile
  5851                           
  5852                           ;code/pwm.c: 33:      T2CON = 0b10100000;
  5853  0277  30A0               	movlw	160
  5854  0278  0095               	movwf	21	;volatile
  5855                           
  5856                           ;code/pwm.c: 35:      PWM3CON = 0x90;
  5857  0279  3090               	movlw	144
  5858  027A  002C               	movlb	12	; select bank12
  5859  027B  0096               	movwf	22	;volatile
  5860                           
  5861                           ;code/pwm.c: 36:      PWM4CON = 0x90;
  5862  027C  3090               	movlw	144
  5863  027D  0099               	movwf	25	;volatile
  5864                           
  5865                           ;code/pwm.c: 37:      PWM9CON = 0x90;
  5866  027E  3090               	movlw	144
  5867  027F  009C               	movwf	28	;volatile
  5868                           
  5869                           ;code/pwm.c: 39:      PWM5CLKCON = 0b00100000;
  5870  0280  3020               	movlw	32
  5871  0281  003B               	movlb	27	; select bank27
  5872  0282  009E               	movwf	30	;volatile
  5873  0283                     l2209:	
  5874                           
  5875                           ;code/pwm.c: 40:      PWM5LDCON = 0b00000000;
  5876  0283  019F               	clrf	31	;volatile
  5877  0284                     l2211:	
  5878                           
  5879                           ;code/pwm.c: 41:      PWM5PRH = 0;
  5880  0284  0196               	clrf	22	;volatile
  5881                           
  5882                           ;code/pwm.c: 42:      PWM5PRL = 0xFF;
  5883  0285  30FF               	movlw	255
  5884  0286  0095               	movwf	21	;volatile
  5885  0287                     l2213:	
  5886                           
  5887                           ;code/pwm.c: 43:      PWM5PHH = 0;
  5888  0287  0192               	clrf	18	;volatile
  5889  0288                     l2215:	
  5890                           
  5891                           ;code/pwm.c: 44:      PWM5PHL = 0;
  5892  0288  0191               	clrf	17	;volatile
  5893                           
  5894                           ;code/pwm.c: 45:      PWM5CON = 0x90;
  5895  0289  3090               	movlw	144
  5896  028A  009B               	movwf	27	;volatile
  5897  028B                     l2217:	
  5898                           
  5899                           ;code/pwm.c: 47:      set_pwms_dc(0,0,0,0);
  5900  028B  0020               	movlb	0	; select bank0
  5901  028C  01A0               	clrf	set_pwms_dc@m4
  5902  028D  01A1               	clrf	set_pwms_dc@m9
  5903  028E  01A2               	clrf	set_pwms_dc@m5
  5904  028F  3000               	movlw	0
  5905  0290  3182  222A  3182   	fcall	_set_pwms_dc
  5906  0293                     l2219:	
  5907                           
  5908                           ;code/pwm.c: 49:      LATC &= 0x0F;
  5909  0293  300F               	movlw	15
  5910  0294  0020               	movlb	0	; select bank0
  5911  0295  00AF               	movwf	??_config_pwm
  5912  0296  082F               	movf	??_config_pwm,w
  5913  0297  0022               	movlb	2	; select bank2
  5914  0298  058E               	andwf	14,f	;volatile
  5915  0299                     l2221:	
  5916                           
  5917                           ;code/pwm.c: 51:      set_motor_pps(1,0,0);
  5918  0299  0020               	movlb	0	; select bank0
  5919  029A  01A0               	clrf	set_motor_pps@a_mode
  5920  029B  01A1               	clrf	set_motor_pps@b_mode
  5921  029C  3001               	movlw	1
  5922  029D  3180  2037  3182   	fcall	_set_motor_pps
  5923  02A0                     l2223:	
  5924                           
  5925                           ;code/pwm.c: 52:      set_motor_pps(2,0,0);
  5926  02A0  0020               	movlb	0	; select bank0
  5927  02A1  01A0               	clrf	set_motor_pps@a_mode
  5928  02A2  01A1               	clrf	set_motor_pps@b_mode
  5929  02A3  3002               	movlw	2
  5930  02A4  3180  2037  3182   	fcall	_set_motor_pps
  5931  02A7                     l2225:	
  5932                           
  5933                           ;code/pwm.c: 53:      set_motor_pps(3,0,0);
  5934  02A7  0020               	movlb	0	; select bank0
  5935  02A8  01A0               	clrf	set_motor_pps@a_mode
  5936  02A9  01A1               	clrf	set_motor_pps@b_mode
  5937  02AA  3003               	movlw	3
  5938  02AB  3180  2037  3182   	fcall	_set_motor_pps
  5939  02AE                     l2227:	
  5940                           
  5941                           ;code/pwm.c: 54:      set_motor_pps(4,0,0);
  5942  02AE  0020               	movlb	0	; select bank0
  5943  02AF  01A0               	clrf	set_motor_pps@a_mode
  5944  02B0  01A1               	clrf	set_motor_pps@b_mode
  5945  02B1  3004               	movlw	4
  5946  02B2  3180  2037  3182   	fcall	_set_motor_pps
  5947  02B5                     l238:	
  5948  02B5  0008               	return
  5949  02B6                     __end_of_config_pwm:	
  5950                           
  5951                           	psect	text20
  5952  022A                     __ptext20:	
  5953 ;; *************** function _set_pwms_dc *****************
  5954 ;; Defined at:
  5955 ;;		line 12 in file "code/pwm.c"
  5956 ;; Parameters:    Size  Location     Type
  5957 ;;  m3              1    wreg     unsigned char 
  5958 ;;  m4              1    0[BANK0 ] unsigned char 
  5959 ;;  m9              1    1[BANK0 ] unsigned char 
  5960 ;;  m5              1    2[BANK0 ] unsigned char 
  5961 ;; Auto vars:     Size  Location     Type
  5962 ;;  m3              1    4[BANK0 ] unsigned char 
  5963 ;; Return value:  Size  Location     Type
  5964 ;;                  1    wreg      void 
  5965 ;; Registers used:
  5966 ;;		wreg, status,2, status,0
  5967 ;; Tracked objects:
  5968 ;;		On entry : 0/0
  5969 ;;		On exit  : 0/0
  5970 ;;		Unchanged: 0/0
  5971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5972 ;;      Params:         0       3       0       0       0       0       0       0
  5973 ;;      Locals:         0       1       0       0       0       0       0       0
  5974 ;;      Temps:          0       1       0       0       0       0       0       0
  5975 ;;      Totals:         0       5       0       0       0       0       0       0
  5976 ;;Total ram usage:        5 bytes
  5977 ;; Hardware stack levels used:    1
  5978 ;; Hardware stack levels required when called:    4
  5979 ;; This function calls:
  5980 ;;		Nothing
  5981 ;; This function is called by:
  5982 ;;		_config_pwm
  5983 ;; This function uses a non-reentrant model
  5984 ;;
  5985                           
  5986                           
  5987                           ;psect for function _set_pwms_dc
  5988  022A                     _set_pwms_dc:	
  5989                           
  5990                           ;incstack = 0
  5991                           ; Regs used in _set_pwms_dc: [wreg+status,2+status,0]
  5992                           ;set_pwms_dc@m3 stored from wreg
  5993  022A  0020               	movlb	0	; select bank0
  5994  022B  00A4               	movwf	set_pwms_dc@m3
  5995  022C                     l2143:	
  5996                           
  5997                           ;code/pwm.c: 12: static void set_pwms_dc(u8 m3,u8 m4,u8 m9,u8 m5);code/pwm.c: 13: {;code
      +                          /pwm.c: 14:      PWM3DCH = m3 >> 2;
  5998  022C  0824               	movf	set_pwms_dc@m3,w
  5999  022D  00A3               	movwf	??_set_pwms_dc
  6000  022E  3002               	movlw	2
  6001  022F                     u1185:	
  6002  022F  36A3               	lsrf	??_set_pwms_dc,f
  6003  0230  0B89               	decfsz	9,f
  6004  0231  2A2F               	goto	u1185
  6005  0232  0823               	movf	??_set_pwms_dc,w
  6006  0233  002C               	movlb	12	; select bank12
  6007  0234  0095               	movwf	21	;volatile
  6008                           
  6009                           ;code/pwm.c: 15:      PWM3DCL = m3 << 6;
  6010  0235  0020               	movlb	0	; select bank0
  6011  0236  0824               	movf	set_pwms_dc@m3,w
  6012  0237  00A3               	movwf	??_set_pwms_dc
  6013  0238  3005               	movlw	5
  6014  0239                     u1195:	
  6015  0239  35A3               	lslf	??_set_pwms_dc,f
  6016  023A  3EFF               	addlw	-1
  6017  023B  1D03               	skipz
  6018  023C  2A39               	goto	u1195
  6019  023D  3523               	lslf	??_set_pwms_dc,w
  6020  023E  002C               	movlb	12	; select bank12
  6021  023F  0094               	movwf	20	;volatile
  6022                           
  6023                           ;code/pwm.c: 17:      PWM4DCH = m4 >> 2;
  6024  0240  0020               	movlb	0	; select bank0
  6025  0241  0820               	movf	set_pwms_dc@m4,w
  6026  0242  00A3               	movwf	??_set_pwms_dc
  6027  0243  3002               	movlw	2
  6028  0244                     u1205:	
  6029  0244  36A3               	lsrf	??_set_pwms_dc,f
  6030  0245  0B89               	decfsz	9,f
  6031  0246  2A44               	goto	u1205
  6032  0247  0823               	movf	??_set_pwms_dc,w
  6033  0248  002C               	movlb	12	; select bank12
  6034  0249  0098               	movwf	24	;volatile
  6035                           
  6036                           ;code/pwm.c: 18:      PWM4DCL = m4 << 6;
  6037  024A  0020               	movlb	0	; select bank0
  6038  024B  0820               	movf	set_pwms_dc@m4,w
  6039  024C  00A3               	movwf	??_set_pwms_dc
  6040  024D  3005               	movlw	5
  6041  024E                     u1215:	
  6042  024E  35A3               	lslf	??_set_pwms_dc,f
  6043  024F  3EFF               	addlw	-1
  6044  0250  1D03               	skipz
  6045  0251  2A4E               	goto	u1215
  6046  0252  3523               	lslf	??_set_pwms_dc,w
  6047  0253  002C               	movlb	12	; select bank12
  6048  0254  0097               	movwf	23	;volatile
  6049                           
  6050                           ;code/pwm.c: 20:      PWM9DCH = m9 >> 2;
  6051  0255  0020               	movlb	0	; select bank0
  6052  0256  0821               	movf	set_pwms_dc@m9,w
  6053  0257  00A3               	movwf	??_set_pwms_dc
  6054  0258  3002               	movlw	2
  6055  0259                     u1225:	
  6056  0259  36A3               	lsrf	??_set_pwms_dc,f
  6057  025A  0B89               	decfsz	9,f
  6058  025B  2A59               	goto	u1225
  6059  025C  0823               	movf	??_set_pwms_dc,w
  6060  025D  002C               	movlb	12	; select bank12
  6061  025E  009B               	movwf	27	;volatile
  6062                           
  6063                           ;code/pwm.c: 21:      PWM9DCL = m9 << 6;
  6064  025F  0020               	movlb	0	; select bank0
  6065  0260  0821               	movf	set_pwms_dc@m9,w
  6066  0261  00A3               	movwf	??_set_pwms_dc
  6067  0262  3005               	movlw	5
  6068  0263                     u1235:	
  6069  0263  35A3               	lslf	??_set_pwms_dc,f
  6070  0264  3EFF               	addlw	-1
  6071  0265  1D03               	skipz
  6072  0266  2A63               	goto	u1235
  6073  0267  3523               	lslf	??_set_pwms_dc,w
  6074  0268  002C               	movlb	12	; select bank12
  6075  0269  009A               	movwf	26	;volatile
  6076  026A                     l2145:	
  6077                           
  6078                           ;code/pwm.c: 23:      PWM5DCH = 0;
  6079  026A  003B               	movlb	27	; select bank27
  6080  026B  0194               	clrf	20	;volatile
  6081  026C                     l2147:	
  6082                           
  6083                           ;code/pwm.c: 24:      PWM5DCL = m5;
  6084  026C  0020               	movlb	0	; select bank0
  6085  026D  0822               	movf	set_pwms_dc@m5,w
  6086  026E  003B               	movlb	27	; select bank27
  6087  026F  0093               	movwf	19	;volatile
  6088  0270                     l2149:	
  6089                           
  6090                           ;code/pwm.c: 25:      PWM5LDCONbits.LDA = 1;
  6091  0270  179F               	bsf	31,7	;volatile
  6092  0271                     l235:	
  6093  0271  0008               	return
  6094  0272                     __end_of_set_pwms_dc:	
  6095                           
  6096                           	psect	text21
  6097  0037                     __ptext21:	
  6098 ;; *************** function _set_motor_pps *****************
  6099 ;; Defined at:
  6100 ;;		line 98 in file "code/pwm.c"
  6101 ;; Parameters:    Size  Location     Type
  6102 ;;  motor           1    wreg     unsigned char 
  6103 ;;  a_mode          1    0[BANK0 ] unsigned char 
  6104 ;;  b_mode          1    1[BANK0 ] unsigned char 
  6105 ;; Auto vars:     Size  Location     Type
  6106 ;;  motor           1    9[BANK0 ] unsigned char 
  6107 ;;  x               1   14[BANK0 ] unsigned char 
  6108 ;;  lat_b           1   13[BANK0 ] unsigned char 
  6109 ;;  lat_a           1   12[BANK0 ] unsigned char 
  6110 ;;  pps_b           1   11[BANK0 ] unsigned char 
  6111 ;;  pps_a           1   10[BANK0 ] unsigned char 
  6112 ;; Return value:  Size  Location     Type
  6113 ;;                  1    wreg      void 
  6114 ;; Registers used:
  6115 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  6116 ;; Tracked objects:
  6117 ;;		On entry : 0/0
  6118 ;;		On exit  : 0/0
  6119 ;;		Unchanged: 0/0
  6120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6121 ;;      Params:         0       2       0       0       0       0       0       0
  6122 ;;      Locals:         0      10       0       0       0       0       0       0
  6123 ;;      Temps:          0       3       0       0       0       0       0       0
  6124 ;;      Totals:         0      15       0       0       0       0       0       0
  6125 ;;Total ram usage:       15 bytes
  6126 ;; Hardware stack levels used:    1
  6127 ;; Hardware stack levels required when called:    4
  6128 ;; This function calls:
  6129 ;;		Nothing
  6130 ;; This function is called by:
  6131 ;;		_config_pwm
  6132 ;;		_set_pwm_mode
  6133 ;; This function uses a non-reentrant model
  6134 ;;
  6135                           
  6136                           
  6137                           ;psect for function _set_motor_pps
  6138  0037                     _set_motor_pps:	
  6139                           
  6140                           ;incstack = 0
  6141                           ; Regs used in _set_motor_pps: [wreg-fsr1h+status,2+status,0]
  6142                           ;set_motor_pps@motor stored from wreg
  6143  0037  0020               	movlb	0	; select bank0
  6144  0038  00A9               	movwf	set_motor_pps@motor
  6145  0039                     l1919:	
  6146                           
  6147                           ;code/pwm.c: 98: static void set_motor_pps(u8 motor,u8 a_mode,u8 b_mode);code/pwm.c: 99:
      +                           {;code/pwm.c: 100:      u8 pps_a = a_mode==2 ? pps_pwm_vals[motor-1] : 0;
  6148  0039  3002               	movlw	2
  6149  003A  0620               	xorwf	set_motor_pps@a_mode,w
  6150  003B  1903               	btfsc	3,2
  6151  003C  283E               	goto	u931
  6152  003D  283F               	goto	u930
  6153  003E                     u931:	
  6154  003E  2842               	goto	l1923
  6155  003F                     u930:	
  6156  003F                     l1921:	
  6157  003F  01A5               	clrf	_set_motor_pps$388
  6158  0040  01A6               	clrf	_set_motor_pps$388+1
  6159  0041  284D               	goto	l1925
  6160  0042                     l1923:	
  6161  0042  0829               	movf	set_motor_pps@motor,w
  6162  0043  3E75               	addlw	(low ((_pps_pwm_vals| 0+255)))& (0+255)
  6163  0044  0086               	movwf	6
  6164  0045  0187               	clrf	7
  6165  0046  0801               	movf	1,w
  6166  0047  00A2               	movwf	??_set_motor_pps
  6167  0048  01A3               	clrf	??_set_motor_pps+1
  6168  0049  0822               	movf	??_set_motor_pps,w
  6169  004A  00A5               	movwf	_set_motor_pps$388
  6170  004B  0823               	movf	??_set_motor_pps+1,w
  6171  004C  00A6               	movwf	_set_motor_pps$388+1
  6172  004D                     l1925:	
  6173  004D  0825               	movf	_set_motor_pps$388,w
  6174  004E  00A2               	movwf	??_set_motor_pps
  6175  004F  0822               	movf	??_set_motor_pps,w
  6176  0050  00AA               	movwf	set_motor_pps@pps_a
  6177  0051                     l1927:	
  6178                           
  6179                           ;code/pwm.c: 101:      u8 pps_b = b_mode==2 ? pps_pwm_vals[motor-1] : 0;
  6180  0051  3002               	movlw	2
  6181  0052  0621               	xorwf	set_motor_pps@b_mode,w
  6182  0053  1903               	btfsc	3,2
  6183  0054  2856               	goto	u941
  6184  0055  2857               	goto	u940
  6185  0056                     u941:	
  6186  0056  285A               	goto	l1931
  6187  0057                     u940:	
  6188  0057                     l1929:	
  6189  0057  01A7               	clrf	_set_motor_pps$390
  6190  0058  01A8               	clrf	_set_motor_pps$390+1
  6191  0059  2865               	goto	l1933
  6192  005A                     l1931:	
  6193  005A  0829               	movf	set_motor_pps@motor,w
  6194  005B  3E75               	addlw	(low ((_pps_pwm_vals| 0+255)))& (0+255)
  6195  005C  0086               	movwf	6
  6196  005D  0187               	clrf	7
  6197  005E  0801               	movf	1,w
  6198  005F  00A2               	movwf	??_set_motor_pps
  6199  0060  01A3               	clrf	??_set_motor_pps+1
  6200  0061  0822               	movf	??_set_motor_pps,w
  6201  0062  00A7               	movwf	_set_motor_pps$390
  6202  0063  0823               	movf	??_set_motor_pps+1,w
  6203  0064  00A8               	movwf	_set_motor_pps$390+1
  6204  0065                     l1933:	
  6205  0065  0827               	movf	_set_motor_pps$390,w
  6206  0066  00A2               	movwf	??_set_motor_pps
  6207  0067  0822               	movf	??_set_motor_pps,w
  6208  0068  00AB               	movwf	set_motor_pps@pps_b
  6209  0069                     l1935:	
  6210                           
  6211                           ;code/pwm.c: 102:      u8 lat_a = a_mode ? 1 : 0;
  6212  0069  0820               	movf	set_motor_pps@a_mode,w
  6213  006A  1D03               	btfss	3,2
  6214  006B  286D               	goto	u951
  6215  006C  286F               	goto	u950
  6216  006D                     u951:	
  6217  006D  3001               	movlw	1
  6218  006E  2870               	goto	u960
  6219  006F                     u950:	
  6220  006F  3000               	movlw	0
  6221  0070                     u960:	
  6222  0070  00A2               	movwf	??_set_motor_pps
  6223  0071  0822               	movf	??_set_motor_pps,w
  6224  0072  00AC               	movwf	set_motor_pps@lat_a
  6225  0073                     l1937:	
  6226                           
  6227                           ;code/pwm.c: 103:      u8 lat_b = b_mode ? 1 : 0;
  6228  0073  0821               	movf	set_motor_pps@b_mode,w
  6229  0074  1D03               	btfss	3,2
  6230  0075  2877               	goto	u971
  6231  0076  2879               	goto	u970
  6232  0077                     u971:	
  6233  0077  3001               	movlw	1
  6234  0078  287A               	goto	u980
  6235  0079                     u970:	
  6236  0079  3000               	movlw	0
  6237  007A                     u980:	
  6238  007A  00A2               	movwf	??_set_motor_pps
  6239  007B  0822               	movf	??_set_motor_pps,w
  6240  007C  00AD               	movwf	set_motor_pps@lat_b
  6241                           
  6242                           ;code/pwm.c: 104:      u8 x;;code/pwm.c: 105:      switch(motor){
  6243  007D  290D               	goto	l1965
  6244  007E                     l1939:	
  6245                           
  6246                           ;code/pwm.c: 107:    RA0PPS = pps_a;
  6247  007E  082A               	movf	set_motor_pps@pps_a,w
  6248  007F  003D               	movlb	29	; select bank29
  6249  0080  0090               	movwf	16	;volatile
  6250                           
  6251                           ;code/pwm.c: 108:    RA1PPS = pps_b;
  6252  0081  0020               	movlb	0	; select bank0
  6253  0082  082B               	movf	set_motor_pps@pps_b,w
  6254  0083  003D               	movlb	29	; select bank29
  6255  0084  0091               	movwf	17	;volatile
  6256                           
  6257                           ;code/pwm.c: 109:        x = LATA;
  6258  0085  0022               	movlb	2	; select bank2
  6259  0086  080C               	movf	12,w	;volatile
  6260  0087  0020               	movlb	0	; select bank0
  6261  0088  00A2               	movwf	??_set_motor_pps
  6262  0089  0822               	movf	??_set_motor_pps,w
  6263  008A  00AE               	movwf	set_motor_pps@x
  6264  008B                     l1941:	
  6265                           
  6266                           ;code/pwm.c: 110:    x &= 0xFC;
  6267  008B  30FC               	movlw	252
  6268  008C  00A2               	movwf	??_set_motor_pps
  6269  008D  0822               	movf	??_set_motor_pps,w
  6270  008E  05AE               	andwf	set_motor_pps@x,f
  6271  008F                     l1943:	
  6272                           
  6273                           ;code/pwm.c: 111:    x |= (lat_b<<1) + (lat_a<<0);
  6274  008F  352D               	lslf	set_motor_pps@lat_b,w
  6275  0090  072C               	addwf	set_motor_pps@lat_a,w
  6276  0091  00A2               	movwf	??_set_motor_pps
  6277  0092  0822               	movf	??_set_motor_pps,w
  6278  0093  04AE               	iorwf	set_motor_pps@x,f
  6279                           
  6280                           ;code/pwm.c: 112:        LATA = x;
  6281  0094  082E               	movf	set_motor_pps@x,w
  6282  0095  0022               	movlb	2	; select bank2
  6283  0096  008C               	movwf	12	;volatile
  6284                           
  6285                           ;code/pwm.c: 113:    break;
  6286  0097  2923               	goto	l277
  6287  0098                     l1945:	
  6288                           
  6289                           ;code/pwm.c: 115:    RA2PPS = pps_a;
  6290  0098  082A               	movf	set_motor_pps@pps_a,w
  6291  0099  003D               	movlb	29	; select bank29
  6292  009A  0092               	movwf	18	;volatile
  6293                           
  6294                           ;code/pwm.c: 116:    RA3PPS = pps_b;
  6295  009B  0020               	movlb	0	; select bank0
  6296  009C  082B               	movf	set_motor_pps@pps_b,w
  6297  009D  003D               	movlb	29	; select bank29
  6298  009E  0093               	movwf	19	;volatile
  6299                           
  6300                           ;code/pwm.c: 117:        x = LATA;
  6301  009F  0022               	movlb	2	; select bank2
  6302  00A0  080C               	movf	12,w	;volatile
  6303  00A1  0020               	movlb	0	; select bank0
  6304  00A2  00A2               	movwf	??_set_motor_pps
  6305  00A3  0822               	movf	??_set_motor_pps,w
  6306  00A4  00AE               	movwf	set_motor_pps@x
  6307  00A5                     l1947:	
  6308                           
  6309                           ;code/pwm.c: 118:    x &= 0xF3;
  6310  00A5  30F3               	movlw	243
  6311  00A6  00A2               	movwf	??_set_motor_pps
  6312  00A7  0822               	movf	??_set_motor_pps,w
  6313  00A8  05AE               	andwf	set_motor_pps@x,f
  6314  00A9                     l1949:	
  6315                           
  6316                           ;code/pwm.c: 119:    x |= (lat_b<<3) + (lat_a<<2);
  6317  00A9  082C               	movf	set_motor_pps@lat_a,w
  6318  00AA  00A2               	movwf	??_set_motor_pps
  6319  00AB  3002               	movlw	2
  6320  00AC                     u995:	
  6321  00AC  35A2               	lslf	??_set_motor_pps,f
  6322  00AD  0B89               	decfsz	9,f
  6323  00AE  28AC               	goto	u995
  6324  00AF  082D               	movf	set_motor_pps@lat_b,w
  6325  00B0  00A3               	movwf	??_set_motor_pps+1
  6326  00B1  3002               	movlw	2
  6327  00B2                     u1005:	
  6328  00B2  35A3               	lslf	??_set_motor_pps+1,f
  6329  00B3  3EFF               	addlw	-1
  6330  00B4  1D03               	skipz
  6331  00B5  28B2               	goto	u1005
  6332  00B6  3523               	lslf	??_set_motor_pps+1,w
  6333  00B7  0722               	addwf	??_set_motor_pps,w
  6334  00B8  00A4               	movwf	??_set_motor_pps+2
  6335  00B9  0824               	movf	??_set_motor_pps+2,w
  6336  00BA  04AE               	iorwf	set_motor_pps@x,f
  6337                           
  6338                           ;code/pwm.c: 120:        LATA = x;
  6339  00BB  082E               	movf	set_motor_pps@x,w
  6340  00BC  0022               	movlb	2	; select bank2
  6341  00BD  008C               	movwf	12	;volatile
  6342                           
  6343                           ;code/pwm.c: 121:    break;
  6344  00BE  2923               	goto	l277
  6345  00BF                     l1951:	
  6346                           
  6347                           ;code/pwm.c: 123:    RA4PPS = pps_a;
  6348  00BF  082A               	movf	set_motor_pps@pps_a,w
  6349  00C0  003D               	movlb	29	; select bank29
  6350  00C1  0094               	movwf	20	;volatile
  6351                           
  6352                           ;code/pwm.c: 124:    RA5PPS = pps_b;
  6353  00C2  0020               	movlb	0	; select bank0
  6354  00C3  082B               	movf	set_motor_pps@pps_b,w
  6355  00C4  003D               	movlb	29	; select bank29
  6356  00C5  0095               	movwf	21	;volatile
  6357                           
  6358                           ;code/pwm.c: 125:        x = LATA;
  6359  00C6  0022               	movlb	2	; select bank2
  6360  00C7  080C               	movf	12,w	;volatile
  6361  00C8  0020               	movlb	0	; select bank0
  6362  00C9  00A2               	movwf	??_set_motor_pps
  6363  00CA  0822               	movf	??_set_motor_pps,w
  6364  00CB  00AE               	movwf	set_motor_pps@x
  6365  00CC                     l1953:	
  6366                           
  6367                           ;code/pwm.c: 126:    x &= 0xCF;
  6368  00CC  30CF               	movlw	207
  6369  00CD  00A2               	movwf	??_set_motor_pps
  6370  00CE  0822               	movf	??_set_motor_pps,w
  6371  00CF  05AE               	andwf	set_motor_pps@x,f
  6372  00D0                     l1955:	
  6373                           
  6374                           ;code/pwm.c: 127:    x |= (lat_b<<5) + (lat_a<<4);
  6375  00D0  082C               	movf	set_motor_pps@lat_a,w
  6376  00D1  00A2               	movwf	??_set_motor_pps
  6377  00D2  3004               	movlw	4
  6378  00D3                     u1015:	
  6379  00D3  35A2               	lslf	??_set_motor_pps,f
  6380  00D4  0B89               	decfsz	9,f
  6381  00D5  28D3               	goto	u1015
  6382  00D6  082D               	movf	set_motor_pps@lat_b,w
  6383  00D7  00A3               	movwf	??_set_motor_pps+1
  6384  00D8  3004               	movlw	4
  6385  00D9                     u1025:	
  6386  00D9  35A3               	lslf	??_set_motor_pps+1,f
  6387  00DA  3EFF               	addlw	-1
  6388  00DB  1D03               	skipz
  6389  00DC  28D9               	goto	u1025
  6390  00DD  3523               	lslf	??_set_motor_pps+1,w
  6391  00DE  0722               	addwf	??_set_motor_pps,w
  6392  00DF  00A4               	movwf	??_set_motor_pps+2
  6393  00E0  0824               	movf	??_set_motor_pps+2,w
  6394  00E1  04AE               	iorwf	set_motor_pps@x,f
  6395                           
  6396                           ;code/pwm.c: 128:        LATA = x;
  6397  00E2  082E               	movf	set_motor_pps@x,w
  6398  00E3  0022               	movlb	2	; select bank2
  6399  00E4  008C               	movwf	12	;volatile
  6400                           
  6401                           ;code/pwm.c: 129:    break;
  6402  00E5  2923               	goto	l277
  6403  00E6                     l1957:	
  6404                           
  6405                           ;code/pwm.c: 131:    RA7PPS = pps_a;
  6406  00E6  082A               	movf	set_motor_pps@pps_a,w
  6407  00E7  003D               	movlb	29	; select bank29
  6408  00E8  0097               	movwf	23	;volatile
  6409                           
  6410                           ;code/pwm.c: 132:    RA6PPS = pps_b;
  6411  00E9  0020               	movlb	0	; select bank0
  6412  00EA  082B               	movf	set_motor_pps@pps_b,w
  6413  00EB  003D               	movlb	29	; select bank29
  6414  00EC  0096               	movwf	22	;volatile
  6415                           
  6416                           ;code/pwm.c: 133:        x = LATA;
  6417  00ED  0022               	movlb	2	; select bank2
  6418  00EE  080C               	movf	12,w	;volatile
  6419  00EF  0020               	movlb	0	; select bank0
  6420  00F0  00A2               	movwf	??_set_motor_pps
  6421  00F1  0822               	movf	??_set_motor_pps,w
  6422  00F2  00AE               	movwf	set_motor_pps@x
  6423  00F3                     l1959:	
  6424                           
  6425                           ;code/pwm.c: 134:    x &= 0x3F;
  6426  00F3  303F               	movlw	63
  6427  00F4  00A2               	movwf	??_set_motor_pps
  6428  00F5  0822               	movf	??_set_motor_pps,w
  6429  00F6  05AE               	andwf	set_motor_pps@x,f
  6430  00F7                     l1961:	
  6431                           
  6432                           ;code/pwm.c: 135:    x |= (lat_b<<6) + (lat_a<<7);
  6433  00F7  082D               	movf	set_motor_pps@lat_b,w
  6434  00F8  00A2               	movwf	??_set_motor_pps
  6435  00F9  3006               	movlw	6
  6436  00FA                     u1035:	
  6437  00FA  35A2               	lslf	??_set_motor_pps,f
  6438  00FB  0B89               	decfsz	9,f
  6439  00FC  28FA               	goto	u1035
  6440  00FD  082C               	movf	set_motor_pps@lat_a,w
  6441  00FE  00A3               	movwf	??_set_motor_pps+1
  6442  00FF  3006               	movlw	6
  6443  0100                     u1045:	
  6444  0100  35A3               	lslf	??_set_motor_pps+1,f
  6445  0101  3EFF               	addlw	-1
  6446  0102  1D03               	skipz
  6447  0103  2900               	goto	u1045
  6448  0104  3523               	lslf	??_set_motor_pps+1,w
  6449  0105  0722               	addwf	??_set_motor_pps,w
  6450  0106  00A4               	movwf	??_set_motor_pps+2
  6451  0107  0824               	movf	??_set_motor_pps+2,w
  6452  0108  04AE               	iorwf	set_motor_pps@x,f
  6453                           
  6454                           ;code/pwm.c: 136:        LATA = x;
  6455  0109  082E               	movf	set_motor_pps@x,w
  6456  010A  0022               	movlb	2	; select bank2
  6457  010B  008C               	movwf	12	;volatile
  6458                           
  6459                           ;code/pwm.c: 137:    break;
  6460  010C  2923               	goto	l277
  6461  010D                     l1965:	
  6462  010D  0829               	movf	set_motor_pps@motor,w
  6463  010E  00A2               	movwf	??_set_motor_pps
  6464  010F  01A3               	clrf	??_set_motor_pps+1
  6465                           
  6466                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6467                           ; Switch size 1, requested type "simple"
  6468                           ; Number of cases is 1, Range of values is 0 to 0
  6469                           ; switch strategies available:
  6470                           ; Name         Instructions Cycles
  6471                           ; simple_byte            4     3 (average)
  6472                           ; direct_byte            8     6 (fixed)
  6473                           ; jumptable            260     6 (fixed)
  6474                           ;	Chosen strategy is simple_byte
  6475  0110  0823               	movf	??_set_motor_pps+1,w
  6476  0111  3A00               	xorlw	0	; case 0
  6477  0112  1903               	skipnz
  6478  0113  2915               	goto	l2431
  6479  0114  2923               	goto	l277
  6480  0115                     l2431:	
  6481                           
  6482                           ; Switch size 1, requested type "simple"
  6483                           ; Number of cases is 4, Range of values is 1 to 4
  6484                           ; switch strategies available:
  6485                           ; Name         Instructions Cycles
  6486                           ; simple_byte           13     7 (average)
  6487                           ; direct_byte           17     9 (fixed)
  6488                           ; jumptable            263     9 (fixed)
  6489                           ;	Chosen strategy is simple_byte
  6490  0115  0822               	movf	??_set_motor_pps,w
  6491  0116  3A01               	xorlw	1	; case 1
  6492  0117  1903               	skipnz
  6493  0118  287E               	goto	l1939
  6494  0119  3A03               	xorlw	3	; case 2
  6495  011A  1903               	skipnz
  6496  011B  2898               	goto	l1945
  6497  011C  3A01               	xorlw	1	; case 3
  6498  011D  1903               	skipnz
  6499  011E  28BF               	goto	l1951
  6500  011F  3A07               	xorlw	7	; case 4
  6501  0120  1903               	skipnz
  6502  0121  28E6               	goto	l1957
  6503  0122  2923               	goto	l277
  6504  0123                     l277:	
  6505  0123  0008               	return
  6506  0124                     __end_of_set_motor_pps:	
  6507                           
  6508                           	psect	text22
  6509  0487                     __ptext22:	
  6510 ;; *************** function _config_io *****************
  6511 ;; Defined at:
  6512 ;;		line 3 in file "code/io.c"
  6513 ;; Parameters:    Size  Location     Type
  6514 ;;		None
  6515 ;; Auto vars:     Size  Location     Type
  6516 ;;		None
  6517 ;; Return value:  Size  Location     Type
  6518 ;;                  1    wreg      void 
  6519 ;; Registers used:
  6520 ;;		wreg, status,2
  6521 ;; Tracked objects:
  6522 ;;		On entry : 0/0
  6523 ;;		On exit  : 0/0
  6524 ;;		Unchanged: 0/0
  6525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6526 ;;      Params:         0       0       0       0       0       0       0       0
  6527 ;;      Locals:         0       0       0       0       0       0       0       0
  6528 ;;      Temps:          0       0       0       0       0       0       0       0
  6529 ;;      Totals:         0       0       0       0       0       0       0       0
  6530 ;;Total ram usage:        0 bytes
  6531 ;; Hardware stack levels used:    1
  6532 ;; Hardware stack levels required when called:    4
  6533 ;; This function calls:
  6534 ;;		Nothing
  6535 ;; This function is called by:
  6536 ;;		_main
  6537 ;; This function uses a non-reentrant model
  6538 ;;
  6539                           
  6540                           
  6541                           ;psect for function _config_io
  6542  0487                     _config_io:	
  6543  0487                     l2195:	
  6544                           ;incstack = 0
  6545                           ; Regs used in _config_io: [wreg+status,2]
  6546                           
  6547                           
  6548                           ;code/io.c: 5:      TRISA = 0x00;
  6549  0487  0021               	movlb	1	; select bank1
  6550  0488  018C               	clrf	12	;volatile
  6551                           
  6552                           ;code/io.c: 6:      TRISB = 0x00;
  6553  0489  018D               	clrf	13	;volatile
  6554                           
  6555                           ;code/io.c: 7:      TRISC = 0x00;
  6556  048A  018E               	clrf	14	;volatile
  6557                           
  6558                           ;code/io.c: 9:      WPUA = 0x00;
  6559  048B  0024               	movlb	4	; select bank4
  6560  048C  018C               	clrf	12	;volatile
  6561                           
  6562                           ;code/io.c: 10:      WPUB = 0x00;
  6563  048D  018D               	clrf	13	;volatile
  6564  048E                     l2197:	
  6565                           
  6566                           ;code/io.c: 11:      WPUC = 0x0C;
  6567  048E  300C               	movlw	12
  6568  048F  008E               	movwf	14	;volatile
  6569  0490                     l2199:	
  6570                           
  6571                           ;code/io.c: 12:      WPUE = 0x08;
  6572  0490  3008               	movlw	8
  6573  0491  0090               	movwf	16	;volatile
  6574                           
  6575                           ;code/io.c: 14:      ANSELA = 0x00;
  6576  0492  0023               	movlb	3	; select bank3
  6577  0493  018C               	clrf	12	;volatile
  6578                           
  6579                           ;code/io.c: 15:      ANSELB = 0x00;
  6580  0494  018D               	clrf	13	;volatile
  6581                           
  6582                           ;code/io.c: 16:      ANSELC = 0x00;
  6583  0495  018E               	clrf	14	;volatile
  6584  0496                     l100:	
  6585  0496  0008               	return
  6586  0497                     __end_of_config_io:	
  6587                           
  6588                           	psect	text23
  6589  036A                     __ptext23:	
  6590 ;; *************** function _config_i2c *****************
  6591 ;; Defined at:
  6592 ;;		line 48 in file "code/i2c.c"
  6593 ;; Parameters:    Size  Location     Type
  6594 ;;		None
  6595 ;; Auto vars:     Size  Location     Type
  6596 ;;		None
  6597 ;; Return value:  Size  Location     Type
  6598 ;;                  1    wreg      void 
  6599 ;; Registers used:
  6600 ;;		wreg, status,2, status,0
  6601 ;; Tracked objects:
  6602 ;;		On entry : 0/0
  6603 ;;		On exit  : 0/0
  6604 ;;		Unchanged: 0/0
  6605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6606 ;;      Params:         0       0       0       0       0       0       0       0
  6607 ;;      Locals:         0       0       0       0       0       0       0       0
  6608 ;;      Temps:          0       1       0       0       0       0       0       0
  6609 ;;      Totals:         0       1       0       0       0       0       0       0
  6610 ;;Total ram usage:        1 bytes
  6611 ;; Hardware stack levels used:    1
  6612 ;; Hardware stack levels required when called:    4
  6613 ;; This function calls:
  6614 ;;		Nothing
  6615 ;; This function is called by:
  6616 ;;		_main
  6617 ;; This function uses a non-reentrant model
  6618 ;;
  6619                           
  6620                           
  6621                           ;psect for function _config_i2c
  6622  036A                     _config_i2c:	
  6623  036A                     l2163:	
  6624                           ;incstack = 0
  6625                           ; Regs used in _config_i2c: [wreg+status,2+status,0]
  6626                           
  6627                           
  6628                           ;code/i2c.c: 50:      TRISC |= (0b1100);
  6629  036A  300C               	movlw	12
  6630  036B  0020               	movlb	0	; select bank0
  6631  036C  00A0               	movwf	??_config_i2c
  6632  036D  0820               	movf	??_config_i2c,w
  6633  036E  0021               	movlb	1	; select bank1
  6634  036F  048E               	iorwf	14,f	;volatile
  6635                           
  6636                           ;code/i2c.c: 51:      LATC &= ~0b1100;
  6637  0370  30F3               	movlw	243
  6638  0371  0020               	movlb	0	; select bank0
  6639  0372  00A0               	movwf	??_config_i2c
  6640  0373  0820               	movf	??_config_i2c,w
  6641  0374  0022               	movlb	2	; select bank2
  6642  0375  058E               	andwf	14,f	;volatile
  6643  0376                     l2165:	
  6644                           
  6645                           ;code/i2c.c: 52:      ANSELC = 0;
  6646  0376  0023               	movlb	3	; select bank3
  6647  0377  018E               	clrf	14	;volatile
  6648  0378                     l2167:	
  6649                           
  6650                           ;code/i2c.c: 53:      WPUC = 0b1100;
  6651  0378  300C               	movlw	12
  6652  0379  0024               	movlb	4	; select bank4
  6653  037A  008E               	movwf	14	;volatile
  6654  037B                     l2169:	
  6655                           
  6656                           ;code/i2c.c: 55:      PIE1bits.SSP1IE = 1;
  6657  037B  0021               	movlb	1	; select bank1
  6658  037C  1591               	bsf	17,3	;volatile
  6659  037D                     l2171:	
  6660                           
  6661                           ;code/i2c.c: 56:      SSP1ADD = i2c_slave_addr << 1;
  6662  037D  3052               	movlw	82
  6663  037E  0024               	movlb	4	; select bank4
  6664  037F  0092               	movwf	18	;volatile
  6665  0380                     l2173:	
  6666                           
  6667                           ;code/i2c.c: 58:      SSP1CON1 = 0b00110110;
  6668  0380  3036               	movlw	54
  6669  0381  0095               	movwf	21	;volatile
  6670  0382                     l2175:	
  6671                           
  6672                           ;code/i2c.c: 59:      SSP1CON2 = 0b00000000;
  6673  0382  0196               	clrf	22	;volatile
  6674  0383                     l2177:	
  6675                           
  6676                           ;code/i2c.c: 60:      SSP1CON3 = 0b00001011;
  6677  0383  300B               	movlw	11
  6678  0384  0097               	movwf	23	;volatile
  6679  0385                     l2179:	
  6680                           
  6681                           ;code/i2c.c: 62:      SSPCLKPPS = 0b00010010;
  6682  0385  3012               	movlw	18
  6683  0386  003C               	movlb	28	; select bank28
  6684  0387  00BA               	movwf	58	;volatile
  6685  0388                     l2181:	
  6686                           
  6687                           ;code/i2c.c: 63:      SSPDATPPS = 0b00010011;
  6688  0388  3013               	movlw	19
  6689  0389  00BB               	movwf	59	;volatile
  6690  038A                     l2183:	
  6691                           
  6692                           ;code/i2c.c: 64:      RC2PPS = 0b100001;
  6693  038A  3021               	movlw	33
  6694  038B  003D               	movlb	29	; select bank29
  6695  038C  00A2               	movwf	34	;volatile
  6696  038D                     l2185:	
  6697                           
  6698                           ;code/i2c.c: 65:      RC3PPS = 0b100010;
  6699  038D  3022               	movlw	34
  6700  038E  00A3               	movwf	35	;volatile
  6701  038F                     l55:	
  6702  038F  0008               	return
  6703  0390                     __end_of_config_i2c:	
  6704                           
  6705                           	psect	text24
  6706  04E2                     __ptext24:	
  6707 ;; *************** function _config_cpu *****************
  6708 ;; Defined at:
  6709 ;;		line 18 in file "code/main.c"
  6710 ;; Parameters:    Size  Location     Type
  6711 ;;		None
  6712 ;; Auto vars:     Size  Location     Type
  6713 ;;		None
  6714 ;; Return value:  Size  Location     Type
  6715 ;;                  1    wreg      void 
  6716 ;; Registers used:
  6717 ;;		wreg, status,2
  6718 ;; Tracked objects:
  6719 ;;		On entry : 0/0
  6720 ;;		On exit  : 0/0
  6721 ;;		Unchanged: 0/0
  6722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6723 ;;      Params:         0       0       0       0       0       0       0       0
  6724 ;;      Locals:         0       0       0       0       0       0       0       0
  6725 ;;      Temps:          0       0       0       0       0       0       0       0
  6726 ;;      Totals:         0       0       0       0       0       0       0       0
  6727 ;;Total ram usage:        0 bytes
  6728 ;; Hardware stack levels used:    1
  6729 ;; Hardware stack levels required when called:    4
  6730 ;; This function calls:
  6731 ;;		Nothing
  6732 ;; This function is called by:
  6733 ;;		_main
  6734 ;; This function uses a non-reentrant model
  6735 ;;
  6736                           
  6737                           
  6738                           ;psect for function _config_cpu
  6739  04E2                     _config_cpu:	
  6740  04E2                     l2201:	
  6741                           ;incstack = 0
  6742                           ; Regs used in _config_cpu: [wreg+status,2]
  6743                           
  6744                           
  6745                           ;code/main.c: 20:      OSCCON = 0b11110010;
  6746  04E2  30F2               	movlw	242
  6747  04E3  0021               	movlb	1	; select bank1
  6748  04E4  009B               	movwf	27	;volatile
  6749  04E5                     l2203:	
  6750                           
  6751                           ;code/main.c: 21:      INTCON = 0;
  6752  04E5  018B               	clrf	11	;volatile
  6753  04E6                     l2205:	
  6754                           
  6755                           ;code/main.c: 22:      OPTION_REG = 0;
  6756  04E6  0197               	clrf	23	;volatile
  6757  04E7                     l131:	
  6758  04E7  0008               	return
  6759  04E8                     __end_of_config_cpu:	
  6760                           
  6761                           	psect	intentry
  6762  0004                     __pintentry:	
  6763 ;; *************** function _isr *****************
  6764 ;; Defined at:
  6765 ;;		line 10 in file "code/main.c"
  6766 ;; Parameters:    Size  Location     Type
  6767 ;;		None
  6768 ;; Auto vars:     Size  Location     Type
  6769 ;;		None
  6770 ;; Return value:  Size  Location     Type
  6771 ;;                  1    wreg      void 
  6772 ;; Registers used:
  6773 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6774 ;; Tracked objects:
  6775 ;;		On entry : 0/0
  6776 ;;		On exit  : 0/0
  6777 ;;		Unchanged: 0/0
  6778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6779 ;;      Params:         0       0       0       0       0       0       0       0
  6780 ;;      Locals:         0       0       0       0       0       0       0       0
  6781 ;;      Temps:          0       0       0       0       0       0       0       0
  6782 ;;      Totals:         0       0       0       0       0       0       0       0
  6783 ;;Total ram usage:        0 bytes
  6784 ;; Hardware stack levels used:    1
  6785 ;; Hardware stack levels required when called:    3
  6786 ;; This function calls:
  6787 ;;		i1_i2c_isr
  6788 ;; This function is called by:
  6789 ;;		Interrupt level 1
  6790 ;; This function uses a non-reentrant model
  6791 ;;
  6792                           
  6793  0004                     _isr:	
  6794                           
  6795                           ;incstack = 0
  6796  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  6797                           
  6798                           ; Regs used in _isr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6799  0005  3180               	pagesel	$
  6800  0006                     i1l1755:	
  6801                           
  6802                           ;code/main.c: 12:      if(PIR1bits.SSP1IF){
  6803  0006  0020               	movlb	0	; select bank0
  6804  0007  1D91               	btfss	17,3	;volatile
  6805  0008  280A               	goto	u91_21
  6806  0009  280B               	goto	u91_20
  6807  000A                     u91_21:	
  6808  000A  280F               	goto	i1l128
  6809  000B                     u91_20:	
  6810  000B                     i1l1757:	
  6811                           
  6812                           ;code/main.c: 13:    PIR1bits.SSP1IF = 0;
  6813  000B  1191               	bcf	17,3	;volatile
  6814  000C                     i1l1759:	
  6815                           
  6816                           ;code/main.c: 14:    i2c_isr();
  6817  000C  3184  2466  3180   	fcall	i1_i2c_isr
  6818  000F                     i1l128:	
  6819  000F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6820  0010  0009               	retfie
  6821  0011                     __end_of_isr:	
  6822                           
  6823                           	psect	text26
  6824  0466                     __ptext26:	
  6825 ;; *************** function i1_i2c_isr *****************
  6826 ;; Defined at:
  6827 ;;		line 68 in file "code/i2c.c"
  6828 ;; Parameters:    Size  Location     Type
  6829 ;;		None
  6830 ;; Auto vars:     Size  Location     Type
  6831 ;;		None
  6832 ;; Return value:  Size  Location     Type
  6833 ;;                  1    wreg      void 
  6834 ;; Registers used:
  6835 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6836 ;; Tracked objects:
  6837 ;;		On entry : 0/0
  6838 ;;		On exit  : 0/0
  6839 ;;		Unchanged: 0/0
  6840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6841 ;;      Params:         0       0       0       0       0       0       0       0
  6842 ;;      Locals:         0       0       0       0       0       0       0       0
  6843 ;;      Temps:          0       0       0       0       0       0       0       0
  6844 ;;      Totals:         0       0       0       0       0       0       0       0
  6845 ;;Total ram usage:        0 bytes
  6846 ;; Hardware stack levels used:    1
  6847 ;; Hardware stack levels required when called:    2
  6848 ;; This function calls:
  6849 ;;		i1_handle_read
  6850 ;;		i1_handle_write
  6851 ;; This function is called by:
  6852 ;;		_isr
  6853 ;; This function uses a non-reentrant model
  6854 ;;
  6855                           
  6856                           
  6857                           ;psect for function i1_i2c_isr
  6858  0466                     i1_i2c_isr:	
  6859  0466                     i1l1747:	
  6860                           ;incstack = 0
  6861                           ; Regs used in i1_i2c_isr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6862                           
  6863                           
  6864                           ;code/i2c.c: 70:      PIR1bits.SSP1IF = 0;
  6865  0466  0020               	movlb	0	; select bank0
  6866  0467  1191               	bcf	17,3	;volatile
  6867                           
  6868                           ;code/i2c.c: 71:      if(SSP1STATbits.R_nW) handle_read();
  6869  0468  0024               	movlb	4	; select bank4
  6870  0469  1D14               	btfss	20,2	;volatile
  6871  046A  2C6C               	goto	u90_21
  6872  046B  2C6D               	goto	u90_20
  6873  046C                     u90_21:	
  6874  046C  2C71               	goto	i1l1751
  6875  046D                     u90_20:	
  6876  046D                     i1l1749:	
  6877  046D  3184  24B5  3184   	fcall	i1_handle_read
  6878  0470  2C74               	goto	i1l1753
  6879  0471                     i1l1751:	
  6880  0471  3183  2343  3184   	fcall	i1_handle_write
  6881  0474                     i1l1753:	
  6882                           
  6883                           ;code/i2c.c: 73:      SSP1CONbits.CKP = 1;
  6884  0474  0024               	movlb	4	; select bank4
  6885  0475  1615               	bsf	21,4	;volatile
  6886  0476                     i1l60:	
  6887  0476  0008               	return
  6888  0477                     __end_ofi1_i2c_isr:	
  6889                           
  6890                           	psect	text27
  6891  0343                     __ptext27:	
  6892 ;; *************** function i1_handle_write *****************
  6893 ;; Defined at:
  6894 ;;		line 84 in file "code/i2c.c"
  6895 ;; Parameters:    Size  Location     Type
  6896 ;;		None
  6897 ;; Auto vars:     Size  Location     Type
  6898 ;;  handle_write    1    5[COMMON] unsigned char 
  6899 ;; Return value:  Size  Location     Type
  6900 ;;                  1    wreg      void 
  6901 ;; Registers used:
  6902 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6903 ;; Tracked objects:
  6904 ;;		On entry : 0/0
  6905 ;;		On exit  : 0/0
  6906 ;;		Unchanged: 0/0
  6907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6908 ;;      Params:         0       0       0       0       0       0       0       0
  6909 ;;      Locals:         1       0       0       0       0       0       0       0
  6910 ;;      Temps:          1       0       0       0       0       0       0       0
  6911 ;;      Totals:         2       0       0       0       0       0       0       0
  6912 ;;Total ram usage:        2 bytes
  6913 ;; Hardware stack levels used:    1
  6914 ;; Hardware stack levels required when called:    1
  6915 ;; This function calls:
  6916 ;;		i1_write_register
  6917 ;; This function is called by:
  6918 ;;		i1_i2c_isr
  6919 ;; This function uses a non-reentrant model
  6920 ;;
  6921                           
  6922                           
  6923                           ;psect for function i1_handle_write
  6924  0343                     i1_handle_write:	
  6925  0343                     i1l1671:	
  6926                           ;incstack = 0
  6927                           ; Regs used in i1_handle_write: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6928                           
  6929                           
  6930                           ;code/i2c.c: 86:      u8 buf = SSP1BUF;
  6931  0343  0024               	movlb	4	; select bank4
  6932  0344  0811               	movf	17,w	;volatile
  6933  0345  00F4               	movwf	??i1_handle_write
  6934  0346  0874               	movf	??i1_handle_write,w
  6935  0347  00F5               	movwf	i1handle_write@buf
  6936  0348                     i1l1673:	
  6937                           
  6938                           ;code/i2c.c: 88:      if(!SSP1STATbits.D_nA){
  6939  0348  1A94               	btfsc	20,5	;volatile
  6940  0349  2B4B               	goto	u81_21
  6941  034A  2B4C               	goto	u81_20
  6942  034B                     u81_21:	
  6943  034B  2B50               	goto	i1l1677
  6944  034C                     u81_20:	
  6945  034C                     i1l1675:	
  6946                           
  6947                           ;code/i2c.c: 89:    first_write = 1;
  6948  034C  0020               	movlb	0	; select bank0
  6949  034D  01C9               	clrf	_first_write
  6950  034E  0AC9               	incf	_first_write,f
  6951                           
  6952                           ;code/i2c.c: 90:    return;
  6953  034F  2B69               	goto	i1l67
  6954  0350                     i1l1677:	
  6955                           
  6956                           ;code/i2c.c: 92:      if(first_write){
  6957  0350  0020               	movlb	0	; select bank0
  6958  0351  0849               	movf	_first_write,w
  6959  0352  1903               	btfsc	3,2
  6960  0353  2B55               	goto	u82_21
  6961  0354  2B56               	goto	u82_20
  6962  0355                     u82_21:	
  6963  0355  2B5C               	goto	i1l1683
  6964  0356                     u82_20:	
  6965  0356                     i1l1679:	
  6966                           
  6967                           ;code/i2c.c: 93:    current_reg = buf;
  6968  0356  0875               	movf	i1handle_write@buf,w
  6969  0357  00F4               	movwf	??i1_handle_write
  6970  0358  0874               	movf	??i1_handle_write,w
  6971  0359  00CA               	movwf	_current_reg
  6972  035A                     i1l1681:	
  6973                           
  6974                           ;code/i2c.c: 94:    first_write = 0;
  6975  035A  01C9               	clrf	_first_write
  6976                           
  6977                           ;code/i2c.c: 95:      }else{
  6978  035B  2B69               	goto	i1l67
  6979  035C                     i1l1683:	
  6980                           
  6981                           ;code/i2c.c: 96:    write_register(current_reg++,buf);
  6982  035C  0875               	movf	i1handle_write@buf,w
  6983  035D  00F4               	movwf	??i1_handle_write
  6984  035E  0874               	movf	??i1_handle_write,w
  6985  035F  00F0               	movwf	i1write_register@val
  6986  0360  084A               	movf	_current_reg,w
  6987  0361  3183  2390  3183   	fcall	i1_write_register
  6988  0364                     i1l1685:	
  6989  0364  3001               	movlw	1
  6990  0365  00F4               	movwf	??i1_handle_write
  6991  0366  0874               	movf	??i1_handle_write,w
  6992  0367  0020               	movlb	0	; select bank0
  6993  0368  07CA               	addwf	_current_reg,f
  6994  0369                     i1l67:	
  6995  0369  0008               	return
  6996  036A                     __end_ofi1_handle_write:	
  6997                           
  6998                           	psect	text28
  6999  0390                     __ptext28:	
  7000 ;; *************** function i1_write_register *****************
  7001 ;; Defined at:
  7002 ;;		line 100 in file "code/i2c.c"
  7003 ;; Parameters:    Size  Location     Type
  7004 ;;  reg             1    wreg     unsigned char 
  7005 ;;  val             1    0[COMMON] unsigned char 
  7006 ;; Auto vars:     Size  Location     Type
  7007 ;;  reg             1    3[COMMON] unsigned char 
  7008 ;;  write_regist    1    2[COMMON] unsigned char 
  7009 ;; Return value:  Size  Location     Type
  7010 ;;                  1    wreg      void 
  7011 ;; Registers used:
  7012 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7013 ;; Tracked objects:
  7014 ;;		On entry : 0/0
  7015 ;;		On exit  : 0/0
  7016 ;;		Unchanged: 0/0
  7017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7018 ;;      Params:         1       0       0       0       0       0       0       0
  7019 ;;      Locals:         2       0       0       0       0       0       0       0
  7020 ;;      Temps:          1       0       0       0       0       0       0       0
  7021 ;;      Totals:         4       0       0       0       0       0       0       0
  7022 ;;Total ram usage:        4 bytes
  7023 ;; Hardware stack levels used:    1
  7024 ;; This function calls:
  7025 ;;		Nothing
  7026 ;; This function is called by:
  7027 ;;		i1_handle_write
  7028 ;; This function uses a non-reentrant model
  7029 ;;
  7030                           
  7031                           
  7032                           ;psect for function i1_write_register
  7033  0390                     i1_write_register:	
  7034                           
  7035                           ;incstack = 0
  7036                           ; Regs used in i1_write_register: [wreg+fsr1l+fsr1h+status,2+status,0]
  7037                           ;i1write_register@reg stored from wreg
  7038  0390  00F3               	movwf	i1write_register@reg
  7039  0391                     i1l1585:	
  7040                           
  7041                           ;code/i2c.c: 100: static void write_register(u8 reg,u8 val);code/i2c.c: 101: {;code/i2c.
      +                          c: 102:      if(reg >= 10) return;
  7042  0391  300A               	movlw	10
  7043  0392  0273               	subwf	i1write_register@reg,w
  7044  0393  1C03               	skipc
  7045  0394  2B96               	goto	u67_21
  7046  0395  2B97               	goto	u67_20
  7047  0396                     u67_21:	
  7048  0396  2B98               	goto	i1l1589
  7049  0397                     u67_20:	
  7050  0397  2BB5               	goto	i1l73
  7051  0398                     i1l1589:	
  7052                           
  7053                           ;code/i2c.c: 103:      u8 msk = writeable_reg[reg];
  7054  0398  0873               	movf	i1write_register@reg,w
  7055  0399  3E4B               	addlw	(low (_writeable_reg| 0))& (0+255)
  7056  039A  0086               	movwf	6
  7057  039B  0187               	clrf	7
  7058  039C  0801               	movf	1,w
  7059  039D  00F1               	movwf	??i1_write_register
  7060  039E  0871               	movf	??i1_write_register,w
  7061  039F  00F2               	movwf	i1write_register@msk
  7062  03A0                     i1l1591:	
  7063                           
  7064                           ;code/i2c.c: 106:      val &= msk;
  7065  03A0  0872               	movf	i1write_register@msk,w
  7066  03A1  00F1               	movwf	??i1_write_register
  7067  03A2  0871               	movf	??i1_write_register,w
  7068  03A3  05F0               	andwf	i1write_register@val,f
  7069  03A4                     i1l1593:	
  7070                           
  7071                           ;code/i2c.c: 107:      val |= (i2c_registers[reg] & ~msk);
  7072  03A4  0873               	movf	i1write_register@reg,w
  7073  03A5  3E3E               	addlw	(low (_i2c_registers| 0))& (0+255)
  7074  03A6  0086               	movwf	6
  7075  03A7  0187               	clrf	7
  7076  03A8  0972               	comf	i1write_register@msk,w
  7077  03A9  0501               	andwf	1,w
  7078  03AA  00F1               	movwf	??i1_write_register
  7079  03AB  0871               	movf	??i1_write_register,w
  7080  03AC  04F0               	iorwf	i1write_register@val,f
  7081  03AD                     i1l1595:	
  7082                           
  7083                           ;code/i2c.c: 108:  i2c_registers[reg] = val;
  7084  03AD  0870               	movf	i1write_register@val,w
  7085  03AE  00F1               	movwf	??i1_write_register
  7086  03AF  0873               	movf	i1write_register@reg,w
  7087  03B0  3E3E               	addlw	(low (_i2c_registers| 0))& (0+255)
  7088  03B1  0086               	movwf	6
  7089  03B2  0187               	clrf	7
  7090  03B3  0871               	movf	??i1_write_register,w
  7091  03B4  0081               	movwf	1
  7092  03B5                     i1l73:	
  7093  03B5  0008               	return
  7094  03B6                     __end_ofi1_write_register:	
  7095                           
  7096                           	psect	text29
  7097  04B5                     __ptext29:	
  7098 ;; *************** function i1_handle_read *****************
  7099 ;; Defined at:
  7100 ;;		line 76 in file "code/i2c.c"
  7101 ;; Parameters:    Size  Location     Type
  7102 ;;		None
  7103 ;; Auto vars:     Size  Location     Type
  7104 ;;  handle_read     1    3[COMMON] unsigned char 
  7105 ;;  handle_read     1    0        unsigned char 
  7106 ;; Return value:  Size  Location     Type
  7107 ;;                  1    wreg      void 
  7108 ;; Registers used:
  7109 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7110 ;; Tracked objects:
  7111 ;;		On entry : 0/0
  7112 ;;		On exit  : 0/0
  7113 ;;		Unchanged: 0/0
  7114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7115 ;;      Params:         0       0       0       0       0       0       0       0
  7116 ;;      Locals:         2       0       0       0       0       0       0       0
  7117 ;;      Temps:          1       0       0       0       0       0       0       0
  7118 ;;      Totals:         3       0       0       0       0       0       0       0
  7119 ;;Total ram usage:        3 bytes
  7120 ;; Hardware stack levels used:    1
  7121 ;; Hardware stack levels required when called:    1
  7122 ;; This function calls:
  7123 ;;		i1_read_register
  7124 ;; This function is called by:
  7125 ;;		i1_i2c_isr
  7126 ;; This function uses a non-reentrant model
  7127 ;;
  7128                           
  7129                           
  7130                           ;psect for function i1_handle_read
  7131  04B5                     i1_handle_read:	
  7132  04B5                     i1l1665:	
  7133                           ;incstack = 0
  7134                           ; Regs used in i1_handle_read: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7135                           
  7136  04B5  0024               	movlb	4	; select bank4
  7137  04B6  0811               	movf	17,w	;volatile
  7138  04B7                     i1l1667:	
  7139                           
  7140                           ;code/i2c.c: 79:      u8 buf = read_register(current_reg);
  7141  04B7  0020               	movlb	0	; select bank0
  7142  04B8  084A               	movf	_current_reg,w
  7143  04B9  3184  24A6  3184   	fcall	i1_read_register
  7144  04BC  00F1               	movwf	??i1_handle_read
  7145  04BD  0871               	movf	??i1_handle_read,w
  7146  04BE  00F3               	movwf	i1handle_read@buf
  7147  04BF                     i1l1669:	
  7148                           
  7149                           ;code/i2c.c: 80:      SSP1BUF = buf;
  7150  04BF  0873               	movf	i1handle_read@buf,w
  7151  04C0  0024               	movlb	4	; select bank4
  7152  04C1  0091               	movwf	17	;volatile
  7153  04C2                     i1l63:	
  7154  04C2  0008               	return
  7155  04C3                     __end_ofi1_handle_read:	
  7156                           
  7157                           	psect	text30
  7158  04A6                     __ptext30:	
  7159 ;; *************** function i1_read_register *****************
  7160 ;; Defined at:
  7161 ;;		line 111 in file "code/i2c.c"
  7162 ;; Parameters:    Size  Location     Type
  7163 ;;  reg             1    wreg     unsigned char 
  7164 ;; Auto vars:     Size  Location     Type
  7165 ;;  reg             1    0[COMMON] unsigned char 
  7166 ;; Return value:  Size  Location     Type
  7167 ;;                  1    wreg      unsigned char 
  7168 ;; Registers used:
  7169 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7170 ;; Tracked objects:
  7171 ;;		On entry : 0/0
  7172 ;;		On exit  : 0/0
  7173 ;;		Unchanged: 0/0
  7174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7175 ;;      Params:         0       0       0       0       0       0       0       0
  7176 ;;      Locals:         1       0       0       0       0       0       0       0
  7177 ;;      Temps:          0       0       0       0       0       0       0       0
  7178 ;;      Totals:         1       0       0       0       0       0       0       0
  7179 ;;Total ram usage:        1 bytes
  7180 ;; Hardware stack levels used:    1
  7181 ;; This function calls:
  7182 ;;		Nothing
  7183 ;; This function is called by:
  7184 ;;		i1_handle_read
  7185 ;; This function uses a non-reentrant model
  7186 ;;
  7187                           
  7188                           
  7189                           ;psect for function i1_read_register
  7190  04A6                     i1_read_register:	
  7191                           
  7192                           ;incstack = 0
  7193                           ; Regs used in i1_read_register: [wreg+fsr1l+fsr1h+status,2+status,0]
  7194                           ;i1read_register@reg stored from wreg
  7195  04A6  00F0               	movwf	i1read_register@reg
  7196  04A7                     i1l1597:	
  7197                           
  7198                           ;code/i2c.c: 111: static u8 read_register(u8 reg);code/i2c.c: 112: {;code/i2c.c: 113:   
      +                             if(reg >= 10) return 0;
  7199  04A7  300A               	movlw	10
  7200  04A8  0270               	subwf	i1read_register@reg,w
  7201  04A9  1C03               	skipc
  7202  04AA  2CAC               	goto	u68_21
  7203  04AB  2CAD               	goto	u68_20
  7204  04AC                     u68_21:	
  7205  04AC  2CAF               	goto	i1l1603
  7206  04AD                     u68_20:	
  7207  04AD                     i1l1599:	
  7208  04AD  3000               	movlw	0
  7209  04AE  2CB4               	goto	i1l77
  7210  04AF                     i1l1603:	
  7211                           
  7212                           ;code/i2c.c: 114:      return i2c_registers[reg];
  7213  04AF  0870               	movf	i1read_register@reg,w
  7214  04B0  3E3E               	addlw	(low (_i2c_registers| 0))& (0+255)
  7215  04B1  0086               	movwf	6
  7216  04B2  0187               	clrf	7
  7217  04B3  0801               	movf	1,w
  7218  04B4                     i1l77:	
  7219  04B4  0008               	return
  7220  04B5                     __end_ofi1_read_register:	
  7221  007E                     btemp	set	126	;btemp
  7222  007E                     int$flags	set	126
  7223  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    3
    Data        14
    BSS         13
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     30      53
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    i1_i2c_isr->i1_handle_write
    i1_handle_write->i1_write_register
    i1_handle_read->i1_read_register

Critical Paths under _main in BANK0

    _update_rev->_get_timer
    _update_motors->_update_ctl
    _update_ctl->_set_motor
    _set_motor->_set_pwm_mode
    _set_pwm_mode->_set_motor_pps
    _i2c_isr->_handle_write
    _handle_write->_write_register
    _handle_read->_read_register
    _config_pwm->_set_motor_pps

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    9505
                         _config_cpu
                         _config_i2c
                          _config_io
                         _config_pwm
                         _config_rev
                            _i2c_isr
                      _update_motors
                         _update_rev
 ---------------------------------------------------------------------------------
 (1) _update_rev                                           4     4      0     229
                                              9 BANK0      4     4      0
                          _get_timer
                        _reset_timer
                        _start_timer
                         _stop_timer
 ---------------------------------------------------------------------------------
 (2) _stop_timer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_timer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _reset_timer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _get_timer                                            9     7      2      99
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (1) _update_motors                                        0     0      0    6450
                         _update_ctl
 ---------------------------------------------------------------------------------
 (2) _update_ctl                                           4     4      0    6450
                                             26 BANK0      4     4      0
                          _set_motor
                       _set_pwm_mode
 ---------------------------------------------------------------------------------
 (3) _set_motor                                            5     3      2    3661
                                             21 BANK0      5     3      2
                            _set_pwm
                       _set_pwm_mode
 ---------------------------------------------------------------------------------
 (3) _set_pwm_mode                                         6     5      1    2532
                                             15 BANK0      6     5      1
                          _get_a_val
                          _get_b_val
                      _set_motor_pps
 ---------------------------------------------------------------------------------
 (4) _get_b_val                                            3     3      0      31
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) _get_a_val                                            3     3      0      31
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) _set_pwm                                              4     3      1     608
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _i2c_isr                                              0     0      0     480
                        _handle_read
                       _handle_write
 ---------------------------------------------------------------------------------
 (2) _handle_write                                         2     2      0     381
                                              4 BANK0      2     2      0
                     _write_register
 ---------------------------------------------------------------------------------
 (3) _write_register                                       4     3      1     316
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _handle_read                                          3     3      0      99
                                              1 BANK0      3     3      0
                      _read_register
 ---------------------------------------------------------------------------------
 (3) _read_register                                        1     1      0      62
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _config_rev                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_pwm                                           1     1      0    2346
                                             15 BANK0      1     1      0
                      _set_motor_pps
                        _set_pwms_dc
 ---------------------------------------------------------------------------------
 (2) _set_pwms_dc                                          5     2      3     487
                                              0 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (4) _set_motor_pps                                       15    13      2    1859
                                              0 BANK0     15    13      2
 ---------------------------------------------------------------------------------
 (1) _config_io                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_i2c                                           1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _config_cpu                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  0     0      0     296
                          i1_i2c_isr
 ---------------------------------------------------------------------------------
 (7) i1_i2c_isr                                            0     0      0     296
                      i1_handle_read
                     i1_handle_write
 ---------------------------------------------------------------------------------
 (8) i1_handle_write                                       2     2      0     228
                                              4 COMMON     2     2      0
                   i1_write_register
 ---------------------------------------------------------------------------------
 (9) i1_write_register                                     4     3      1     183
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (8) i1_handle_read                                        3     3      0      68
                                              1 COMMON     3     3      0
                    i1_read_register
 ---------------------------------------------------------------------------------
 (9) i1_read_register                                      1     1      0      44
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _config_cpu
   _config_i2c
   _config_io
   _config_pwm
     _set_motor_pps
     _set_pwms_dc
   _config_rev
   _i2c_isr
     _handle_read
       _read_register
     _handle_write
       _write_register
   _update_motors
     _update_ctl
       _set_motor
         _set_pwm
         _set_pwm_mode
           _get_a_val
           _get_b_val
           _set_motor_pps
       _set_pwm_mode
         _get_a_val
         _get_b_val
         _set_motor_pps
   _update_rev
     _get_timer
     _reset_timer
     _start_timer
     _stop_timer

 _isr (ROOT)
   i1_i2c_isr
     i1_handle_read
       i1_read_register
     i1_handle_write
       i1_write_register

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      3F       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     1E      35       6       66.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      3F      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Sep  1 15:51:48 2020

        i1handle_write@buf 0075              get_b_val@mode 0022                __CFG_CP$OFF 0000  
                       l60 0465                         l55 038F                         l63 04A5  
                       l73 0342                         l67 031B                         l77 0486  
            _update_motors 04F1                        l100 0496                        l131 04E7  
                      l310 04D5                        l313 0417                        l321 04F7  
                      l235 0271                        l243 0416                        l163 02F2  
                      l315 0435                        l156 01DE                        l324 04FA  
                      l253 03F6                        l238 02B5                        l166 04F4  
                      l318 04EC                        l335 0229                        l280 0454  
                      l277 0123                        l289 0182                        u930 003F  
                      u931 003E                        u940 0057                        u941 0056  
                      u950 006F                        u951 006D                        u960 0070  
                      u970 0079                        u971 0077                        u980 007A  
                      u995 00AC                        _isr 0004                _start_timer 04F8  
             __CFG_BORV$LO 0000                        wreg 0009               __CFG_IESO$ON 0000  
             __CFG_LVP$OFF 0000               __CFG_ZCD$OFF 0000                       l2001 03DA  
                     l2013 03DE                       l2005 03DC                       l2111 02F3  
                     l2031 0126                       l2201 04E2                       l2105 0497  
                     l2121 030C                       l2113 02F9                       l2041 0169  
                     l2033 0127                       l2203 04E5                       l2211 0284  
                     l2107 0499                       l2123 030E                       l2115 02FE  
                     l2043 016A                       l2035 013C                       l2019 03E0  
                     l2027 0438                       l2205 04E6                       l2221 0299  
                     l2213 0287                       l2061 0481                       l2109 04A2  
                     l2125 0316                       l2117 0302                       l2037 0151  
                     l2029 0448                       l2141 02EC                       l2133 02BD  
                     l2143 022C                       l2223 02A0                       l2215 0288  
                     l2207 0272                       l2231 04CF                       l2055 0479  
                     l2071 032D                       l2119 0308                       l2039 0166  
                     l2047 016C                       l2135 02CA                       l2127 02B6  
                     l2151 0417                       l2145 026A                       l2225 02A7  
                     l2217 028B                       l2209 0283                       l2233 04D2  
                     l2057 047F                       l2073 0331                       l2065 031E  
                     l2081 018E                       l2137 02DF                       l2129 02BB  
                     l2153 0426                       l2161 04F8                       l2241 01E8  
                     l2171 037D                       l2163 036A                       l2147 026C  
                     l2227 02AE                       l2219 0293                       l2075 033A  
                     l2091 01B9                       l2083 0195                       l2139 02E7  
                     l2235 04F1                       l2243 01F0                       l2251 0208  
                     l2181 0388                       l2173 0380                       l2165 0376  
                     l2149 0270                       l2229 04CD                       l2069 0325  
                     l2093 01C1                       l2085 019D                       l2077 0185  
                     l2157 04E8                       l2261 021E                       l2253 020E  
                     l2245 01FD                       l2237 01DF                       l2183 038A  
                     l2175 0382                       l2167 0378                       l2431 0115  
                     l2191 0460                       l2423 01D0                       l2087 01A7  
                     l2079 0186                       l2159 04F5                       l2263 0224  
                     l2255 0213                       l2247 0203                       l2239 01E4  
                     l2271 03C2                       l2185 038D                       l2177 0383  
                     l2169 037B                       l2193 0463                       l2425 03E8  
                     l2089 01AF                       l2097 01C8                       l2257 0214  
                     l2249 0205                       l2281 03D1                       l2273 03C5  
                     l2265 03B6                       l2179 0385                       l2195 0487  
                     l2187 0455                       l2427 0408                       l2259 0218  
                     l2275 03C8                       l2267 03BC                       l2197 048E  
                     l2189 045C                       l2429 0174                       l2277 03CD  
                     l2269 03BF                       l2199 0490                       l2279 03CE  
                     l1921 003F                       l1931 005A                       l1923 0042  
                     l1941 008B                       l1933 0065                       l1925 004D  
                     l1951 00BF                       l1943 008F                       l1935 0069  
                     l1927 0051                       l1919 0039                       l1961 00F7  
                     l1953 00CC                       l1945 0098                       l1937 0073  
                     l1929 0057                       l1955 00D0                       l1947 00A5  
                     l1939 007E                       l1971 03F9                       l1957 00E6  
                     l1949 00A9                       l1965 010D                       l1981 03FC  
                     l1973 03FA                       l1959 00F3                       l1991 0400  
                     l1985 03FE                       l1999 03D9                       ?_isr 0070  
                     u1005 00B2                       u1110 047F                       u1015 00D3  
                     u1111 047E                       u1120 0324                       u1025 00D9  
                     u1121 0323                       u1105 015E                       u1130 02FE  
                     u1035 00FA                       u1131 02FD                       u1140 0308  
                     u1300 0213                       u1045 0100                       u1205 0244  
                     u1141 0307                       u1301 0212                       u1310 021E  
                     u1215 024E                       u1055 012A                       u1311 021D  
                     u1160 02CA                       u1240 0426                       u1320 03CD  
                     u1225 0259                       u1065 0134                       u1161 02C9  
                     u1241 0425                       u1321 03CC                       u1250 045C  
                     u1170 02F2                       u1154 02C2                       u1235 0263  
                     u1251 045B                       u1075 013F                       u1171 02F1  
                     u1155 02C1                       u1260 01E8                       u1085 0149  
                     u1261 01E7                       _LATA 010C                       u1270 01FD  
                     _LATB 010D                       u1095 0154                       u1271 01FC  
                     _LATC 010E                       u1280 0203                       u1185 022F  
                     u1281 0202                       u1290 020E                       u1195 0239  
                     u1291 020D                       u1275 01F9                       _T2PR 0494  
                     i1l60 0476                       i1l63 04C2                       i1l73 03B5  
                     i1l67 0369                       i1l77 04B4                       _WPUA 020C  
                     _WPUB 020D                       _WPUC 020E                       _WPUE 0210  
             __CFG_WRT$OFF 0000              __CFG_FCMEN$ON 0000                       _main 03B6  
                     fsr0h 0005                       fsr1h 0007                       indf0 0000  
                     fsr0l 0004                       indf1 0001                       fsr1l 0006  
                     btemp 007E              __CFG_BOREN$ON 0000                       start 0011  
            __CFG_MCLRE$ON 0000              _i2c_registers 003E            __end_of_i2c_isr 0466  
                    ??_isr 0076             ?_update_motors 0070              __CFG_PLLEN$ON 0000  
                    ?_main 0070              __CFG_WDTE$OFF 0000                      _T2CON 0495  
                    _T3CON 001E                      i1l128 000F                      _TMR3H 001D  
                    _TMR3L 001C                      u81_20 034C                      u81_21 034B  
                    _TRISA 008C                      _TRISB 008D                      _TRISC 008E  
                    u82_20 0356                      u90_20 046D                      u82_21 0355  
                    u90_21 046C                      u67_20 0397                      u91_20 000B  
                    u67_21 0396                      u91_21 000A                      u68_20 04AD  
                    u68_21 04AC           i1_write_register 0390          write_register@reg 0023  
       __size_ofi1_i2c_isr 0011          write_register@msk 0022          write_register@val 0020  
 __size_ofi1_read_register 000F            __end_of_set_pwm 0183                      status 0003  
                    wtemp0 007E            __initialization 0013     __size_ofi1_handle_read 000E  
             __end_of_main 03D7         set_motor_pps@lat_a 002C         set_motor_pps@lat_b 002D  
       set_motor_pps@motor 0029         set_motor_pps@pps_a 002A         set_motor_pps@pps_b 002B  
           __CFG_LPBOR$OFF 0000                     ??_main 003E             _i2c_slave_addr 04FD  
     __end_of_handle_write 031C       __size_of_handle_read 000F                     _ANSELA 018C  
                   _ANSELB 018D                     _ANSELC 018E           ??_write_register 0021  
                   _RA0PPS 0E90                     _RA1PPS 0E91                     _RA2PPS 0E92  
                   _RA3PPS 0E93                     _RA4PPS 0E94                     _RA5PPS 0E95  
                   _RC2PPS 0EA2                     _RA6PPS 0E96                     _RC3PPS 0EA3  
                   _RA7PPS 0E97                     i1l1603 04AF                     i1l1591 03A0  
                   i1l1671 0343                     i1l1751 0471                     i1l1665 04B5  
                   i1l1593 03A4                     i1l1585 0391                     i1l1681 035A  
                   i1l1673 0348                     i1l1753 0474                     i1l1667 04B7  
                   i1l1595 03AD                     i1l1683 035C                     i1l1675 034C  
                   i1l1747 0466                     i1l1755 0006                     i1l1597 04A7  
                   i1l1669 04BF                     i1l1589 0398                     i1l1685 0364  
                   i1l1677 0350                     i1l1749 046D                     i1l1757 000B  
                   i1l1599 04AD                     i1l1679 0356                     i1l1759 000C  
                   _INTCON 000B                     _OSCCON 009B                  ??_i2c_isr 0026  
           __CFG_PWRTE$OFF 0000               ?_reset_timer 0070            ??_update_motors 003E  
           __CFG_STVREN$ON 0000          __end_ofi1_i2c_isr 0477               ?_set_pwms_dc 0020  
   __end_of_i2c_slave_addr 04FE               __pdataCOMMON 0076              i1_handle_read 04B5  
                ??_set_pwm 0021    __end_of__initialization 0033     __size_of_read_register 0010  
        ??i1_read_register 0070             __pcstackCOMMON 0070               __pidataBANK0 04C3  
  __size_ofi1_handle_write 0027        set_motor_pps@a_mode 0020        set_motor_pps@b_mode 0021  
             ?_start_timer 0070             ?i1_handle_read 0070         __size_of_get_a_val 0020  
       __size_of_get_b_val 0020         __size_of_config_io 0010      __end_of_set_motor_pps 0124  
       __size_of_get_timer 001F                 __pbssBANK0 003E   __end_ofi1_write_register 03B6  
               __pmaintext 03B6            __CFG_PPS1WAY$ON 0000                 __pintentry 0004  
    __size_of_handle_write 0029              _read_register 0477         __size_of_set_motor 005C  
               _config_i2c 036A          _set_motor_pps$390 0027          _set_motor_pps$388 0025  
               _config_cpu 04E2                 _config_rev 04CD                 _config_pwm 0272  
                  _PWM3DCH 0615                    _PWM3DCL 0614                    _PWM4DCH 0618  
                  _PWM4DCL 0617                    _PWM5DCH 0D94                    _PWM5DCL 0D93  
                  _PWM3CON 0616                    _PWM4CON 0619                    _PWM5CON 0D9B  
                  _PWM9DCH 061B                    _PWM9DCL 061A                    _PWM5PHH 0D92  
                  _PWM9CON 061C                    _PWM5PHL 0D91                    _SSP1ADD 0212  
                  _PWM5PRH 0D96                    _PWM5PRL 0D95                    _SSP1BUF 0211  
            _writeable_reg 004B                    _i2c_isr 0455               _handle_write 02F3  
        __end_of_get_a_val 0417          __end_of_get_b_val 03F7          __end_of_config_io 0497  
        __end_of_get_timer 0436       __size_of_reset_timer 0005            handle_write@buf 0025  
           ?_read_register 0070                    __ptext1 01DF                    __ptext2 04F5  
                  __ptext3 04F8                    __ptext4 04E8                    __ptext5 0417  
                  __ptext6 04F1                    __ptext7 02B6                    __ptext8 0183  
                  __ptext9 0436            ??i1_handle_read 0071       __size_of_set_pwms_dc 0048  
            ?_set_pwm_mode 002F               __size_of_isr 000D                  _T3CONbits 001E  
                  _set_pwm 0124                    clrloop0 04DD       end_of_initialization 0033  
                  init_ram 04D6                    initloop 04D7          __end_of_set_motor 01DF  
           i1_handle_write 0343        i1write_register@reg 0073        i1write_register@msk 0072  
      i1write_register@val 0070                  _PWM5LDCON 0D9F          set_pwm_mode@motor 0032  
                _PORTBbits 000D                 _prev_steps 0048                  i1_i2c_isr 0466  
           ??_set_pwm_mode 0030                  _SSPDATPPS 0E3B                  _SSPCLKPPS 0E3A  
            ??_handle_read 0021           __CFG_FOSC$INTOSC 0000                ?_config_i2c 0070  
              ?_config_cpu 0070                ?_config_rev 0070                ?_config_pwm 0070  
               _update_ctl 02B6            i1_read_register 04A6                 _update_rev 01DF  
     __size_of_start_timer 0003                 get_timer@h 0028                 get_timer@l 0027  
   __end_ofi1_handle_write 036A                 _stop_timer 04F5            ??_read_register 0020  
    __end_of_update_motors 04F5              __pidataCOMMON 04ED                 ?i1_i2c_isr 0070  
      start_initialization 0013                __end_of_isr 0011                update_ctl@c 003C  
              update_ctl@i 003D                update_rev@t 002A        __end_of_handle_read 04A6  
          ?i1_handle_write 0070          ?i1_write_register 0070        __size_of_config_i2c 0026  
  __size_of_write_register 0027        __size_of_config_cpu 0006        __size_of_config_rev 0009  
      __size_of_config_pwm 0044              _PWM5LDCONbits 0D9F         ??i1_write_register 0071  
              __pdataBANK0 004B             set_motor@motor 0039    __end_ofi1_read_register 04B5  
                ___latbits 0001              __pcstackBANK0 0020             set_motor_pps@x 002E  
              ?_update_ctl 0070                ?_update_rev 0070       __end_of_set_pwm_mode 0455  
                 ?_i2c_isr 0070                ?_stop_timer 0070             handle_read@buf 0023  
   __size_of_set_motor_pps 00ED                  _get_a_val 03F7                  _get_b_val 03D7  
                _config_io 0487                  _get_timer 0417                ??i1_i2c_isr 0076  
              _handle_read 0497                   ?_set_pwm 0020                   _T2CLKCON 0497  
                clear_ram0 04DC                   _PIE1bits 0091                 set_pwm@pwm 0020  
            ??_reset_timer 0020                   _PIR1bits 0011                  _set_motor 0183  
      __size_of_update_ctl 003D        __size_of_update_rev 004B                   _SSP1CON1 0215  
                 _SSP1CON2 0216                   _SSP1CON3 0217           set_pwm_mode@mode 002F  
            ??_set_pwms_dc 0023                 ?_get_a_val 0070                 ?_get_b_val 0070  
               ?_config_io 0070                 ?_get_timer 0020           ?i1_read_register 0070  
    __end_ofi1_handle_read 04C3               ??_config_i2c 0020               ??_config_cpu 0020  
             ??_config_rev 0020               ??_config_pwm 002F        __size_of_stop_timer 0003  
            _set_motor_pps 0037                _first_write 0049           __size_of_i2c_isr 0011  
           _write_register 031C             _int_time_delay 04FB                 ?_set_motor 0035  
       __end_of_config_i2c 0390         __end_of_config_cpu 04E8         __end_of_config_rev 04D6  
       __end_of_config_pwm 02B6        __end_of_reset_timer 04ED           read_register@reg 0020  
      update_rev@steps_buf 002C              ??_start_timer 0020                _current_reg 004A  
      __end_of_set_pwms_dc 0272             ?_set_motor_pps 0020                   __ptext10 03D7  
                 __ptext11 03F7                   __ptext20 022A                   __ptext12 0124  
                 __ptext21 0037                   __ptext13 0455                   __ptext30 04A6  
                 __ptext22 0487                   __ptext14 02F3                   __ptext23 036A  
                 __ptext15 031C                   __ptext24 04E2                   __ptext16 0497  
                 __ptext17 0477                   __ptext26 0466                   __ptext18 04CD  
                 __ptext27 0343                   __ptext19 0272                   __ptext28 0390  
                 __ptext29 04B5           __size_of_set_pwm 005F              set_pwm_mode@a 0033  
            set_pwm_mode@b 0034      __size_of_set_pwm_mode 001F           ??i1_handle_write 0074  
            set_pwms_dc@m3 0024              set_pwms_dc@m4 0020              set_pwms_dc@m5 0022  
            set_pwms_dc@m9 0021              __size_of_main 0021     __end_of_write_register 0343  
   __end_of_int_time_delay 04FD                   int$flags 007E                ??_get_a_val 0020  
              ??_get_b_val 0020               _SSP1STATbits 0214                ??_config_io 0020  
    __end_of_read_register 0487                ??_get_timer 0022               _set_pwm_mode 0436  
__size_ofi1_write_register 0026               ??_update_ctl 003A               ??_update_rev 0029  
             set_motor@dir 0035               set_motor@pwm 0036               set_pwm@motor 0023  
      __end_of_start_timer 04FB                   intlevel1 0000     __size_of_update_motors 0004  
        __CFG_CLKOUTEN$OFF 0000            ?_write_register 0020                _SSP1CONbits 0215  
            ?_handle_write 0070                _reset_timer 04E8               ??_stop_timer 0020  
              ??_set_motor 0037         __end_of_update_ctl 02F3         __end_of_update_rev 022A  
               _PWM5CLKCON 0D9E                _set_pwms_dc 022A              __pstringtext1 04FB  
            __pstringtext2 04FD                 _OPTION_REG 0097               ?_handle_read 0070  
          ??_set_motor_pps 0022           i1handle_read@buf 0073               _pps_pwm_vals 0076  
       __end_of_stop_timer 04F8             ??_handle_write 0024              get_a_val@mode 0022  
       i1read_register@reg 0070  
